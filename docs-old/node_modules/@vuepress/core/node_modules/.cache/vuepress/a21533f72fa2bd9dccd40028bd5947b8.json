{"remainingRequest":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/tutorials/go-built-in.md?vue&type=template&id=7e684bfc&","dependencies":[{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/tutorials/go-built-in.md","mtime":1673295761294},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/cache-loader/dist/cjs.js","mtime":1673296285960},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1673296286086},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/cache-loader/dist/cjs.js","mtime":1673296285960},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/vue-loader/lib/index.js","mtime":1673296285952},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/@vuepress/markdown-loader/index.js","mtime":1673296286103}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PCEtLS0Kb3JkZXI6IDIKLS0tPgo8aDEgaWQ9ImNyZWF0aW5nLWEtYnVpbHQtaW4tYXBwbGljYXRpb24taW4tZ28iPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjY3JlYXRpbmctYS1idWlsdC1pbi1hcHBsaWNhdGlvbi1pbi1nbyI+IzwvYT4gQ3JlYXRpbmcgYSBidWlsdC1pbiBhcHBsaWNhdGlvbiBpbiBHbzwvaDE+CjxoMiBpZD0iZ3VpZGUtYXNzdW1wdGlvbnMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjZ3VpZGUtYXNzdW1wdGlvbnMiPiM8L2E+IEd1aWRlIGFzc3VtcHRpb25zPC9oMj4KPHA+VGhpcyBndWlkZSBpcyBkZXNpZ25lZCBmb3IgYmVnaW5uZXJzIHdobyB3YW50IHRvIGdldCBzdGFydGVkIHdpdGggYSBUZW5kZXJtaW50CkNvcmUgYXBwbGljYXRpb24gZnJvbSBzY3JhdGNoLiBJdCBkb2VzIG5vdCBhc3N1bWUgdGhhdCB5b3UgaGF2ZSBhbnkgcHJpb3IKZXhwZXJpZW5jZSB3aXRoIFRlbmRlcm1pbnQgQ29yZS48L3A+CjxwPlRlbmRlcm1pbnQgQ29yZSBpcyBhIHNlcnZpY2UgdGhhdCBwcm92aWRlcyBhIEJ5emFudGluZSBGYXVsdCBUb2xlcmFudCBjb25zZW5zdXMgZW5naW5lCmZvciBzdGF0ZS1tYWNoaW5lIHJlcGxpY2F0aW9uLiBUaGUgcmVwbGljYXRlZCBzdGF0ZS1tYWNoaW5lLCBvciAmcXVvdDthcHBsaWNhdGlvbiZxdW90OywgY2FuIGJlIHdyaXR0ZW4KaW4gYW55IGxhbmd1YWdlIHRoYXQgY2FuIHNlbmQgYW5kIHJlY2VpdmUgcHJvdG9jb2wgYnVmZmVyIG1lc3NhZ2VzIGluIGEgY2xpZW50LXNlcnZlciBtb2RlbC4KQXBwbGljYXRpb25zIHdyaXR0ZW4gaW4gR28gY2FuIGFsc28gdXNlIFRlbmRlcm1pbnQgYXMgYSBsaWJyYXJ5IGFuZCBydW4gdGhlIHNlcnZpY2UgaW4gdGhlIHNhbWUKcHJvY2VzcyBhcyB0aGUgYXBwbGljYXRpb24uPC9wPgo8cD5CeSBmb2xsb3dpbmcgYWxvbmcgdGhpcyB0dXRvcmlhbCB5b3Ugd2lsbCBjcmVhdGUgYSBUZW5kZXJtaW50IENvcmUgYXBwbGljYXRpb24gY2FsbGVkIGt2c3RvcmUsCmEgKHZlcnkpIHNpbXBsZSBkaXN0cmlidXRlZCBCRlQga2V5LXZhbHVlIHN0b3JlLgpUaGUgYXBwbGljYXRpb24gd2lsbCBiZSB3cml0dGVuIGluIEdvIGFuZDxicj4Kc29tZSB1bmRlcnN0YW5kaW5nIG9mIHRoZSBHbyBwcm9ncmFtbWluZyBsYW5ndWFnZSBpcyBleHBlY3RlZC4KSWYgeW91IGhhdmUgbmV2ZXIgd3JpdHRlbiBHbywgeW91IG1heSB3YW50IHRvIGdvIHRocm91Z2ggPGEgaHJlZj0iaHR0cHM6Ly9sZWFybnhpbnltaW51dGVzLmNvbS9kb2NzL2dvLyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+TGVhcm4gWCBpbiBZIG1pbnV0ZXMKV2hlcmUgWD1HbzxPdXRib3VuZExpbmsvPjwvYT4gZmlyc3QsIHRvIGZhbWlsaWFyaXplCnlvdXJzZWxmIHdpdGggdGhlIHN5bnRheC48L3A+CjxwPk5vdGU6IFBsZWFzZSB1c2UgdGhlIGxhdGVzdCByZWxlYXNlZCB2ZXJzaW9uIG9mIHRoaXMgZ3VpZGUgYW5kIG9mIFRlbmRlcm1pbnQuCldlIHN0cm9uZ2x5IGFkdmlzZSBhZ2FpbnN0IHVzaW5nIHVucmVsZWFzZWQgY29tbWl0cyBmb3IgeW91ciBkZXZlbG9wbWVudC48L3A+CjxoMyBpZD0iYnVpbHQtaW4tYXBwLXZzLWV4dGVybmFsLWFwcCI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNidWlsdC1pbi1hcHAtdnMtZXh0ZXJuYWwtYXBwIj4jPC9hPiBCdWlsdC1pbiBhcHAgdnMgZXh0ZXJuYWwgYXBwPC9oMz4KPHA+T24gdGhlIG9uZSBoYW5kLCB0byBnZXQgbWF4aW11bSBwZXJmb3JtYW5jZSB5b3UgY2FuIHJ1biB5b3VyIGFwcGxpY2F0aW9uIGluCnRoZSBzYW1lIHByb2Nlc3MgYXMgdGhlIFRlbmRlcm1pbnQgQ29yZSwgYXMgbG9uZyBhcyB5b3VyIGFwcGxpY2F0aW9uIGlzIHdyaXR0ZW4gaW4gR28uCjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkayIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+Q29zbW9zIFNESzxPdXRib3VuZExpbmsvPjwvYT4gaXMgd3JpdHRlbgp0aGlzIHdheS4KVGhpcyBpcyB0aGUgYXBwcm9hY2ggZm9sbG93ZWQgaW4gdGhpcyB0dXRvcmlhbC48L3A+CjxwPk9uIHRoZSBvdGhlciBoYW5kLCBoYXZpbmcgYSBzZXBhcmF0ZSBhcHBsaWNhdGlvbiBtaWdodCBnaXZlIHlvdSBiZXR0ZXIgc2VjdXJpdHkKZ3VhcmFudGVlcyBhcyB0d28gcHJvY2Vzc2VzIHdvdWxkIGJlIGNvbW11bmljYXRpbmcgdmlhIGVzdGFibGlzaGVkIGJpbmFyeSBwcm90b2NvbC4KVGVuZGVybWludCBDb3JlIHdpbGwgbm90IGhhdmUgYWNjZXNzIHRvIGFwcGxpY2F0aW9uJ3Mgc3RhdGUuCklmIHRoYXQgaXMgdGhlIHdheSB5b3Ugd2lzaCB0byBwcm9jZWVkLCB1c2UgdGhlIDxSb3V0ZXJMaW5rIHRvPSIvdHV0b3JpYWxzL2dvLmh0bWwiPkNyZWF0aW5nIGFuIGFwcGxpY2F0aW9uIGluIEdvPC9Sb3V0ZXJMaW5rPiBndWlkZSBpbnN0ZWFkIG9mIHRoaXMgb25lLjwvcD4KPGgyIGlkPSJfMS0xLWluc3RhbGxpbmctZ28iPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjXzEtMS1pbnN0YWxsaW5nLWdvIj4jPC9hPiAxLjEgSW5zdGFsbGluZyBHbzwvaDI+CjxwPlZlcmlmeSB0aGF0IHlvdSBoYXZlIHRoZSBsYXRlc3QgdmVyc2lvbiBvZiBHbyBpbnN0YWxsZWQgKHJlZmVyIHRvIHRoZSA8YSBocmVmPSJodHRwczovL2dvbGFuZy5vcmcvZG9jL2luc3RhbGwiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPm9mZmljaWFsIGd1aWRlIGZvciBpbnN0YWxsaW5nIEdvPE91dGJvdW5kTGluay8+PC9hPik6PC9wPgoKICAgIDx0bS1jb2RlLWJsb2NrIGNsYXNzPSJjb2RlYmxvY2siIGxhbmd1YWdlPSJiYXNoIiBiYXNlNjQ9IkpDQm5ieUIyWlhKemFXOXVDbWR2SUhabGNuTnBiMjRnWjI4eExqRTVMaklnWkdGeWQybHVMMkZ0WkRZMENnPT0iPjwvdG0tY29kZS1ibG9jaz4KICAgIDxoMiBpZD0iXzEtMi1jcmVhdGluZy1hLW5ldy1nby1wcm9qZWN0Ij48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI18xLTItY3JlYXRpbmctYS1uZXctZ28tcHJvamVjdCI+IzwvYT4gMS4yIENyZWF0aW5nIGEgbmV3IEdvIHByb2plY3Q8L2gyPgo8cD5XZSdsbCBzdGFydCBieSBjcmVhdGluZyBhIG5ldyBHbyBwcm9qZWN0LjwvcD4KCiAgICA8dG0tY29kZS1ibG9jayBjbGFzcz0iY29kZWJsb2NrIiBsYW5ndWFnZT0iYmFzaCIgYmFzZTY0PSJiV3RrYVhJZ2EzWnpkRzl5WlFvPSI+PC90bS1jb2RlLWJsb2NrPgogICAgPHA+SW5zaWRlIHRoZSBleGFtcGxlIGRpcmVjdG9yeSwgY3JlYXRlIGEgPGNvZGU+bWFpbi5nbzwvY29kZT4gZmlsZSB3aXRoIHRoZSBmb2xsb3dpbmcgY29udGVudDo8L3A+CgogICAgPHRtLWNvZGUtYmxvY2sgY2xhc3M9ImNvZGVibG9jayIgbGFuZ3VhZ2U9ImdvIiBiYXNlNjQ9ImNHRmphMkZuWlNCdFlXbHVDZ3BwYlhCdmNuUWdLQW9nSUNBZ0puRjFiM1E3Wm0xMEpuRjFiM1E3Q2lrS0NtWjFibU1nYldGcGJpZ3BJSHNLSUNBZ0lHWnRkQzVRY21sdWRHeHVLQ1p4ZFc5ME8waGxiR3h2TENCVVpXNWtaWEp0YVc1MElFTnZjbVVtY1hWdmREc3BDbjBLIj48L3RtLWNvZGUtYmxvY2s+CiAgICA8cD5XaGVuIHJ1biwgdGhpcyBzaG91bGQgcHJpbnQgJnF1b3Q7SGVsbG8sIFRlbmRlcm1pbnQgQ29yZSZxdW90OyB0byB0aGUgc3RhbmRhcmQgb3V0cHV0LjwvcD4KCiAgICA8dG0tY29kZS1ibG9jayBjbGFzcz0iY29kZWJsb2NrIiBsYW5ndWFnZT0iYmFzaCIgYmFzZTY0PSJZMlFnYTNaemRHOXlaUW9rSUdkdklISjFiaUJ0WVdsdUxtZHZDa2hsYkd4dkxDQlVaVzVrWlhKdGFXNTBJRU52Y21VSyI+PC90bS1jb2RlLWJsb2NrPgogICAgPHA+V2UgYXJlIGdvaW5nIHRvIHVzZSA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ29sYW5nL2dvL3dpa2kvTW9kdWxlcyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+R28gbW9kdWxlczxPdXRib3VuZExpbmsvPjwvYT4gZm9yCmRlcGVuZGVuY3kgbWFuYWdlbWVudCwgc28gbGV0J3Mgc3RhcnQgYnkgaW5jbHVkaW5nIGEgZGVwZW5kZW5jeSBvbiB0aGUgbGF0ZXN0IHZlcnNpb24gb2YKVGVuZGVybWludC48L3A+CgogICAgPHRtLWNvZGUtYmxvY2sgY2xhc3M9ImNvZGVibG9jayIgbGFuZ3VhZ2U9ImJhc2giIGJhc2U2ND0iWjI4Z2JXOWtJR2x1YVhRZ2EzWnpkRzl5WlFwbmJ5Qm5aWFFnWjJsMGFIVmlMbU52YlM5MFpXNWtaWEp0YVc1MEwzUmxibVJsY20xcGJuUkFiR0YwWlhOMENnPT0iPjwvdG0tY29kZS1ibG9jaz4KICAgIDxwPkFmdGVyIHJ1bm5pbmcgdGhlIGFib3ZlIGNvbW1hbmRzIHlvdSB3aWxsIHNlZSB0d28gZ2VuZXJhdGVkIGZpbGVzLCA8Y29kZT5nby5tb2Q8L2NvZGU+IGFuZCA8Y29kZT5nby5zdW08L2NvZGU+LgpUaGUgZ28ubW9kIGZpbGUgc2hvdWxkIGxvb2sgc2ltaWxhciB0bzo8L3A+CgogICAgPHRtLWNvZGUtYmxvY2sgY2xhc3M9ImNvZGVibG9jayIgbGFuZ3VhZ2U9ImdvIiBiYXNlNjQ9ImJXOWtkV3hsSUdkcGRHaDFZaTVqYjIwdmJXVXZaWGhoYlhCc1pRb0taMjhnTVM0eE9Rb0tjbVZ4ZFdseVpTQW9DZ2xuYVhSb2RXSXVZMjl0TDNSbGJtUmxjbTFwYm5RdmRHVnVaR1Z5YldsdWRDQjJNQzR6Tnk0d0Npa0siPjwvdG0tY29kZS1ibG9jaz4KICAgIDxwPkFzIHlvdSB3cml0ZSB0aGUga3ZzdG9yZSBhcHBsaWNhdGlvbiwgeW91IGNhbiByZWJ1aWxkIHRoZSBiaW5hcnkgYnkKcHVsbGluZyBhbnkgbmV3IGRlcGVuZGVuY2llcyBhbmQgcmVjb21waWxpbmcgaXQuPC9wPgoKICAgIDx0bS1jb2RlLWJsb2NrIGNsYXNzPSJjb2RlYmxvY2siIGxhbmd1YWdlPSJzaCIgYmFzZTY0PSJaMjhnWjJWMENtZHZJR0oxYVd4a0NnPT0iPjwvdG0tY29kZS1ibG9jaz4KICAgIDxoMiBpZD0iXzEtMy13cml0aW5nLWEtdGVuZGVybWludC1jb3JlLWFwcGxpY2F0aW9uIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI18xLTMtd3JpdGluZy1hLXRlbmRlcm1pbnQtY29yZS1hcHBsaWNhdGlvbiI+IzwvYT4gMS4zIFdyaXRpbmcgYSBUZW5kZXJtaW50IENvcmUgYXBwbGljYXRpb248L2gyPgo8cD5UZW5kZXJtaW50IENvcmUgY29tbXVuaWNhdGVzIHdpdGggdGhlIGFwcGxpY2F0aW9uIHRocm91Z2ggdGhlIEFwcGxpY2F0aW9uCkJsb2NrQ2hhaW4gSW50ZXJmYWNlIChBQkNJKS4gVGhlIG1lc3NhZ2VzIGV4Y2hhbmdlZCB0aHJvdWdoIHRoZSBpbnRlcmZhY2UgYXJlCmRlZmluZWQgaW4gdGhlIEFCQ0kgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3RlbmRlcm1pbnQvdGVuZGVybWludC9ibG9iL21haW4vcHJvdG8vdGVuZGVybWludC9hYmNpL3R5cGVzLnByb3RvIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5wcm90b2J1ZgpmaWxlPE91dGJvdW5kTGluay8+PC9hPi48L3A+CjxwPldlIGJlZ2luIGJ5IGNyZWF0aW5nIHRoZSBiYXNpYyBzY2FmZm9sZGluZyBmb3IgYW4gQUJDSSBhcHBsaWNhdGlvbiBieQpjcmVhdGluZyBhIG5ldyB0eXBlLCA8Y29kZT5LVlN0b3JlQXBwbGljYXRpb248L2NvZGU+LCB3aGljaCBpbXBsZW1lbnRzIHRoZQptZXRob2RzIGRlZmluZWQgYnkgdGhlIDxjb2RlPmFiY2l0eXBlcy5BcHBsaWNhdGlvbjwvY29kZT4gaW50ZXJmYWNlLjwvcD4KPHA+Q3JlYXRlIGEgZmlsZSBjYWxsZWQgPGNvZGU+YXBwLmdvPC9jb2RlPiB3aXRoIHRoZSBmb2xsb3dpbmcgY29udGVudHM6PC9wPgoKICAgIDx0bS1jb2RlLWJsb2NrIGNsYXNzPSJjb2RlYmxvY2siIGxhbmd1YWdlPSJnbyIgYmFzZTY0PSJjR0ZqYTJGblpTQnRZV2x1Q2dwcGJYQnZjblFnS0FvSllXSmphWFI1Y0dWeklDWnhkVzkwTzJkcGRHaDFZaTVqYjIwdmRHVnVaR1Z5YldsdWRDOTBaVzVrWlhKdGFXNTBMMkZpWTJrdmRIbHdaWE1tY1hWdmREc0tLUW9LZEhsd1pTQkxWbE4wYjNKbFFYQndiR2xqWVhScGIyNGdjM1J5ZFdOMGUzMEtDblpoY2lCZklHRmlZMmwwZVhCbGN5NUJjSEJzYVdOaGRHbHZiaUE5SUNncVMxWlRkRzl5WlVGd2NHeHBZMkYwYVc5dUtTaHVhV3dwQ2dwbWRXNWpJRTVsZDB0V1UzUnZjbVZCY0hCc2FXTmhkR2x2YmlncElDcExWbE4wYjNKbFFYQndiR2xqWVhScGIyNGdld29KY21WMGRYSnVJQ1poYlhBN1MxWlRkRzl5WlVGd2NHeHBZMkYwYVc5dWUzMEtmUW9LWm5WdVl5QW9ZWEJ3SUNwTFZsTjBiM0psUVhCd2JHbGpZWFJwYjI0cElFbHVabThvYVc1bWJ5QmhZbU5wZEhsd1pYTXVVbVZ4ZFdWemRFbHVabThwSUdGaVkybDBlWEJsY3k1U1pYTndiMjV6WlVsdVptOGdld29KY21WMGRYSnVJR0ZpWTJsMGVYQmxjeTVTWlhOd2IyNXpaVWx1Wm05N2ZRcDlDZ3BtZFc1aklDaGhjSEFnS2t0V1UzUnZjbVZCY0hCc2FXTmhkR2x2YmlrZ1VYVmxjbmtvY1hWbGNua2dZV0pqYVhSNWNHVnpMbEpsY1hWbGMzUlJkV1Z5ZVNrZ1lXSmphWFI1Y0dWekxsSmxjM0J2Ym5ObFVYVmxjbmtnZXdvSmNtVjBkWEp1SUdGaVkybDBlWEJsY3k1U1pYTndiMjV6WlZGMVpYSjVlMzBLZlFvS1puVnVZeUFvWVhCd0lDcExWbE4wYjNKbFFYQndiR2xqWVhScGIyNHBJRU5vWldOclZIZ29kSGdnWVdKamFYUjVjR1Z6TGxKbGNYVmxjM1JEYUdWamExUjRLU0JoWW1OcGRIbHdaWE11VW1WemNHOXVjMlZEYUdWamExUjRJSHNLQ1hKbGRIVnliaUJoWW1OcGRIbHdaWE11VW1WemNHOXVjMlZEYUdWamExUjRlMzBLZlFvS1puVnVZeUFvWVhCd0lDcExWbE4wYjNKbFFYQndiR2xqWVhScGIyNHBJRWx1YVhSRGFHRnBiaWhqYUdGcGJpQmhZbU5wZEhsd1pYTXVVbVZ4ZFdWemRFbHVhWFJEYUdGcGJpa2dZV0pqYVhSNWNHVnpMbEpsYzNCdmJuTmxTVzVwZEVOb1lXbHVJSHNLQ1hKbGRIVnliaUJoWW1OcGRIbHdaWE11VW1WemNHOXVjMlZKYm1sMFEyaGhhVzU3ZlFwOUNncG1kVzVqSUNoaGNIQWdLa3RXVTNSdmNtVkJjSEJzYVdOaGRHbHZiaWtnVUhKbGNHRnlaVkJ5YjNCdmMyRnNLSEJ5YjNCdmMyRnNJR0ZpWTJsMGVYQmxjeTVTWlhGMVpYTjBVSEpsY0dGeVpWQnliM0J2YzJGc0tTQmhZbU5wZEhsd1pYTXVVbVZ6Y0c5dWMyVlFjbVZ3WVhKbFVISnZjRzl6WVd3Z2V3b0pjbVYwZFhKdUlHRmlZMmwwZVhCbGN5NVNaWE53YjI1elpWQnlaWEJoY21WUWNtOXdiM05oYkh0OUNuMEtDbVoxYm1NZ0tHRndjQ0FxUzFaVGRHOXlaVUZ3Y0d4cFkyRjBhVzl1S1NCUWNtOWpaWE56VUhKdmNHOXpZV3dvY0hKdmNHOXpZV3dnWVdKamFYUjVjR1Z6TGxKbGNYVmxjM1JRY205alpYTnpVSEp2Y0c5ellXd3BJR0ZpWTJsMGVYQmxjeTVTWlhOd2IyNXpaVkJ5YjJObGMzTlFjbTl3YjNOaGJDQjdDZ2x5WlhSMWNtNGdZV0pqYVhSNWNHVnpMbEpsYzNCdmJuTmxVSEp2WTJWemMxQnliM0J2YzJGc2UzMEtmUW9LWm5WdVl5QW9ZWEJ3SUNwTFZsTjBiM0psUVhCd2JHbGpZWFJwYjI0cElFSmxaMmx1UW14dlkyc29ZbXh2WTJzZ1lXSmphWFI1Y0dWekxsSmxjWFZsYzNSQ1pXZHBia0pzYjJOcktTQmhZbU5wZEhsd1pYTXVVbVZ6Y0c5dWMyVkNaV2RwYmtKc2IyTnJJSHNLQ1hKbGRIVnliaUJoWW1OcGRIbHdaWE11VW1WemNHOXVjMlZDWldkcGJrSnNiMk5yZTMwS2ZRb0tablZ1WXlBb1lYQndJQ3BMVmxOMGIzSmxRWEJ3YkdsallYUnBiMjRwSUVSbGJHbDJaWEpVZUNoMGVDQmhZbU5wZEhsd1pYTXVVbVZ4ZFdWemRFUmxiR2wyWlhKVWVDa2dZV0pqYVhSNWNHVnpMbEpsYzNCdmJuTmxSR1ZzYVhabGNsUjRJSHNLQ1hKbGRIVnliaUJoWW1OcGRIbHdaWE11VW1WemNHOXVjMlZFWld4cGRtVnlWSGg3ZlFwOUNncG1kVzVqSUNoaGNIQWdLa3RXVTNSdmNtVkJjSEJzYVdOaGRHbHZiaWtnUlc1a1FteHZZMnNvWW14dlkyc2dZV0pqYVhSNWNHVnpMbEpsY1hWbGMzUkZibVJDYkc5amF5a2dZV0pqYVhSNWNHVnpMbEpsYzNCdmJuTmxSVzVrUW14dlkyc2dld29KY21WMGRYSnVJR0ZpWTJsMGVYQmxjeTVTWlhOd2IyNXpaVVZ1WkVKc2IyTnJlMzBLZlFvS1puVnVZeUFvWVhCd0lDcExWbE4wYjNKbFFYQndiR2xqWVhScGIyNHBJRU52YlcxcGRDZ3BJR0ZpWTJsMGVYQmxjeTVTWlhOd2IyNXpaVU52YlcxcGRDQjdDZ2x5WlhSMWNtNGdZV0pqYVhSNWNHVnpMbEpsYzNCdmJuTmxRMjl0YldsMGUzMEtmUW9LWm5WdVl5QW9ZWEJ3SUNwTFZsTjBiM0psUVhCd2JHbGpZWFJwYjI0cElFeHBjM1JUYm1Gd2MyaHZkSE1vYzI1aGNITm9iM1J6SUdGaVkybDBlWEJsY3k1U1pYRjFaWE4wVEdsemRGTnVZWEJ6YUc5MGN5a2dZV0pqYVhSNWNHVnpMbEpsYzNCdmJuTmxUR2x6ZEZOdVlYQnphRzkwY3lCN0NnbHlaWFIxY200Z1lXSmphWFI1Y0dWekxsSmxjM0J2Ym5ObFRHbHpkRk51WVhCemFHOTBjM3Q5Q24wS0NtWjFibU1nS0dGd2NDQXFTMVpUZEc5eVpVRndjR3hwWTJGMGFXOXVLU0JQWm1abGNsTnVZWEJ6YUc5MEtITnVZWEJ6YUc5MElHRmlZMmwwZVhCbGN5NVNaWEYxWlhOMFQyWm1aWEpUYm1Gd2MyaHZkQ2tnWVdKamFYUjVjR1Z6TGxKbGMzQnZibk5sVDJabVpYSlRibUZ3YzJodmRDQjdDZ2x5WlhSMWNtNGdZV0pqYVhSNWNHVnpMbEpsYzNCdmJuTmxUMlptWlhKVGJtRndjMmh2ZEh0OUNuMEtDbVoxYm1NZ0tHRndjQ0FxUzFaVGRHOXlaVUZ3Y0d4cFkyRjBhVzl1S1NCTWIyRmtVMjVoY0hOb2IzUkRhSFZ1YXloamFIVnVheUJoWW1OcGRIbHdaWE11VW1WeGRXVnpkRXh2WVdSVGJtRndjMmh2ZEVOb2RXNXJLU0JoWW1OcGRIbHdaWE11VW1WemNHOXVjMlZNYjJGa1UyNWhjSE5vYjNSRGFIVnVheUI3Q2dseVpYUjFjbTRnWVdKamFYUjVjR1Z6TGxKbGMzQnZibk5sVEc5aFpGTnVZWEJ6YUc5MFEyaDFibXQ3ZlFwOUNncG1kVzVqSUNoaGNIQWdLa3RXVTNSdmNtVkJjSEJzYVdOaGRHbHZiaWtnUVhCd2JIbFRibUZ3YzJodmRFTm9kVzVyS0dOb2RXNXJJR0ZpWTJsMGVYQmxjeTVTWlhGMVpYTjBRWEJ3YkhsVGJtRndjMmh2ZEVOb2RXNXJLU0JoWW1OcGRIbHdaWE11VW1WemNHOXVjMlZCY0hCc2VWTnVZWEJ6YUc5MFEyaDFibXNnZXdvSmNtVjBkWEp1SUdGaVkybDBlWEJsY3k1U1pYTndiMjV6WlVGd2NHeDVVMjVoY0hOb2IzUkRhSFZ1YTN0OUNuMEsiPjwvdG0tY29kZS1ibG9jaz4KICAgIDxwPlRoZSB0eXBlcyB1c2VkIGhlcmUgYXJlIGRlZmluZWQgaW4gdGhlIFRlbmRlcm1pbnQgbGlicmFyeSBhbmQgd2VyZSBhZGRlZCBhcyBhIGRlcGVuZGVuY3kKdG8gdGhlIHByb2plY3Qgd2hlbiB5b3UgcmFuIDxjb2RlPmdvIGdldDwvY29kZT4uIElmIHlvdXIgSURFIGlzIG5vdCByZWNvZ25pemluZyB0aGUgdHlwZXMsIGdvIGFoZWFkIGFuZCBydW4gdGhlIGNvbW1hbmQgYWdhaW4uPC9wPgoKICAgIDx0bS1jb2RlLWJsb2NrIGNsYXNzPSJjb2RlYmxvY2siIGxhbmd1YWdlPSJiYXNoIiBiYXNlNjQ9IloyOGdaMlYwSUdkcGRHaDFZaTVqYjIwdmRHVnVaR1Z5YldsdWRDOTBaVzVrWlhKdGFXNTBRR3hoZEdWemRBbz0iPjwvdG0tY29kZS1ibG9jaz4KICAgIDxwPk5vdyBnbyBiYWNrIHRvIHRoZSA8Y29kZT5tYWluLmdvPC9jb2RlPiBhbmQgbW9kaWZ5IHRoZSA8Y29kZT5tYWluPC9jb2RlPiBmdW5jdGlvbiBzbyBpdCBtYXRjaGVzIHRoZSBmb2xsb3dpbmcsCndoZXJlIGFuIGluc3RhbmNlIG9mIHRoZSA8Y29kZT5LVlN0b3JlQXBwbGljYXRpb248L2NvZGU+IHR5cGUgaXMgY3JlYXRlZC48L3A+CgogICAgPHRtLWNvZGUtYmxvY2sgY2xhc3M9ImNvZGVibG9jayIgbGFuZ3VhZ2U9ImdvIiBiYXNlNjQ9IlpuVnVZeUJ0WVdsdUtDa2dld29nSUNBZ1ptMTBMbEJ5YVc1MGJHNG9KbkYxYjNRN1NHVnNiRzhzSUZSbGJtUmxjbTFwYm5RZ1EyOXlaU1p4ZFc5ME95a0tDaUFnSUNCZklEMGdUbVYzUzFaVGRHOXlaVUZ3Y0d4cFkyRjBhVzl1S0NrS2ZRbz0iPjwvdG0tY29kZS1ibG9jaz4KICAgIDxwPllvdSBjYW4gcmVjb21waWxlIGFuZCBydW4gdGhlIGFwcGxpY2F0aW9uIG5vdyBieSBydW5uaW5nIDxjb2RlPmdvIGdldDwvY29kZT4gYW5kIDxjb2RlPmdvIGJ1aWxkPC9jb2RlPiwgYnV0IGl0IGRvZXMKbm90IGRvIGFueXRoaW5nLgpTbyBsZXQncyByZXZpc2l0IHRoZSBjb2RlIGFkZGluZyB0aGUgbG9naWMgbmVlZGVkIHRvIGltcGxlbWVudCBvdXIgbWluaW1hbCBrZXkvdmFsdWUgc3RvcmUKYW5kIHRvIHN0YXJ0IGl0IGFsb25nIHdpdGggdGhlIFRlbmRlcm1pbnQgU2VydmljZS48L3A+CjxoMyBpZD0iXzEtMy0xLWFkZC1hLXBlcnNpc3RlbnQtZGF0YS1zdG9yZSI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNfMS0zLTEtYWRkLWEtcGVyc2lzdGVudC1kYXRhLXN0b3JlIj4jPC9hPiAxLjMuMSBBZGQgYSBwZXJzaXN0ZW50IGRhdGEgc3RvcmU8L2gzPgo8cD5PdXIgYXBwbGljYXRpb24gd2lsbCBuZWVkIHRvIHdyaXRlIGl0cyBzdGF0ZSBvdXQgdG8gcGVyc2lzdGVudCBzdG9yYWdlIHNvIHRoYXQgaXQKY2FuIHN0b3AgYW5kIHN0YXJ0IHdpdGhvdXQgbG9zaW5nIGFsbCBvZiBpdHMgZGF0YS48L3A+CjxwPkZvciB0aGlzIHR1dG9yaWFsLCB3ZSB3aWxsIHVzZSA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZGdyYXBoLWlvL2JhZGdlciIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+QmFkZ2VyREI8T3V0Ym91bmRMaW5rLz48L2E+LCBhCmEgZmFzdCBlbWJlZGRlZCBrZXktdmFsdWUgc3RvcmUuPC9wPgo8cD5GaXJzdCwgYWRkIEJhZGdlciBhcyBhIGRlcGVuZGVuY3kgb2YgeW91ciBnbyBtb2R1bGUgdXNpbmcgdGhlIDxjb2RlPmdvIGdldDwvY29kZT4gY29tbWFuZDo8L3A+CjxwPjxjb2RlPmdvIGdldCBnaXRodWIuY29tL2RncmFwaC1pby9iYWRnZXIvdjM8L2NvZGU+PC9wPgo8cD5OZXh0LCBsZXQncyB1cGRhdGUgdGhlIGFwcGxpY2F0aW9uIGFuZCBpdHMgY29uc3RydWN0b3IgdG8gcmVjZWl2ZSBhIGhhbmRsZSB0byB0aGUgZGF0YWJhc2UsIGFzIGZvbGxvd3M6PC9wPgoKICAgIDx0bS1jb2RlLWJsb2NrIGNsYXNzPSJjb2RlYmxvY2siIGxhbmd1YWdlPSJnbyIgYmFzZTY0PSJkSGx3WlNCTFZsTjBiM0psUVhCd2JHbGpZWFJwYjI0Z2MzUnlkV04wSUhzS0NXUmlJQ0FnSUNBZ0lDQWdJQ0FxWW1Ga1oyVnlMa1JDQ2dsdmJrZHZhVzVuUW14dlkyc2dLbUpoWkdkbGNpNVVlRzRLZlFvS2RtRnlJRjhnWVdKamFYUjVjR1Z6TGtGd2NHeHBZMkYwYVc5dUlEMGdLQ3BMVmxOMGIzSmxRWEJ3YkdsallYUnBiMjRwS0c1cGJDa0tDbVoxYm1NZ1RtVjNTMVpUZEc5eVpVRndjR3hwWTJGMGFXOXVLR1JpSUNwaVlXUm5aWEl1UkVJcElDcExWbE4wYjNKbFFYQndiR2xqWVhScGIyNGdld29KY21WMGRYSnVJQ1poYlhBN1MxWlRkRzl5WlVGd2NHeHBZMkYwYVc5dWUyUmlPaUJrWW4wS2ZRbz0iPjwvdG0tY29kZS1ibG9jaz4KICAgIDxwPlRoZSA8Y29kZT5vbkdvaW5nQmxvY2s8L2NvZGU+IGtlZXBzIHRyYWNrIG9mIHRoZSBCYWRnZXIgdHJhbnNhY3Rpb24gdGhhdCB3aWxsIHVwZGF0ZSB0aGUgYXBwbGljYXRpb24ncyBzdGF0ZSB3aGVuIGEgYmxvY2sKaXMgY29tcGxldGVkLiBEb24ndCB3b3JyeSBhYm91dCBpdCBmb3Igbm93LCB3ZSdsbCBnZXQgdG8gdGhhdCBsYXRlci48L3A+CjxwPk5leHQsIHVwZGF0ZSB0aGUgPGNvZGU+aW1wb3J0PC9jb2RlPiBzdGFuemEgYXQgdGhlIHRvcCB0byBpbmNsdWRlIHRoZSBCYWRnZXIgbGlicmFyeTo8L3A+CgogICAgPHRtLWNvZGUtYmxvY2sgY2xhc3M9ImNvZGVibG9jayIgbGFuZ3VhZ2U9ImdvIiBiYXNlNjQ9ImFXMXdiM0owS0FvSkpuRjFiM1E3WjJsMGFIVmlMbU52YlM5a1ozSmhjR2d0YVc4dlltRmtaMlZ5TDNZekpuRjFiM1E3Q2dsaFltTnBkSGx3WlhNZ0puRjFiM1E3WjJsMGFIVmlMbU52YlM5MFpXNWtaWEp0YVc1MEwzUmxibVJsY20xcGJuUXZZV0pqYVM5MGVYQmxjeVp4ZFc5ME93b3BDZz09Ij48L3RtLWNvZGUtYmxvY2s+CiAgICA8cD5GaW5hbGx5LCB1cGRhdGUgdGhlIDxjb2RlPm1haW4uZ288L2NvZGU+IGZpbGUgdG8gaW52b2tlIHRoZSB1cGRhdGVkIGNvbnN0cnVjdG9yOjwvcD4KCiAgICA8dG0tY29kZS1ibG9jayBjbGFzcz0iY29kZWJsb2NrIiBsYW5ndWFnZT0iZ28iIGJhc2U2ND0iQ1Y4Z1BTQk9aWGRMVmxOMGIzSmxRWEJ3YkdsallYUnBiMjRvYm1sc0tRbz0iPjwvdG0tY29kZS1ibG9jaz4KICAgIDxoMyBpZD0iXzEtMy0yLWNoZWNrdHgiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjXzEtMy0yLWNoZWNrdHgiPiM8L2E+IDEuMy4yIENoZWNrVHg8L2gzPgo8cD5XaGVuIFRlbmRlcm1pbnQgQ29yZSByZWNlaXZlcyBhIG5ldyB0cmFuc2FjdGlvbiBmcm9tIGEgY2xpZW50LCBvciBmcm9tIGFub3RoZXIgZnVsbCBub2RlLCBUZW5kZXJtaW50IGFza3MgdGhlIGFwcGxpY2F0aW9uIGlmCnRoZSB0cmFuc2FjdGlvbiBpcyBhY2NlcHRhYmxlLCB1c2luZyB0aGUgPGNvZGU+Q2hlY2tUeDwvY29kZT4gbWV0aG9kLgpJbnZhbGlkIHRyYW5zYWN0aW9ucyB3aWxsIG5vdCBiZSBzaGFyZWQgd2l0aCBvdGhlciBub2RlcyBhbmQgd2lsbCBub3QgYmVjb21lIHBhcnQgb2YgYW55IGJsb2NrcyBhbmQsIHRoZXJlZm9yZSwgd2lsbCBub3QgYmUgZXhlY3V0ZWQgYnkgdGhlIGFwcGxpY2F0aW9uLjwvcD4KPHA+SW4gb3VyIGFwcGxpY2F0aW9uLCBhIHRyYW5zYWN0aW9uIGlzIGEgc3RyaW5nIHdpdGggdGhlIGZvcm0gPGNvZGU+a2V5PXZhbHVlPC9jb2RlPiwgaW5kaWNhdGluZyBhIGtleSBhbmQgdmFsdWUgdG8gd3JpdGUgdG8gdGhlIHN0b3JlLjwvcD4KPHA+VGhlIG1vc3QgYmFzaWMgdmFsaWRhdGlvbiBjaGVjayB3ZSBjYW4gcGVyZm9ybSBpcyB0byBjaGVjayBpZiB0aGUgdHJhbnNhY3Rpb24gY29uZm9ybXMgdG8gdGhlIDxjb2RlPmtleT12YWx1ZTwvY29kZT4gcGF0dGVybi4KRm9yIHRoYXQsIGxldCdzIGFkZCB0aGUgZm9sbG93aW5nIGhlbHBlciBtZXRob2QgdG8gYXBwLmdvOjwvcD4KCiAgICA8dG0tY29kZS1ibG9jayBjbGFzcz0iY29kZWJsb2NrIiBsYW5ndWFnZT0iZ28iIGJhc2U2ND0iWm5WdVl5QW9ZWEJ3SUNwTFZsTjBiM0psUVhCd2JHbGpZWFJwYjI0cElHbHpWbUZzYVdRb2RIZ2dXMTFpZVhSbEtTQjFhVzUwTXpJZ2V3b0pMeThnWTJobFkyc2dabTl5YldGMENnbHdZWEowY3lBNlBTQmllWFJsY3k1VGNHeHBkQ2gwZUN3Z1cxMWllWFJsS0NaeGRXOTBPejBtY1hWdmREc3BLUW9KYVdZZ2JHVnVLSEJoY25SektTQWhQU0F5SUhzS0NRbHlaWFIxY200Z01Rb0pmUW9LQ1hKbGRIVnliaUF3Q24wSyI+PC90bS1jb2RlLWJsb2NrPgogICAgPHA+Tm93IHlvdSBjYW4gcmV3cml0ZSB0aGUgPGNvZGU+Q2hlY2tUeDwvY29kZT4gbWV0aG9kIHRvIHVzZSB0aGUgaGVscGVyIGZ1bmN0aW9uOjwvcD4KCiAgICA8dG0tY29kZS1ibG9jayBjbGFzcz0iY29kZWJsb2NrIiBsYW5ndWFnZT0iZ28iIGJhc2U2ND0iWm5WdVl5QW9ZWEJ3SUNwTFZsTjBiM0psUVhCd2JHbGpZWFJwYjI0cElFTm9aV05yVkhnb2NtVnhJR0ZpWTJsMGVYQmxjeTVTWlhGMVpYTjBRMmhsWTJ0VWVDa2dZV0pqYVhSNWNHVnpMbEpsYzNCdmJuTmxRMmhsWTJ0VWVDQjdDZ2xqYjJSbElEbzlJR0Z3Y0M1cGMxWmhiR2xrS0hKbGNTNVVlQ2tLQ1hKbGRIVnliaUJoWW1OcGRIbHdaWE11VW1WemNHOXVjMlZEYUdWamExUjRlME52WkdVNklHTnZaR1Y5Q24wSyI+PC90bS1jb2RlLWJsb2NrPgogICAgPHA+V2hpbGUgdGhpcyA8Y29kZT5DaGVja1R4PC9jb2RlPiBpcyBzaW1wbGUgYW5kIG9ubHkgdmFsaWRhdGVzIHRoYXQgdGhlIHRyYW5zYWN0aW9uIGlzIHdlbGwtZm9ybWVkLAppdCBpcyB2ZXJ5IGNvbW1vbiBmb3IgPGNvZGU+Q2hlY2tUeDwvY29kZT4gdG8gbWFrZSBtb3JlIGNvbXBsZXggdXNlIG9mIHRoZSBzdGF0ZSBvZiBhbiBhcHBsaWNhdGlvbi4KRm9yIGV4YW1wbGUsIHlvdSBtYXkgcmVmdXNlIHRvIG92ZXJ3cml0ZSBhbiBleGlzdGluZyB2YWx1ZSwgb3IgeW91IGNhbiBhc3NvY2lhdGUKdmVyc2lvbnMgdG8gdGhlIGtleS92YWx1ZSBwYWlycyBhbmQgYWxsb3cgdGhlIGNhbGxlciB0byBzcGVjaWZ5IGEgdmVyc2lvbiB0bwpwZXJmb3JtIGEgY29uZGl0aW9uYWwgdXBkYXRlLjwvcD4KPHA+RGVwZW5kaW5nIG9uIHRoZSBjaGVja3MgYW5kIG9uIHRoZSBjb25kaXRpb25zIHZpb2xhdGVkLCB0aGUgZnVuY3Rpb24gbWF5IHJldHVybgpkaWZmZXJlbnQgdmFsdWVzLCBidXQgYW55IHJlc3BvbnNlIHdpdGggYSBub24temVybyBjb2RlIHdpbGwgYmUgY29uc2lkZXJlZCBpbnZhbGlkCmJ5IFRlbmRlcm1pbnQuIE91ciA8Y29kZT5DaGVja1R4PC9jb2RlPiBsb2dpYyByZXR1cm5zIDAgdG8gVGVuZGVybWludCB3aGVuIGEgdHJhbnNhY3Rpb24gcGFzc2VzCml0cyB2YWxpZGF0aW9uIGNoZWNrcy4gVGhlIHNwZWNpZmljIHZhbHVlIG9mIHRoZSBjb2RlIGlzIG1lYW5pbmdsZXNzIHRvIFRlbmRlcm1pbnQuCk5vbi16ZXJvIGNvZGVzIGFyZSBsb2dnZWQgYnkgVGVuZGVybWludCBzbyBhcHBsaWNhdGlvbnMgY2FuIHByb3ZpZGUgbW9yZSBzcGVjaWZpYwppbmZvcm1hdGlvbiBvbiB3aHkgdGhlIHRyYW5zYWN0aW9uIHdhcyByZWplY3RlZC48L3A+CjxwPk5vdGUgdGhhdCA8Y29kZT5DaGVja1R4PC9jb2RlPiBkb2VzIG5vdCBleGVjdXRlIHRoZSB0cmFuc2FjdGlvbiwgaXQgb25seSB2ZXJpZmllcyB0aGF0IHRoYXQgdGhlIHRyYW5zYWN0aW9uIGNvdWxkIGJlIGV4ZWN1dGVkLiBXZSBkbyBub3Qga25vdyB5ZXQgaWYgdGhlIHJlc3Qgb2YgdGhlIG5ldHdvcmsgaGFzIGFncmVlZCB0byBhY2NlcHQgdGhpcyB0cmFuc2FjdGlvbiBpbnRvIGEgYmxvY2suPC9wPgo8cD5GaW5hbGx5LCBtYWtlIHN1cmUgdG8gYWRkIHRoZSBieXRlcyBwYWNrYWdlIHRvIHRoZSA8Y29kZT5pbXBvcnQ8L2NvZGU+IHN0YW56YSBhdCB0aGUgdG9wIG9mIDxjb2RlPmFwcC5nbzwvY29kZT46PC9wPgoKICAgIDx0bS1jb2RlLWJsb2NrIGNsYXNzPSJjb2RlYmxvY2siIGxhbmd1YWdlPSJnbyIgYmFzZTY0PSJhVzF3YjNKMEtBb0pKbkYxYjNRN1lubDBaWE1tY1hWdmREc0tDZ2ttY1hWdmREdG5hWFJvZFdJdVkyOXRMMlJuY21Gd2FDMXBieTlpWVdSblpYSXZkak1tY1hWdmREc0tDV0ZpWTJsMGVYQmxjeUFtY1hWdmREdG5hWFJvZFdJdVkyOXRMM1JsYm1SbGNtMXBiblF2ZEdWdVpHVnliV2x1ZEM5aFltTnBMM1I1Y0dWekpuRjFiM1E3Q2lrSyI+PC90bS1jb2RlLWJsb2NrPgogICAgPGgzIGlkPSJfMS0zLTMtYmVnaW5ibG9jay1kZWxpdmVydHgtZW5kYmxvY2stY29tbWl0Ij48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI18xLTMtMy1iZWdpbmJsb2NrLWRlbGl2ZXJ0eC1lbmRibG9jay1jb21taXQiPiM8L2E+IDEuMy4zIEJlZ2luQmxvY2sgLSZndDsgRGVsaXZlclR4IC0mZ3Q7IEVuZEJsb2NrIC0mZ3Q7IENvbW1pdDwvaDM+CjxwPldoZW4gdGhlIFRlbmRlcm1pbnQgY29uc2Vuc3VzIGVuZ2luZSBoYXMgZGVjaWRlZCBvbiB0aGUgYmxvY2ssIHRoZSBibG9jayBpcyB0cmFuc2ZlcnJlZCB0byB0aGUKYXBwbGljYXRpb24gb3ZlciB0aHJlZSBBQkNJIG1ldGhvZCBjYWxsczogPGNvZGU+QmVnaW5CbG9jazwvY29kZT4sIDxjb2RlPkRlbGl2ZXJUeDwvY29kZT4sIGFuZCA8Y29kZT5FbmRCbG9jazwvY29kZT4uPC9wPgo8dWw+CjxsaT48Y29kZT5CZWdpbkJsb2NrPC9jb2RlPiBpcyBjYWxsZWQgb25jZSB0byBpbmRpY2F0ZSB0byB0aGUgYXBwbGljYXRpb24gdGhhdCBpdCBpcyBhYm91dCB0bwpyZWNlaXZlIGEgYmxvY2suPC9saT4KPGxpPjxjb2RlPkRlbGl2ZXJUeDwvY29kZT4gaXMgY2FsbGVkIHJlcGVhdGVkbHksIG9uY2UgZm9yIGVhY2ggYXBwbGljYXRpb24gdHJhbnNhY3Rpb24gdGhhdCB3YXMgaW5jbHVkZWQgaW4gdGhlIGJsb2NrLjwvbGk+CjxsaT48Y29kZT5FbmRCbG9jazwvY29kZT4gaXMgY2FsbGVkIG9uY2UgdG8gaW5kaWNhdGUgdG8gdGhlIGFwcGxpY2F0aW9uIHRoYXQgbm8gbW9yZSB0cmFuc2FjdGlvbnMKd2lsbCBiZSBkZWxpdmVyZWQgdG8gdGhlIGFwcGxpY2F0aW9uIGluIHdpdGhpbiB0aGlzIGJsb2NrLjwvbGk+CjwvdWw+CjxwPk5vdGUgdGhhdCwgdG8gaW1wbGVtZW50IHRoZXNlIGNhbGxzIGluIG91ciBhcHBsaWNhdGlvbiB3ZSdyZSBnb2luZyB0byBtYWtlIHVzZSBvZiBCYWRnZXIncwp0cmFuc2FjdGlvbiBtZWNoYW5pc20uIFdlIHdpbGwgYWx3YXlzIHJlZmVyIHRvIHRoZXNlIGFzIEJhZGdlciB0cmFuc2FjdGlvbnMsIG5vdCB0bwpjb25mdXNlIHRoZW0gd2l0aCB0aGUgdHJhbnNhY3Rpb25zIGluY2x1ZGVkIGluIHRoZSBibG9ja3MgZGVsaXZlcmVkIGJ5IFRlbmRlcm1pbnQsCnRoZSA8ZW0+YXBwbGljYXRpb24gdHJhbnNhY3Rpb25zPC9lbT4uPC9wPgo8cD5GaXJzdCwgbGV0J3MgY3JlYXRlIGEgbmV3IEJhZGdlciB0cmFuc2FjdGlvbiBkdXJpbmcgPGNvZGU+QmVnaW5CbG9jazwvY29kZT4uIEFsbCBhcHBsaWNhdGlvbiB0cmFuc2FjdGlvbnMgaW4gdGhlCmN1cnJlbnQgYmxvY2sgd2lsbCBiZSBleGVjdXRlZCB3aXRoaW4gdGhpcyBCYWRnZXIgdHJhbnNhY3Rpb24uClRoZW4sIHJldHVybiBpbmZvcm1pbmcgVGVuZGVybWludCB0aGF0IHRoZSBhcHBsaWNhdGlvbiBpcyByZWFkeSB0byByZWNlaXZlIGFwcGxpY2F0aW9uIHRyYW5zYWN0aW9uczo8L3A+CgogICAgPHRtLWNvZGUtYmxvY2sgY2xhc3M9ImNvZGVibG9jayIgbGFuZ3VhZ2U9ImdvIiBiYXNlNjQ9IlpuVnVZeUFvWVhCd0lDcExWbE4wYjNKbFFYQndiR2xqWVhScGIyNHBJRUpsWjJsdVFteHZZMnNvY21WeElHRmlZMmwwZVhCbGN5NVNaWEYxWlhOMFFtVm5hVzVDYkc5amF5a2dZV0pqYVhSNWNHVnpMbEpsYzNCdmJuTmxRbVZuYVc1Q2JHOWpheUI3Q2dsaGNIQXViMjVIYjJsdVowSnNiMk5ySUQwZ1lYQndMbVJpTGs1bGQxUnlZVzV6WVdOMGFXOXVLSFJ5ZFdVcENnbHlaWFIxY200Z1lXSmphWFI1Y0dWekxsSmxjM0J2Ym5ObFFtVm5hVzVDYkc5amEzdDlDbjBLIj48L3RtLWNvZGUtYmxvY2s+CiAgICA8cD5OZXh0LCBsZXQncyBtb2RpZnkgPGNvZGU+RGVsaXZlclR4PC9jb2RlPiB0byBhZGQgdGhlIDxjb2RlPmtleTwvY29kZT4gYW5kIDxjb2RlPnZhbHVlPC9jb2RlPiB0byB0aGUgZGF0YWJhc2UgdHJhbnNhY3Rpb24gZXZlcnkgdGltZSBvdXIgYXBwbGljYXRpb24KcmVjZWl2ZXMgYSBuZXcgYXBwbGljYXRpb24gdHJhbnNhY3Rpb24gdGhyb3VnaCA8Y29kZT5SZXF1ZXN0RGVsaXZlclR4PC9jb2RlPi48L3A+CgogICAgPHRtLWNvZGUtYmxvY2sgY2xhc3M9ImNvZGVibG9jayIgbGFuZ3VhZ2U9ImdvIiBiYXNlNjQ9IlpuVnVZeUFvWVhCd0lDcExWbE4wYjNKbFFYQndiR2xqWVhScGIyNHBJRVJsYkdsMlpYSlVlQ2h5WlhFZ1lXSmphWFI1Y0dWekxsSmxjWFZsYzNSRVpXeHBkbVZ5VkhncElHRmlZMmwwZVhCbGN5NVNaWE53YjI1elpVUmxiR2wyWlhKVWVDQjdDZ2xwWmlCamIyUmxJRG85SUdGd2NDNXBjMVpoYkdsa0tISmxjUzVVZUNrN0lHTnZaR1VnSVQwZ01DQjdDZ2tKY21WMGRYSnVJR0ZpWTJsMGVYQmxjeTVTWlhOd2IyNXpaVVJsYkdsMlpYSlVlSHREYjJSbE9pQmpiMlJsZlFvSmZRb0tDWEJoY25SeklEbzlJR0o1ZEdWekxsTndiR2wwVGloeVpYRXVWSGdzSUZ0ZFlubDBaU2dtY1hWdmREczlKbkYxYjNRN0tTd2dNaWtLQ1d0bGVTd2dkbUZzZFdVZ09qMGdjR0Z5ZEhOYk1GMHNJSEJoY25Seld6RmRDZ29KYVdZZ1pYSnlJRG85SUdGd2NDNXZia2R2YVc1blFteHZZMnN1VTJWMEtHdGxlU3dnZG1Gc2RXVXBPeUJsY25JZ0lUMGdibWxzSUhzS0NRbHNiMmN1VUdGdWFXTm1LQ1p4ZFc5ME8wVnljbTl5SUhKbFlXUnBibWNnWkdGMFlXSmhjMlVzSUhWdVlXSnNaU0IwYnlCbGVHVmpkWFJsSUhSNE9pQWxkaVp4ZFc5ME95d2daWEp5S1FvSmZRb0tDWEpsZEhWeWJpQmhZbU5wZEhsd1pYTXVVbVZ6Y0c5dWMyVkVaV3hwZG1WeVZIaDdRMjlrWlRvZ01IMEtmUW89Ij48L3RtLWNvZGUtYmxvY2s+CiAgICA8cD5Ob3RlIHRoYXQgd2UgY2hlY2sgdGhlIHZhbGlkaXR5IG9mIHRoZSB0cmFuc2FjdGlvbiA8ZW0+YWdhaW48L2VtPiBkdXJpbmcgPGNvZGU+RGVsaXZlclR4PC9jb2RlPi4KVHJhbnNhY3Rpb25zIGFyZSBub3QgZ3VhcmFudGVlZCB0byBiZSB2YWxpZCB3aGVuIHRoZXkgYXJlIGRlbGl2ZXJlZCB0byBhbgphcHBsaWNhdGlvbiwgZXZlbiBpZiB0aGV5IHdlcmUgdmFsaWQgd2hlbiB0aGV5IHdlcmUgcHJvcG9zZWQuClRoaXMgY2FuIGhhcHBlbiBpZiB0aGUgYXBwbGljYXRpb24gc3RhdGUgaXMgdXNlZCB0byBkZXRlcm1pbmUgdHJhbnNhY3Rpb24KdmFsaWRpdHkuIEFwcGxpY2F0aW9uIHN0YXRlIG1heSBoYXZlIGNoYW5nZWQgYmV0d2VlbiB0aGUgaW5pdGlhbCBleGVjdXRpb24gb2YgPGNvZGU+Q2hlY2tUeDwvY29kZT4KYW5kIHRoZSB0cmFuc2FjdGlvbiBkZWxpdmVyeSBpbiA8Y29kZT5EZWxpdmVyVHg8L2NvZGU+IGluIGEgd2F5IHRoYXQgcmVuZGVyZWQgdGhlIHRyYW5zYWN0aW9uCm5vIGxvbmdlciB2YWxpZC48L3A+CjxwPjxjb2RlPkVuZEJsb2NrPC9jb2RlPiBpcyBjYWxsZWQgdG8gaW5mb3JtIHRoZSBhcHBsaWNhdGlvbiB0aGF0IHRoZSBmdWxsIGJsb2NrIGhhcyBiZWVuIGRlbGl2ZXJlZAphbmQgZ2l2ZSB0aGUgYXBwbGljYXRpb24gYSBjaGFuY2UgdG8gcGVyZm9ybSBhbnkgb3RoZXIgY29tcHV0YXRpb24gbmVlZGVkLCBiZWZvcmUgdGhlCmVmZmVjdHMgb2YgdGhlIHRyYW5zYWN0aW9ucyBiZWNvbWUgcGVybWFuZW50LjwvcD4KPHA+Tm90ZSB0aGF0IDxjb2RlPkVuZEJsb2NrPC9jb2RlPiA8c3Ryb25nPmNhbm5vdDwvc3Ryb25nPiB5ZXQgY29tbWl0IHRoZSBCYWRnZXIgdHJhbnNhY3Rpb24gd2Ugd2VyZSBidWlsZGluZwppbiBkdXJpbmcgPGNvZGU+RGVsaXZlclR4PC9jb2RlPi4KU2luY2Ugb3RoZXIgbWV0aG9kcywgc3VjaCBhcyA8Y29kZT5RdWVyeTwvY29kZT4sIHJlbHkgb24gYSBjb25zaXN0ZW50IHZpZXcgb2YgdGhlIGFwcGxpY2F0aW9uJ3MKc3RhdGUsIHRoZSBhcHBsaWNhdGlvbiBzaG91bGQgb25seSB1cGRhdGUgaXRzIHN0YXRlIGJ5IGNvbW1pdHRpbmcgdGhlIEJhZGdlciB0cmFuc2FjdGlvbnMKd2hlbiB0aGUgZnVsbCBibG9jayBoYXMgYmVlbiBkZWxpdmVyZWQgYW5kIHRoZSA8Y29kZT5Db21taXQ8L2NvZGU+IG1ldGhvZCBpcyBpbnZva2VkLjwvcD4KPHA+VGhlIDxjb2RlPkNvbW1pdDwvY29kZT4gbWV0aG9kIHRlbGxzIHRoZSBhcHBsaWNhdGlvbiB0byBtYWtlIHBlcm1hbmVudCB0aGUgZWZmZWN0cyBvZgp0aGUgYXBwbGljYXRpb24gdHJhbnNhY3Rpb25zLgpMZXQncyB1cGRhdGUgdGhlIG1ldGhvZCB0byB0ZXJtaW5hdGUgdGhlIHBlbmRpbmcgQmFkZ2VyIHRyYW5zYWN0aW9uIGFuZApwZXJzaXN0IHRoZSByZXN1bHRpbmcgc3RhdGU6PC9wPgoKICAgIDx0bS1jb2RlLWJsb2NrIGNsYXNzPSJjb2RlYmxvY2siIGxhbmd1YWdlPSJnbyIgYmFzZTY0PSJablZ1WXlBb1lYQndJQ3BMVmxOMGIzSmxRWEJ3YkdsallYUnBiMjRwSUVOdmJXMXBkQ2dwSUdGaVkybDBlWEJsY3k1U1pYTndiMjV6WlVOdmJXMXBkQ0I3Q2dscFppQmxjbklnT2owZ1lYQndMbTl1UjI5cGJtZENiRzlqYXk1RGIyMXRhWFFvS1RzZ1pYSnlJQ0U5SUc1cGJDQjdDZ2tKYkc5bkxsQmhibWxqWmlnbWNYVnZkRHRGY25KdmNpQjNjbWwwYVc1bklIUnZJR1JoZEdGaVlYTmxMQ0IxYm1GaWJHVWdkRzhnWTI5dGJXbDBJR0pzYjJOck9pQWxkaVp4ZFc5ME95d2daWEp5S1FvSmZRb0pjbVYwZFhKdUlHRmlZMmwwZVhCbGN5NVNaWE53YjI1elpVTnZiVzFwZEh0RVlYUmhPaUJiWFdKNWRHVjdmWDBLZlFvPSI+PC90bS1jb2RlLWJsb2NrPgogICAgPHA+RmluYWxseSwgbWFrZSBzdXJlIHRvIGFkZCB0aGUgbG9nIGxpYnJhcnkgdG8gdGhlIDxjb2RlPmltcG9ydDwvY29kZT4gc3RhbnphIGFzIHdlbGw6PC9wPgoKICAgIDx0bS1jb2RlLWJsb2NrIGNsYXNzPSJjb2RlYmxvY2siIGxhbmd1YWdlPSJnbyIgYmFzZTY0PSJhVzF3YjNKMElDZ0tDU1p4ZFc5ME8ySjVkR1Z6Sm5GMWIzUTdDZ2ttY1hWdmREdHNiMmNtY1hWdmREc0tDZ2ttY1hWdmREdG5hWFJvZFdJdVkyOXRMMlJuY21Gd2FDMXBieTlpWVdSblpYSXZkak1tY1hWdmREc0tDV0ZpWTJsMGVYQmxjeUFtY1hWdmREdG5hWFJvZFdJdVkyOXRMM1JsYm1SbGNtMXBiblF2ZEdWdVpHVnliV2x1ZEM5aFltTnBMM1I1Y0dWekpuRjFiM1E3Q2lrSyI+PC90bS1jb2RlLWJsb2NrPgogICAgPHA+WW91IG1heSBoYXZlIG5vdGljZWQgdGhhdCB0aGUgYXBwbGljYXRpb24gd2UgYXJlIHdyaXRpbmcgd2lsbCBjcmFzaCBpZiBpdCByZWNlaXZlcwphbiB1bmV4cGVjdGVkIGVycm9yIGZyb20gdGhlIEJhZGdlciBkYXRhYmFzZSBkdXJpbmcgdGhlIDxjb2RlPkRlbGl2ZXJUeDwvY29kZT4gb3IgPGNvZGU+Q29tbWl0PC9jb2RlPiBtZXRob2RzLgpUaGlzIGlzIG5vdCBhbiBhY2NpZGVudC4gSWYgdGhlIGFwcGxpY2F0aW9uIHJlY2VpdmVkIGFuIGVycm9yIGZyb20gdGhlIGRhdGFiYXNlLCB0aGVyZQppcyBubyBkZXRlcm1pbmlzdGljIHdheSBmb3IgaXQgdG8gbWFrZSBwcm9ncmVzcyBzbyB0aGUgb25seSBzYWZlIG9wdGlvbiBpcyB0byB0ZXJtaW5hdGUuPC9wPgo8aDMgaWQ9Il8xLTMtNC1xdWVyeSI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNfMS0zLTQtcXVlcnkiPiM8L2E+IDEuMy40IFF1ZXJ5PC9oMz4KPHA+V2hlbiBhIGNsaWVudCB0cmllcyB0byByZWFkIHNvbWUgaW5mb3JtYXRpb24gZnJvbSB0aGUgPGNvZGU+a3ZzdG9yZTwvY29kZT4sIHRoZSByZXF1ZXN0IHdpbGwgYmUKaGFuZGxlZCBpbiB0aGUgPGNvZGU+UXVlcnk8L2NvZGU+IG1ldGhvZC4gVG8gZG8gdGhpcywgbGV0J3MgcmV3cml0ZSB0aGUgPGNvZGU+UXVlcnk8L2NvZGU+IG1ldGhvZCBpbiA8Y29kZT5hcHAuZ288L2NvZGU+OjwvcD4KCiAgICA8dG0tY29kZS1ibG9jayBjbGFzcz0iY29kZWJsb2NrIiBsYW5ndWFnZT0iZ28iIGJhc2U2ND0iWm5WdVl5QW9ZWEJ3SUNwTFZsTjBiM0psUVhCd2JHbGpZWFJwYjI0cElGRjFaWEo1S0hKbGNTQmhZbU5wZEhsd1pYTXVVbVZ4ZFdWemRGRjFaWEo1S1NCaFltTnBkSGx3WlhNdVVtVnpjRzl1YzJWUmRXVnllU0I3Q2dseVpYTndJRG85SUdGaVkybDBlWEJsY3k1U1pYTndiMjV6WlZGMVpYSjVlMHRsZVRvZ2NtVnhMa1JoZEdGOUNnb0paR0pGY25JZ09qMGdZWEJ3TG1SaUxsWnBaWGNvWm5WdVl5aDBlRzRnS21KaFpHZGxjaTVVZUc0cElHVnljbTl5SUhzS0NRbHBkR1Z0TENCbGNuSWdPajBnZEhodUxrZGxkQ2h5WlhFdVJHRjBZU2tLQ1FscFppQmxjbklnSVQwZ2JtbHNJSHNLQ1FrSmFXWWdaWEp5SUNFOUlHSmhaR2RsY2k1RmNuSkxaWGxPYjNSR2IzVnVaQ0I3Q2drSkNRbHlaWFIxY200Z1pYSnlDZ2tKQ1gwS0NRa0pjbVZ6Y0M1TWIyY2dQU0FtY1hWdmREdHJaWGtnWkc5bGN5QnViM1FnWlhocGMzUW1jWFZ2ZERzS0NRa0pjbVYwZFhKdUlHNXBiQW9KQ1gwS0Nna0pjbVYwZFhKdUlHbDBaVzB1Vm1Gc2RXVW9ablZ1WXloMllXd2dXMTFpZVhSbEtTQmxjbkp2Y2lCN0Nna0pDWEpsYzNBdVRHOW5JRDBnSm5GMWIzUTdaWGhwYzNSekpuRjFiM1E3Q2drSkNYSmxjM0F1Vm1Gc2RXVWdQU0IyWVd3S0NRa0pjbVYwZFhKdUlHNXBiQW9KQ1gwcENnbDlLUW9KYVdZZ1pHSkZjbklnSVQwZ2JtbHNJSHNLQ1Fsc2IyY3VVR0Z1YVdObUtDWnhkVzkwTzBWeWNtOXlJSEpsWVdScGJtY2daR0YwWVdKaGMyVXNJSFZ1WVdKc1pTQjBieUIyWlhKcFpua2dkSGc2SUNWMkpuRjFiM1E3TENCa1lrVnljaWtLQ1gwS0NYSmxkSFZ5YmlCeVpYTndDbjBLIj48L3RtLWNvZGUtYmxvY2s+CiAgICA8cD5TaW5jZSBpdCByZWFkcyBvbmx5IGNvbW1pdHRlZCBkYXRhIGZyb20gdGhlIHN0b3JlLCB0cmFuc2FjdGlvbnMgdGhhdCBhcmUgcGFydCBvZiBhIGJsb2NrCnRoYXQgaXMgYmVpbmcgcHJvY2Vzc2VkIGFyZSBub3QgcmVmbGVjdGVkIGluIHRoZSBxdWVyeSByZXN1bHQuPC9wPgo8aDMgaWQ9Il8xLTMtNS1wcmVwYXJlcHJvcG9zYWwtYW5kLXByb2Nlc3Nwcm9wb3NhbCI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNfMS0zLTUtcHJlcGFyZXByb3Bvc2FsLWFuZC1wcm9jZXNzcHJvcG9zYWwiPiM8L2E+IDEuMy41IFByZXBhcmVQcm9wb3NhbCBhbmQgUHJvY2Vzc1Byb3Bvc2FsPC9oMz4KPHA+PGNvZGU+UHJlcGFyZVByb3Bvc2FsPC9jb2RlPiBhbmQgPGNvZGU+UHJvY2Vzc1Byb3Bvc2FsPC9jb2RlPiBhcmUgbWV0aG9kcyBpbnRyb2R1Y2VkIGluIFRlbmRlcm1pbnQgdjAuMzcuMAp0byBnaXZlIHRoZSBhcHBsaWNhdGlvbiBtb3JlIGNvbnRyb2wgb3ZlciB0aGUgY29uc3RydWN0aW9uIGFuZCBwcm9jZXNzaW5nIG9mIHRyYW5zYWN0aW9uIGJsb2Nrcy48L3A+CjxwPldoZW4gVGVuZGVybWludCBDb3JlIHNlZXMgdGhhdCB2YWxpZCB0cmFuc2FjdGlvbnMgKHZhbGlkYXRlZCB0aHJvdWdoIDxjb2RlPkNoZWNrVHg8L2NvZGU+KSBhcmUgYXZhaWxhYmxlIHRvIGJlCmluY2x1ZGVkIGluIGJsb2NrcywgaXQgZ3JvdXBzIHNvbWUgb2YgdGhlc2UgdHJhbnNhY3Rpb25zIGFuZCB0aGVuIGdpdmVzIHRoZSBhcHBsaWNhdGlvbiBhIGNoYW5jZQp0byBtb2RpZnkgdGhlIGdyb3VwIGJ5IGludm9raW5nIDxjb2RlPlByZXBhcmVQcm9wb3NhbDwvY29kZT4uPC9wPgo8cD5UaGUgYXBwbGljYXRpb24gaXMgZnJlZSB0byBtb2RpZnkgdGhlIGdyb3VwIGJlZm9yZSByZXR1cm5pbmcgZnJvbSB0aGUgY2FsbCwgYXMgbG9uZyBhcyB0aGUgcmVzdWx0aW5nIHNldApkb2VzIG5vdCB1c2UgbW9yZSBieXRlcyB0aGFuIGBSZXF1ZXN0UHJlcGFyZVByb3Bvc2FsLm1heF90eF9ieXRlcycKRm9yIGV4YW1wbGUsIHRoZSBhcHBsaWNhdGlvbiBtYXkgcmVvcmRlciwgYWRkLCBvciBldmVuIHJlbW92ZSB0cmFuc2FjdGlvbnMgZnJvbSB0aGUgZ3JvdXAgdG8gaW1wcm92ZSB0aGUKZXhlY3V0aW9uIG9mIHRoZSBibG9jayBvbmNlIGFjY2VwdGVkLgpJbiB0aGUgZm9sbG93aW5nIGNvZGUsIHRoZSBhcHBsaWNhdGlvbiBzaW1wbHkgcmV0dXJucyB0aGUgdW5tb2RpZmllZCBncm91cCBvZiB0cmFuc2FjdGlvbnM6PC9wPgoKICAgIDx0bS1jb2RlLWJsb2NrIGNsYXNzPSJjb2RlYmxvY2siIGxhbmd1YWdlPSJnbyIgYmFzZTY0PSJablZ1WXlBb1lYQndJQ3BMVmxOMGIzSmxRWEJ3YkdsallYUnBiMjRwSUZCeVpYQmhjbVZRY205d2IzTmhiQ2h3Y205d2IzTmhiQ0JoWW1OcGRIbHdaWE11VW1WeGRXVnpkRkJ5WlhCaGNtVlFjbTl3YjNOaGJDa2dZV0pqYVhSNWNHVnpMbEpsYzNCdmJuTmxVSEpsY0dGeVpWQnliM0J2YzJGc0lIc0tDWEpsZEhWeWJpQmhZbU5wZEhsd1pYTXVVbVZ6Y0c5dWMyVlFjbVZ3WVhKbFVISnZjRzl6WVd4N1ZIaHpPaUJ3Y205d2IzTmhiQzVVZUhOOUNuMEsiPjwvdG0tY29kZS1ibG9jaz4KICAgIDxwPk9uY2UgYSBwcm9wb3NlZCBibG9jayBpcyByZWNlaXZlZCBieSBhIG5vZGUsIHRoZSBwcm9wb3NhbCBpcyBwYXNzZWQgdG8gdGhlIGFwcGxpY2F0aW9uIHRvIGdpdmUKaXRzIGJsZXNzaW5nIGJlZm9yZSB2b3RpbmcgdG8gYWNjZXB0IHRoZSBwcm9wb3NhbC48L3A+CjxwPlRoaXMgbWVjaGFuaXNtIG1heSBiZSB1c2VkIGZvciBkaWZmZXJlbnQgcmVhc29ucywgZm9yIGV4YW1wbGUgdG8gZGVhbCB3aXRoIGJsb2NrcyBtYW5pcHVsYXRlZApieSBtYWxpY2lvdXMgbm9kZXMsIGluIHdoaWNoIGNhc2UgdGhlIGJsb2NrIHNob3VsZCBub3QgYmUgY29uc2lkZXJlZCB2YWxpZC4KVGhlIGZvbGxvd2luZyBjb2RlIHNpbXBseSBhY2NlcHRzIGFsbCBwcm9wb3NhbHM6PC9wPgoKICAgIDx0bS1jb2RlLWJsb2NrIGNsYXNzPSJjb2RlYmxvY2siIGxhbmd1YWdlPSJnbyIgYmFzZTY0PSJablZ1WXlBb1lYQndJQ3BMVmxOMGIzSmxRWEJ3YkdsallYUnBiMjRwSUZCeWIyTmxjM05RY205d2IzTmhiQ2h3Y205d2IzTmhiQ0JoWW1OcGRIbHdaWE11VW1WeGRXVnpkRkJ5YjJObGMzTlFjbTl3YjNOaGJDa2dZV0pqYVhSNWNHVnpMbEpsYzNCdmJuTmxVSEp2WTJWemMxQnliM0J2YzJGc0lIc0tDWEpsZEhWeWJpQmhZbU5wZEhsd1pYTXVVbVZ6Y0c5dWMyVlFjbTlqWlhOelVISnZjRzl6WVd4N1UzUmhkSFZ6T2lCaFltTnBkSGx3WlhNdVVtVnpjRzl1YzJWUWNtOWpaWE56VUhKdmNHOXpZV3hmUVVORFJWQlVmUXA5Q2c9PSI+PC90bS1jb2RlLWJsb2NrPgogICAgPGgyIGlkPSJfMS00LXN0YXJ0aW5nLWFuLWFwcGxpY2F0aW9uLWFuZC1hLXRlbmRlcm1pbnQtY29yZS1pbnN0YW5jZS1pbi10aGUtc2FtZS1wcm9jZXNzIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI18xLTQtc3RhcnRpbmctYW4tYXBwbGljYXRpb24tYW5kLWEtdGVuZGVybWludC1jb3JlLWluc3RhbmNlLWluLXRoZS1zYW1lLXByb2Nlc3MiPiM8L2E+IDEuNCBTdGFydGluZyBhbiBhcHBsaWNhdGlvbiBhbmQgYSBUZW5kZXJtaW50IENvcmUgaW5zdGFuY2UgaW4gdGhlIHNhbWUgcHJvY2VzczwvaDI+CjxwPk5vdyB0aGF0IHdlIGhhdmUgdGhlIGJhc2ljIGZ1bmN0aW9uYWxpdHkgb2Ygb3VyIGFwcGxpY2F0aW9uIGluIHBsYWNlLCBsZXQncyBwdXQgaXQgYWxsIHRvZ2V0aGVyIGluc2lkZSBvZiBvdXIgbWFpbi5nbyBmaWxlLjwvcD4KPHA+Q2hhbmdlIHRoZSBjb250ZW50cyBvZiB5b3VyIDxjb2RlPm1haW4uZ288L2NvZGU+IGZpbGUgdG8gdGhlIGZvbGxvd2luZy48L3A+CgogICAgPHRtLWNvZGUtYmxvY2sgY2xhc3M9ImNvZGVibG9jayIgbGFuZ3VhZ2U9ImdvIiBiYXNlNjQ9ImNHRmphMkZuWlNCdFlXbHVDZ3BwYlhCdmNuUWdLQW9KSm5GMWIzUTdabXhoWnlaeGRXOTBPd29KSm5GMWIzUTdabTEwSm5GMWIzUTdDZ2ttY1hWdmREdG5hWFJvZFdJdVkyOXRMM1JsYm1SbGNtMXBiblF2ZEdWdVpHVnliV2x1ZEM5d01uQW1jWFZ2ZERzS0NTWnhkVzkwTzJkcGRHaDFZaTVqYjIwdmRHVnVaR1Z5YldsdWRDOTBaVzVrWlhKdGFXNTBMM0J5YVhaMllXd21jWFZ2ZERzS0NTWnhkVzkwTzJkcGRHaDFZaTVqYjIwdmRHVnVaR1Z5YldsdWRDOTBaVzVrWlhKdGFXNTBMM0J5YjNoNUpuRjFiM1E3Q2drbWNYVnZkRHRzYjJjbWNYVnZkRHNLQ1NaeGRXOTBPMjl6Sm5GMWIzUTdDZ2ttY1hWdmREdHZjeTl6YVdkdVlXd21jWFZ2ZERzS0NTWnhkVzkwTzNCaGRHZ3ZabWxzWlhCaGRHZ21jWFZ2ZERzS0NTWnhkVzkwTzNONWMyTmhiR3dtY1hWdmREc0tDZ2ttY1hWdmREdG5hWFJvZFdJdVkyOXRMMlJuY21Gd2FDMXBieTlpWVdSblpYSXZkak1tY1hWdmREc0tDU1p4ZFc5ME8yZHBkR2gxWWk1amIyMHZjM0JtTVRNdmRtbHdaWEltY1hWdmREc0tDV05tWnlBbWNYVnZkRHRuYVhSb2RXSXVZMjl0TDNSbGJtUmxjbTFwYm5RdmRHVnVaR1Z5YldsdWRDOWpiMjVtYVdjbWNYVnZkRHNLQ1hSdFpteGhaM01nSm5GMWIzUTdaMmwwYUhWaUxtTnZiUzkwWlc1a1pYSnRhVzUwTDNSbGJtUmxjbTFwYm5RdmJHbGljeTlqYkdrdlpteGhaM01tY1hWdmREc0tDWFJ0Ykc5bklDWnhkVzkwTzJkcGRHaDFZaTVqYjIwdmRHVnVaR1Z5YldsdWRDOTBaVzVrWlhKdGFXNTBMMnhwWW5NdmJHOW5KbkYxYjNRN0NnbHViU0FtY1hWdmREdG5hWFJvZFdJdVkyOXRMM1JsYm1SbGNtMXBiblF2ZEdWdVpHVnliV2x1ZEM5dWIyUmxKbkYxYjNRN0Npa0tDblpoY2lCb2IyMWxSR2x5SUhOMGNtbHVad29LWm5WdVl5QnBibWwwS0NrZ2V3b0pabXhoWnk1VGRISnBibWRXWVhJb0ptRnRjRHRvYjIxbFJHbHlMQ0FtY1hWdmREdDBiUzFvYjIxbEpuRjFiM1E3TENBbWNYVnZkRHNtY1hWdmREc3NJQ1p4ZFc5ME8xQmhkR2dnZEc4Z2RHaGxJSFJsYm1SbGNtMXBiblFnWTI5dVptbG5JR1JwY21WamRHOXllU0FvYVdZZ1pXMXdkSGtzSUhWelpYTWdKRWhQVFVVdkxuUmxibVJsY20xcGJuUXBKbkYxYjNRN0tRcDlDZ3BtZFc1aklHMWhhVzRvS1NCN0NnbG1iR0ZuTGxCaGNuTmxLQ2tLQ1dsbUlHaHZiV1ZFYVhJZ1BUMGdKbkYxYjNRN0puRjFiM1E3SUhzS0NRbG9iMjFsUkdseUlEMGdiM011Ulhod1lXNWtSVzUyS0NaeGRXOTBPeVJJVDAxRkx5NTBaVzVrWlhKdGFXNTBKbkYxYjNRN0tRb0pmUW9KWTI5dVptbG5JRG85SUdObVp5NUVaV1poZFd4MFEyOXVabWxuS0NrS0NnbGpiMjVtYVdjdVUyVjBVbTl2ZENob2IyMWxSR2x5S1FvS0NYWnBjR1Z5TGxObGRFTnZibVpwWjBacGJHVW9abTEwTGxOd2NtbHVkR1lvSm5GMWIzUTdKWE12SlhNbWNYVnZkRHNzSUdodmJXVkVhWElzSUNaeGRXOTBPMk52Ym1acFp5OWpiMjVtYVdjdWRHOXRiQ1p4ZFc5ME95a3BDZ2xwWmlCbGNuSWdPajBnZG1sd1pYSXVVbVZoWkVsdVEyOXVabWxuS0NrN0lHVnljaUFoUFNCdWFXd2dld29KQ1d4dlp5NUdZWFJoYkdZb0puRjFiM1E3VW1WaFpHbHVaeUJqYjI1bWFXYzZJQ1YySm5GMWIzUTdMQ0JsY25JcENnbDlDZ2xwWmlCbGNuSWdPajBnZG1sd1pYSXVWVzV0WVhKemFHRnNLR052Ym1acFp5azdJR1Z5Y2lBaFBTQnVhV3dnZXdvSkNXeHZaeTVHWVhSaGJHWW9KbkYxYjNRN1JHVmpiMlJwYm1jZ1kyOXVabWxuT2lBbGRpWnhkVzkwT3l3Z1pYSnlLUW9KZlFvSmFXWWdaWEp5SURvOUlHTnZibVpwWnk1V1lXeHBaR0YwWlVKaGMybGpLQ2s3SUdWeWNpQWhQU0J1YVd3Z2V3b0pDV3h2Wnk1R1lYUmhiR1lvSm5GMWIzUTdTVzUyWVd4cFpDQmpiMjVtYVdkMWNtRjBhVzl1SUdSaGRHRTZJQ1YySm5GMWIzUTdMQ0JsY25JcENnbDlDZ29KWkdKUVlYUm9JRG85SUdacGJHVndZWFJvTGtwdmFXNG9hRzl0WlVScGNpd2dKbkYxYjNRN1ltRmtaMlZ5Sm5GMWIzUTdLUW9KWkdJc0lHVnljaUE2UFNCaVlXUm5aWEl1VDNCbGJpaGlZV1JuWlhJdVJHVm1ZWFZzZEU5d2RHbHZibk1vWkdKUVlYUm9LU2tLQ1dsbUlHVnljaUFoUFNCdWFXd2dld29KQ1d4dlp5NUdZWFJoYkdZb0puRjFiM1E3VDNCbGJtbHVaeUJrWVhSaFltRnpaVG9nSlhZbWNYVnZkRHNzSUdWeWNpa0tDWDBLQ1dSbFptVnlJR1oxYm1Nb0tTQjdDZ2tKYVdZZ1pYSnlJRG85SUdSaUxrTnNiM05sS0NrN0lHVnljaUFoUFNCdWFXd2dld29KQ1Fsc2IyY3VVSEpwYm5SbUtDWnhkVzkwTzBOc2IzTnBibWNnWkdGMFlXSmhjMlU2SUNWMkpuRjFiM1E3TENCbGNuSXBDZ2tKZlFvSmZTZ3BDZ29KWVhCd0lEbzlJRTVsZDB0V1UzUnZjbVZCY0hCc2FXTmhkR2x2Ymloa1lpa0tDZ2x3ZGlBNlBTQndjbWwyZG1Gc0xreHZZV1JHYVd4bFVGWW9DZ2tKWTI5dVptbG5MbEJ5YVhaV1lXeHBaR0YwYjNKTFpYbEdhV3hsS0Nrc0Nna0pZMjl1Wm1sbkxsQnlhWFpXWVd4cFpHRjBiM0pUZEdGMFpVWnBiR1VvS1N3S0NTa0tDZ2x1YjJSbFMyVjVMQ0JsY25JZ09qMGdjREp3TGt4dllXUk9iMlJsUzJWNUtHTnZibVpwWnk1T2IyUmxTMlY1Um1sc1pTZ3BLUW9KYVdZZ1pYSnlJQ0U5SUc1cGJDQjdDZ2tKYkc5bkxrWmhkR0ZzWmlnbWNYVnZkRHRtWVdsc1pXUWdkRzhnYkc5aFpDQnViMlJsSjNNZ2EyVjVPaUFsZGlaeGRXOTBPeXdnWlhKeUtRb0pmUW9LQ1d4dloyZGxjaUE2UFNCMGJXeHZaeTVPWlhkVVRVeHZaMmRsY2loMGJXeHZaeTVPWlhkVGVXNWpWM0pwZEdWeUtHOXpMbE4wWkc5MWRDa3BDZ2xzYjJkblpYSXNJR1Z5Y2lBOUlIUnRabXhoWjNNdVVHRnljMlZNYjJkTVpYWmxiQ2hqYjI1bWFXY3VURzluVEdWMlpXd3NJR3h2WjJkbGNpd2dZMlpuTGtSbFptRjFiSFJNYjJkTVpYWmxiQ2tLQ1dsbUlHVnljaUFoUFNCdWFXd2dld29KQ1d4dlp5NUdZWFJoYkdZb0puRjFiM1E3Wm1GcGJHVmtJSFJ2SUhCaGNuTmxJR3h2WnlCc1pYWmxiRG9nSlhZbWNYVnZkRHNzSUdWeWNpa0tDWDBLQ2dsdWIyUmxMQ0JsY25JZ09qMGdibTB1VG1WM1RtOWtaU2dLQ1FsamIyNW1hV2NzQ2drSmNIWXNDZ2tKYm05a1pVdGxlU3dLQ1Fsd2NtOTRlUzVPWlhkTWIyTmhiRU5zYVdWdWRFTnlaV0YwYjNJb1lYQndLU3dLQ1FsdWJTNUVaV1poZFd4MFIyVnVaWE5wYzBSdlkxQnliM1pwWkdWeVJuVnVZeWhqYjI1bWFXY3BMQW9KQ1c1dExrUmxabUYxYkhSRVFsQnliM1pwWkdWeUxBb0pDVzV0TGtSbFptRjFiSFJOWlhSeWFXTnpVSEp2ZG1sa1pYSW9ZMjl1Wm1sbkxrbHVjM1J5ZFcxbGJuUmhkR2x2Ymlrc0Nna0piRzluWjJWeUtRb0tDV2xtSUdWeWNpQWhQU0J1YVd3Z2V3b0pDV3h2Wnk1R1lYUmhiR1lvSm5GMWIzUTdRM0psWVhScGJtY2dibTlrWlRvZ0pYWW1jWFZ2ZERzc0lHVnljaWtLQ1gwS0NnbHViMlJsTGxOMFlYSjBLQ2tLQ1dSbFptVnlJR1oxYm1Nb0tTQjdDZ2tKYm05a1pTNVRkRzl3S0NrS0NRbHViMlJsTGxkaGFYUW9LUW9KZlNncENnb0pZeUE2UFNCdFlXdGxLR05vWVc0Z2IzTXVVMmxuYm1Gc0xDQXhLUW9KYzJsbmJtRnNMazV2ZEdsbWVTaGpMQ0J2Y3k1SmJuUmxjbkoxY0hRc0lITjVjMk5oYkd3dVUwbEhWRVZTVFNrS0NTWnNkRHN0WXdwOUNnPT0iPjwvdG0tY29kZS1ibG9jaz4KICAgIDxwPlRoaXMgaXMgYSBodWdlIGJsb2Igb2YgY29kZSwgc28gbGV0J3MgYnJlYWsgaXQgZG93biBpbnRvIHBpZWNlcy48L3A+CjxwPkZpcnN0LCB3ZSB1c2UgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3NwZjEzL3ZpcGVyIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj52aXBlcjxPdXRib3VuZExpbmsvPjwvYT4gdG8gbG9hZCB0aGUgVGVuZGVybWludCBDb3JlIGNvbmZpZ3VyYXRpb24gZmlsZXMsIHdoaWNoIHdlIHdpbGwgZ2VuZXJhdGUgbGF0ZXI6PC9wPgoKICAgIDx0bS1jb2RlLWJsb2NrIGNsYXNzPSJjb2RlYmxvY2siIGxhbmd1YWdlPSJnbyIgYmFzZTY0PSJDV052Ym1acFp5QTZQU0JqWm1jdVJHVm1ZWFZzZEZaaGJHbGtZWFJ2Y2tOdmJtWnBaeWdwQ2dvSlkyOXVabWxuTGxObGRGSnZiM1FvYUc5dFpVUnBjaWtLQ2dsMmFYQmxjaTVUWlhSRGIyNW1hV2RHYVd4bEtHWnRkQzVUY0hKcGJuUm1LQ1p4ZFc5ME95VnpMeVZ6Sm5GMWIzUTdMQ0JvYjIxbFJHbHlMQ0FtY1hWdmREdGpiMjVtYVdjdlkyOXVabWxuTG5SdmJXd21jWFZ2ZERzcEtRb0phV1lnWlhKeUlEbzlJSFpwY0dWeUxsSmxZV1JKYmtOdmJtWnBaeWdwT3lCbGNuSWdJVDBnYm1sc0lIc0tDUWxzYjJjdVJtRjBZV3htS0NaeGRXOTBPMUpsWVdScGJtY2dZMjl1Wm1sbk9pQWxkaVp4ZFc5ME95d2daWEp5S1FvSmZRb0phV1lnWlhKeUlEbzlJSFpwY0dWeUxsVnViV0Z5YzJoaGJDaGpiMjVtYVdjcE95QmxjbklnSVQwZ2JtbHNJSHNLQ1Fsc2IyY3VSbUYwWVd4bUtDWnhkVzkwTzBSbFkyOWthVzVuSUdOdmJtWnBaem9nSlhZbWNYVnZkRHNzSUdWeWNpa0tDWDBLQ1dsbUlHVnljaUE2UFNCamIyNW1hV2N1Vm1Gc2FXUmhkR1ZDWVhOcFl5Z3BPeUJsY25JZ0lUMGdibWxzSUhzS0NRbHNiMmN1Um1GMFlXeG1LQ1p4ZFc5ME8wbHVkbUZzYVdRZ1kyOXVabWxuZFhKaGRHbHZiaUJrWVhSaE9pQWxkaVp4ZFc5ME95d2daWEp5S1FvSmZRbz0iPjwvdG0tY29kZS1ibG9jaz4KICAgIDxwPk5leHQsIHdlIGluaXRpYWxpemUgdGhlIEJhZGdlciBkYXRhYmFzZSBhbmQgY3JlYXRlIGFuIGFwcCBpbnN0YW5jZS48L3A+CgogICAgPHRtLWNvZGUtYmxvY2sgY2xhc3M9ImNvZGVibG9jayIgbGFuZ3VhZ2U9ImdvIiBiYXNlNjQ9IkNXUmlVR0YwYUNBNlBTQm1hV3hsY0dGMGFDNUtiMmx1S0dodmJXVkVhWElzSUNaeGRXOTBPMkpoWkdkbGNpWnhkVzkwT3lrS0NXUmlMQ0JsY25JZ09qMGdZbUZrWjJWeUxrOXdaVzRvWW1Ga1oyVnlMa1JsWm1GMWJIUlBjSFJwYjI1ektHUmlVR0YwYUNrcENnbHBaaUJsY25JZ0lUMGdibWxzSUhzS0NRbHNiMmN1Um1GMFlXeG1LQ1p4ZFc5ME8wOXdaVzVwYm1jZ1pHRjBZV0poYzJVNklDVjJKbkYxYjNRN0xDQmxjbklwQ2dsOUNnbGtaV1psY2lCbWRXNWpLQ2tnZXdvSkNXbG1JR1Z5Y2lBNlBTQmtZaTVEYkc5elpTZ3BPeUJsY25JZ0lUMGdibWxzSUhzS0NRa0piRzluTGtaaGRHRnNaaWdtY1hWdmREdERiRzl6YVc1bklHUmhkR0ZpWVhObE9pQWxkaVp4ZFc5ME95d2daWEp5S1FvSkNYMEtDWDBvS1FvS0NXRndjQ0E2UFNCT1pYZExWbE4wYjNKbFFYQndiR2xqWVhScGIyNG9aR0lwQ2c9PSI+PC90bS1jb2RlLWJsb2NrPgogICAgPHA+V2UgdXNlIDxjb2RlPkZpbGVQVjwvY29kZT4sIHdoaWNoIGlzIGEgcHJpdmF0ZSB2YWxpZGF0b3IgKGkuZS4gdGhpbmcgd2hpY2ggc2lnbnMgY29uc2Vuc3VzCm1lc3NhZ2VzKS4gTm9ybWFsbHksIHlvdSB3b3VsZCB1c2UgPGNvZGU+U2lnbmVyUmVtb3RlPC9jb2RlPiB0byBjb25uZWN0IHRvIGFuIGV4dGVybmFsCjxhIGhyZWY9Imh0dHBzOi8va2IuY2VydHVzLm9uZS9oc20uaHRtbCIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+SFNNPE91dGJvdW5kTGluay8+PC9hPi48L3A+CgogICAgPHRtLWNvZGUtYmxvY2sgY2xhc3M9ImNvZGVibG9jayIgbGFuZ3VhZ2U9ImdvIiBiYXNlNjQ9IkNYQjJJRG85SUhCeWFYWjJZV3d1VEc5aFpFWnBiR1ZRVmlnS0NRbGpiMjVtYVdjdVVISnBkbFpoYkdsa1lYUnZja3RsZVVacGJHVW9LU3dLQ1FsamIyNW1hV2N1VUhKcGRsWmhiR2xrWVhSdmNsTjBZWFJsUm1sc1pTZ3BMQW9KS1FvPSI+PC90bS1jb2RlLWJsb2NrPgogICAgPHA+PGNvZGU+bm9kZUtleTwvY29kZT4gaXMgbmVlZGVkIHRvIGlkZW50aWZ5IHRoZSBub2RlIGluIGEgcDJwIG5ldHdvcmsuPC9wPgoKICAgIDx0bS1jb2RlLWJsb2NrIGNsYXNzPSJjb2RlYmxvY2siIGxhbmd1YWdlPSJnbyIgYmFzZTY0PSJDVzV2WkdWTFpYa3NJR1Z5Y2lBNlBTQndNbkF1VEc5aFpFNXZaR1ZMWlhrb1kyOXVabWxuTGs1dlpHVkxaWGxHYVd4bEtDa3BDZ2xwWmlCbGNuSWdJVDBnYm1sc0lIc0tDUWx5WlhSMWNtNGdibWxzTENCbWJYUXVSWEp5YjNKbUtDWnhkVzkwTzJaaGFXeGxaQ0IwYnlCc2IyRmtJRzV2WkdVbmN5QnJaWGs2SUNWM0puRjFiM1E3TENCbGNuSXBDZ2w5Q2c9PSI+PC90bS1jb2RlLWJsb2NrPgogICAgPHA+Tm93IHdlIGhhdmUgZXZlcnl0aGluZyBzZXQgdXAgdG8gcnVuIHRoZSBUZW5kZXJtaW50IG5vZGUuIFdlIGNvbnN0cnVjdAphIG5vZGUgYnkgcGFzc2luZyBpdCB0aGUgY29uZmlndXJhdGlvbiwgdGhlIGxvZ2dlciwgYSBoYW5kbGUgdG8gb3VyIGFwcGxpY2F0aW9uIGFuZAp0aGUgZ2VuZXNpcyBpbmZvcm1hdGlvbjo8L3A+CgogICAgPHRtLWNvZGUtYmxvY2sgY2xhc3M9ImNvZGVibG9jayIgbGFuZ3VhZ2U9ImdvIiBiYXNlNjQ9IkNXNXZaR1VzSUdWeWNpQTZQU0J1YlM1T1pYZE9iMlJsS0FvSkNXTnZibVpwWnl3S0NRbHdkaXdLQ1FsdWIyUmxTMlY1TEFvSkNYQnliM2g1TGs1bGQweHZZMkZzUTJ4cFpXNTBRM0psWVhSdmNpaGhjSEFwTEFvSkNXNXRMa1JsWm1GMWJIUkhaVzVsYzJselJHOWpVSEp2ZG1sa1pYSkdkVzVqS0dOdmJtWnBaeWtzQ2drSmJtMHVSR1ZtWVhWc2RFUkNVSEp2ZG1sa1pYSXNDZ2tKYm0wdVJHVm1ZWFZzZEUxbGRISnBZM05RY205MmFXUmxjaWhqYjI1bWFXY3VTVzV6ZEhKMWJXVnVkR0YwYVc5dUtTd0tDUWxzYjJkblpYSXBDZ29KYVdZZ1pYSnlJQ0U5SUc1cGJDQjdDZ2tKYkc5bkxrWmhkR0ZzWmlnbWNYVnZkRHREY21WaGRHbHVaeUJ1YjJSbE9pQWxkaVp4ZFc5ME95d2daWEp5S1FvSmZRbz0iPjwvdG0tY29kZS1ibG9jaz4KICAgIDxwPkZpbmFsbHksIHdlIHN0YXJ0IHRoZSBub2RlLCBpLmUuLCB0aGUgVGVuZGVybWludCBDb3JlIHNlcnZpY2UgaW5zaWRlIG91ciBhcHBsaWNhdGlvbjo8L3A+CgogICAgPHRtLWNvZGUtYmxvY2sgY2xhc3M9ImNvZGVibG9jayIgbGFuZ3VhZ2U9ImdvIiBiYXNlNjQ9IkNXNXZaR1V1VTNSaGNuUW9LUW9KWkdWbVpYSWdablZ1WXlncElIc0tDUWx1YjJSbExsTjBiM0FvS1FvSkNXNXZaR1V1VjJGcGRDZ3BDZ2w5S0NrSyI+PC90bS1jb2RlLWJsb2NrPgogICAgPHA+VGhlIGFkZGl0aW9uYWwgbG9naWMgYXQgdGhlIGVuZCBvZiB0aGUgZmlsZSBhbGxvd3MgdGhlIHByb2dyYW0gdG8gY2F0Y2ggU0lHVEVSTS4gVGhpcyBtZWFucyB0aGF0IHRoZSBub2RlIGNhbiBzaHV0IGRvd24gZ3JhY2VmdWxseSB3aGVuIGFuIG9wZXJhdG9yIHRyaWVzIHRvIGtpbGwgdGhlIHByb2dyYW06PC9wPgoKICAgIDx0bS1jb2RlLWJsb2NrIGNsYXNzPSJjb2RlYmxvY2siIGxhbmd1YWdlPSJnbyIgYmFzZTY0PSJDV01nT2owZ2JXRnJaU2hqYUdGdUlHOXpMbE5wWjI1aGJDd2dNU2tLQ1hOcFoyNWhiQzVPYjNScFpua29ZeXdnYjNNdVNXNTBaWEp5ZFhCMExDQnplWE5qWVd4c0xsTkpSMVJGVWswcENna21iSFE3TFdNSyI+PC90bS1jb2RlLWJsb2NrPgogICAgPGgyIGlkPSJfMS01LWluaXRpYWxpemluZy1hbmQtcnVubmluZyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNfMS01LWluaXRpYWxpemluZy1hbmQtcnVubmluZyI+IzwvYT4gMS41IEluaXRpYWxpemluZyBhbmQgUnVubmluZzwvaDI+CjxwPk91ciBhcHBsaWNhdGlvbiBpcyBhbG1vc3QgcmVhZHkgdG8gcnVuLCBidXQgZmlyc3Qgd2UnbGwgbmVlZCB0byBwb3B1bGF0ZSB0aGUgVGVuZGVybWludCBDb3JlIGNvbmZpZ3VyYXRpb24gZmlsZXMuClRoZSBmb2xsb3dpbmcgY29tbWFuZCB3aWxsIGNyZWF0ZSBhIDxjb2RlPnRlbmRlcm1pbnQtaG9tZTwvY29kZT4gZGlyZWN0b3J5IGluIHlvdXIgcHJvamVjdCBhbmQgYWRkIGEgYmFzaWMgc2V0IG9mIGNvbmZpZ3VyYXRpb24gZmlsZXMgaW4gPGNvZGU+dGVuZGVybWludC1ob21lL2NvbmZpZy88L2NvZGU+LgpGb3IgbW9yZSBpbmZvcm1hdGlvbiBvbiB3aGF0IHRoZXNlIGZpbGVzIGNvbnRhaW4gc2VlIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS90ZW5kZXJtaW50L3RlbmRlcm1pbnQvYmxvYi92MC4zNy4wL2RvY3Mvbm9kZXMvY29uZmlndXJhdGlvbi5tZCIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+dGhlIGNvbmZpZ3VyYXRpb24gZG9jdW1lbnRhdGlvbjxPdXRib3VuZExpbmsvPjwvYT4uPC9wPgo8cD5Gcm9tIHRoZSByb290IG9mIHlvdXIgcHJvamVjdCwgcnVuOjwvcD4KCiAgICA8dG0tY29kZS1ibG9jayBjbGFzcz0iY29kZWJsb2NrIiBsYW5ndWFnZT0iYmFzaCIgYmFzZTY0PSJaMjhnY25WdUlHZHBkR2gxWWk1amIyMHZkR1Z1WkdWeWJXbHVkQzkwWlc1a1pYSnRhVzUwTDJOdFpDOTBaVzVrWlhKdGFXNTBRSFl3TGpNM0xqQWdhVzVwZENBdExXaHZiV1VnTDNSdGNDOTBaVzVrWlhKdGFXNTBMV2h2YldVSyI+PC90bS1jb2RlLWJsb2NrPgogICAgPHA+WW91IHNob3VsZCBzZWUgYW4gb3V0cHV0IHNpbWlsYXIgdG8gdGhlIGZvbGxvd2luZzo8L3A+CgogICAgPHRtLWNvZGUtYmxvY2sgY2xhc3M9ImNvZGVibG9jayIgbGFuZ3VhZ2U9ImJhc2giIGJhc2U2ND0iU1ZzeU1ESXlMVEV4TFRBNWZEQTVPakEyT2pNMExqUTBORjBnUjJWdVpYSmhkR1ZrSUhCeWFYWmhkR1VnZG1Gc2FXUmhkRzl5SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYlc5a2RXeGxQVzFoYVc0Z2EyVjVSbWxzWlQwdmRHMXdMM1JsYm1SbGNtMXBiblF0YUc5dFpTOWpiMjVtYVdjdmNISnBkbDkyWVd4cFpHRjBiM0pmYTJWNUxtcHpiMjRnYzNSaGRHVkdhV3hsUFM5MGJYQXZkR1Z1WkdWeWJXbHVkQzFvYjIxbEwyUmhkR0V2Y0hKcGRsOTJZV3hwWkdGMGIzSmZjM1JoZEdVdWFuTnZiZ3BKV3pJd01qSXRNVEV0TURsOE1EazZNRFk2TXpRdU5EUTBYU0JIWlc1bGNtRjBaV1FnYm05a1pTQnJaWGtnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0YjJSMWJHVTliV0ZwYmlCd1lYUm9QUzkwYlhBdmRHVnVaR1Z5YldsdWRDMW9iMjFsTDJOdmJtWnBaeTl1YjJSbFgydGxlUzVxYzI5dUNrbGJNakF5TWkweE1TMHdPWHd3T1Rvd05qb3pOQzQwTkRSZElFZGxibVZ5WVhSbFpDQm5aVzVsYzJseklHWnBiR1VnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMXZaSFZzWlQxdFlXbHVJSEJoZEdnOUwzUnRjQzkwWlc1a1pYSnRhVzUwTFdodmJXVXZZMjl1Wm1sbkwyZGxibVZ6YVhNdWFuTnZiZ289Ij48L3RtLWNvZGUtYmxvY2s+CiAgICA8cD5Ob3cgcmVidWlsZCB0aGUgYXBwOjwvcD4KCiAgICA8dG0tY29kZS1ibG9jayBjbGFzcz0iY29kZWJsb2NrIiBsYW5ndWFnZT0iYmFzaCIgYmFzZTY0PSJaMjhnWW5WcGJHUWdMVzF2WkQxdGIyUWdJeUIxYzJVZ0xXMXZaRDF0YjJRZ2RHOGdZWFYwYjIxaGRHbGpZV3hzZVNCeVpXWnlaWE5vSUhSb1pTQmtaWEJsYm1SbGJtTnBaWE1LIj48L3RtLWNvZGUtYmxvY2s+CiAgICA8cD5FdmVyeXRoaW5nIGlzIG5vdyBpbiBwbGFjZSB0byBydW4geW91ciBhcHBsaWNhdGlvbi4gUnVuOjwvcD4KCiAgICA8dG0tY29kZS1ibG9jayBjbGFzcz0iY29kZWJsb2NrIiBsYW5ndWFnZT0iYmFzaCIgYmFzZTY0PSJMaTlyZG5OMGIzSmxJQzEwYlMxb2IyMWxJQzkwYlhBdmRHVnVaR1Z5YldsdWRDMW9iMjFsQ2c9PSI+PC90bS1jb2RlLWJsb2NrPgogICAgPHA+VGhlIGFwcGxpY2F0aW9uIHdpbGwgc3RhcnQgYW5kIHlvdSBzaG91bGQgc2VlIGEgY29udGludW91cyBvdXRwdXQgc3RhcnRpbmcgd2l0aDo8L3A+CgogICAgPHRtLWNvZGUtYmxvY2sgY2xhc3M9ImNvZGVibG9jayIgbGFuZ3VhZ2U9ImJhc2giIGJhc2U2ND0iWW1Ga1oyVnlJREl3TWpJdk1URXZNRGtnTURrNk1EZzZOVEFnU1U1R1R6b2dRV3hzSURBZ2RHRmliR1Z6SUc5d1pXNWxaQ0JwYmlBd2N3cGlZV1JuWlhJZ01qQXlNaTh4TVM4d09TQXdPVG93T0RvMU1DQkpUa1pQT2lCRWFYTmpZWEprSUhOMFlYUnpJRzVsZUhSRmJYQjBlVk5zYjNRNklEQUtZbUZrWjJWeUlESXdNakl2TVRFdk1Ea2dNRGs2TURnNk5UQWdTVTVHVHpvZ1UyVjBJRzVsZUhSVWVHNVVjeUIwYnlBd0NrbGJNakF5TWkweE1TMHdPWHd3T1Rvd09EbzFNQzR3T0RWZElITmxjblpwWTJVZ2MzUmhjblFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMXZaSFZzWlQxd2NtOTRlU0J0YzJjOUpuRjFiM1E3VTNSaGNuUnBibWNnYlhWc2RHbEJjSEJEYjI1dUlITmxjblpwWTJVbWNYVnZkRHNnYVcxd2JEMXRkV3gwYVVGd2NFTnZibTRLU1ZzeU1ESXlMVEV4TFRBNWZEQTVPakE0T2pVd0xqQTROVjBnYzJWeWRtbGpaU0J6ZEdGeWRDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYlc5a2RXeGxQV0ZpWTJrdFkyeHBaVzUwSUdOdmJtNWxZM1JwYjI0OWNYVmxjbmtnYlhOblBTWnhkVzkwTzFOMFlYSjBhVzVuSUd4dlkyRnNRMnhwWlc1MElITmxjblpwWTJVbWNYVnZkRHNnYVcxd2JEMXNiMk5oYkVOc2FXVnVkQXBKV3pJd01qSXRNVEV0TURsOE1EazZNRGc2TlRBdU1EZzFYU0J6WlhKMmFXTmxJSE4wWVhKMElDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0YjJSMWJHVTlZV0pqYVMxamJHbGxiblFnWTI5dWJtVmpkR2x2YmoxemJtRndjMmh2ZENCdGMyYzlKbkYxYjNRN1UzUmhjblJwYm1jZ2JHOWpZV3hEYkdsbGJuUWdjMlZ5ZG1salpTWnhkVzkwT3lCcGJYQnNQV3h2WTJGc1EyeHBaVzUwQ2k0dUxnbz0iPjwvdG0tY29kZS1ibG9jaz4KICAgIDxwPk1vcmUgaW1wb3J0YW50bHksIHRoZSBhcHBsaWNhdGlvbiB1c2luZyBUZW5kZXJtaW50IENvcmUgaXMgcHJvZHVjaW5nIGJsb2NrcyAg8J+OifCfjokgYW5kIHlvdSBjYW4gc2VlIHRoaXMgcmVmbGVjdGVkIGluIHRoZSBsb2cgb3V0cHV0IGluIGxpbmVzIGxpa2UgdGhpczo8L3A+CgogICAgPHRtLWNvZGUtYmxvY2sgY2xhc3M9ImNvZGVibG9jayIgbGFuZ3VhZ2U9ImJhc2giIGJhc2U2ND0iU1ZzeU1ESXlMVEV4TFRBNWZEQTVPakE0T2pVeUxqRTBOMTBnY21WalpXbDJaV1FnY0hKdmNHOXpZV3dnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYlc5a2RXeGxQV052Ym5ObGJuTjFjeUJ3Y205d2IzTmhiRDBtY1hWdmREdFFjbTl3YjNOaGJIc3lMekFnS0VZMU1UZzBORFJETUVVek5EZ3lOekEwTXpaQk56TkdSREJHTUVJNVJFWkZRVGMxT0RJNE5rSkZRakk1TkRneVJqRkZNMEpGUVRjMU16TXdSVGd5TlVNNk1UcEROek5FTTBReE1qY3pSaklzSUMweEtTQkJSREU1UVVVeU9USkJORFVnUUNBeU1ESXlMVEV4TFRBNVZERXlPakE0T2pVeUxqRTBNek01TTFwOUpuRjFiM1E3Q2tsYk1qQXlNaTB4TVMwd09Yd3dPVG93T0RvMU1pNHhOVEpkSUhKbFkyVnBkbVZrSUdOdmJYQnNaWFJsSUhCeWIzQnZjMkZzSUdKc2IyTnJJQ0FnSUNBZ0lDQWdJQ0FnSUcxdlpIVnNaVDFqYjI1elpXNXpkWE1nYUdWcFoyaDBQVElnYUdGemFEMUdOVEU0TkRRMFF6QkZNelE0TWpjd05ETTJRVGN6UmtRd1JqQkNPVVJHUlVFM05UZ3lPRFpDUlVJeU9UUTRNa1l4UlROQ1JVRTNOVE16TUVVNE1qVkRDa2xiTWpBeU1pMHhNUzB3T1h3d09Ub3dPRG8xTWk0eE5qQmRJR1pwYm1Gc2FYcHBibWNnWTI5dGJXbDBJRzltSUdKc2IyTnJJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzF2WkhWc1pUMWpiMjV6Wlc1emRYTWdhR1ZwWjJoMFBUSWdhR0Z6YUQxR05URTRORFEwUXpCRk16UTRNamN3TkRNMlFUY3pSa1F3UmpCQ09VUkdSVUUzTlRneU9EWkNSVUl5T1RRNE1rWXhSVE5DUlVFM05UTXpNRVU0TWpWRElISnZiM1E5SUc1MWJWOTBlSE05TUFwSld6SXdNakl0TVRFdE1EbDhNRGs2TURnNk5USXVNVFkzWFNCbGVHVmpkWFJsWkNCaWJHOWpheUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdGIyUjFiR1U5YzNSaGRHVWdhR1ZwWjJoMFBUSWdiblZ0WDNaaGJHbGtYM1I0Y3owd0lHNTFiVjlwYm5aaGJHbGtYM1I0Y3owd0NrbGJNakF5TWkweE1TMHdPWHd3T1Rvd09EbzFNaTR4TnpGZElHTnZiVzFwZEhSbFpDQnpkR0YwWlNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMXZaSFZzWlQxemRHRjBaU0JvWldsbmFIUTlNaUJ1ZFcxZmRIaHpQVEFnWVhCd1gyaGhjMmc5Q2c9PSI+PC90bS1jb2RlLWJsb2NrPgogICAgPHA+VGhlIGJsb2NrcywgYXMgeW91IGNhbiBzZWUgZnJvbSB0aGUgPGNvZGU+bnVtX3ZhbGlkX3R4cz0wPC9jb2RlPiBwYXJ0LCBhcmUgZW1wdHksIGJ1dCBsZXQncyByZW1lZHkgdGhhdCBuZXh0LjwvcD4KPGgyIGlkPSJfMS02LXVzaW5nLXRoZS1hcHBsaWNhdGlvbiI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNfMS02LXVzaW5nLXRoZS1hcHBsaWNhdGlvbiI+IzwvYT4gMS42IFVzaW5nIHRoZSBhcHBsaWNhdGlvbjwvaDI+CjxwPkxldCdzIHRyeSBzdWJtaXR0aW5nIGEgdHJhbnNhY3Rpb24gdG8gb3VyIG5ldyBhcHBsaWNhdGlvbi4KT3BlbiBhbm90aGVyIHRlcm1pbmFsIHdpbmRvdyBhbmQgcnVuIHRoZSBmb2xsb3dpbmcgY3VybCBjb21tYW5kOjwvcD4KCiAgICA8dG0tY29kZS1ibG9jayBjbGFzcz0iY29kZWJsb2NrIiBsYW5ndWFnZT0iYmFzaCIgYmFzZTY0PSJZM1Z5YkNBdGN5QW5iRzlqWVd4b2IzTjBPakkyTmpVM0wySnliMkZrWTJGemRGOTBlRjlqYjIxdGFYUS9kSGc5Sm5GMWIzUTdkR1Z1WkdWeWJXbHVkRDF5YjJOcmN5WnhkVzkwT3ljSyI+PC90bS1jb2RlLWJsb2NrPgogICAgPHA+SWYgZXZlcnl0aGluZyB3ZW50IHdlbGwsIHlvdSBzaG91bGQgc2VlIGEgcmVzcG9uc2UgaW5kaWNhdGluZyB3aGljaCBoZWlnaHQgdGhlCnRyYW5zYWN0aW9uIHdhcyBpbmNsdWRlZCBpbiB0aGUgYmxvY2tjaGFpbi48L3A+CjxwPkZpbmFsbHksIGxldCdzIG1ha2Ugc3VyZSB0aGF0IHRyYW5zYWN0aW9uIHJlYWxseSB3YXMgcGVyc2lzdGVkIGJ5IHRoZSBhcHBsaWNhdGlvbi4KUnVuIHRoZSBmb2xsb3dpbmcgY29tbWFuZDo8L3A+CgogICAgPHRtLWNvZGUtYmxvY2sgY2xhc3M9ImNvZGVibG9jayIgbGFuZ3VhZ2U9ImJhc2giIGJhc2U2ND0iWTNWeWJDQXRjeUFuYkc5allXeG9iM04wT2pJMk5qVTNMMkZpWTJsZmNYVmxjbmsvWkdGMFlUMG1jWFZ2ZER0MFpXNWtaWEp0YVc1MEpuRjFiM1E3SndvPSI+PC90bS1jb2RlLWJsb2NrPgogICAgPHA+TGV0J3MgZXhhbWluZSB0aGUgcmVzcG9uc2Ugb2JqZWN0IHRoYXQgdGhpcyByZXF1ZXN0IHJldHVybnMuClRoZSByZXF1ZXN0IHJldHVybnMgYSA8Y29kZT5qc29uPC9jb2RlPiBvYmplY3Qgd2l0aCBhIDxjb2RlPmtleTwvY29kZT4gYW5kIDxjb2RlPnZhbHVlPC9jb2RlPiBmaWVsZCBzZXQuPC9wPgoKICAgIDx0bS1jb2RlLWJsb2NrIGNsYXNzPSJjb2RlYmxvY2siIGxhbmd1YWdlPSJqc29uIiBiYXNlNjQ9IkxpNHVDZ2ttY1hWdmREdHJaWGttY1hWdmREczZJQ1p4ZFc5ME8yUkhWblZhUjFaNVlsZHNkV1JCUFQwbWNYVnZkRHNzQ2drbWNYVnZkRHQyWVd4MVpTWnhkVzkwT3pvZ0puRjFiM1E3WTIwNWFtRXpUVDBtY1hWdmREc3NDaTR1TGdvPSI+PC90bS1jb2RlLWJsb2NrPgogICAgPHA+VGhvc2UgdmFsdWVzIGRvbid0IGxvb2sgbGlrZSB0aGUgPGNvZGU+a2V5PC9jb2RlPiBhbmQgPGNvZGU+dmFsdWU8L2NvZGU+IHdlIHNlbnQgdG8gVGVuZGVybWludC4KV2hhdCdzIGdvaW5nIG9uIGhlcmU/PC9wPgo8cD5UaGUgcmVzcG9uc2UgY29udGFpbnMgYSA8Y29kZT5iYXNlNjQ8L2NvZGU+IGVuY29kZWQgcmVwcmVzZW50YXRpb24gb2YgdGhlIGRhdGEgd2Ugc3VibWl0dGVkLgpUbyBnZXQgdGhlIG9yaWdpbmFsIHZhbHVlIG91dCBvZiB0aGlzIGRhdGEsIHdlIGNhbiB1c2UgdGhlIDxjb2RlPmJhc2U2NDwvY29kZT4gY29tbWFuZCBsaW5lIHV0aWxpdHk6PC9wPgoKICAgIDx0bS1jb2RlLWJsb2NrIGNsYXNzPSJjb2RlYmxvY2siIGxhbmd1YWdlPSJiYXNoIiBiYXNlNjQ9IlpXTm9ieUJqYlRscVlUTk5QU1p4ZFc5ME95QjhJR0poYzJVMk5DQXRaQW89Ij48L3RtLWNvZGUtYmxvY2s+CiAgICA8aDIgaWQ9Im91dHJvIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI291dHJvIj4jPC9hPiBPdXRybzwvaDI+CjxwPkkgaG9wZSBldmVyeXRoaW5nIHdlbnQgc21vb3RobHkgYW5kIHlvdXIgZmlyc3QsIGJ1dCBob3BlZnVsbHkgbm90IHRoZSBsYXN0LApUZW5kZXJtaW50IENvcmUgYXBwbGljYXRpb24gaXMgdXAgYW5kIHJ1bm5pbmcuIElmIG5vdCwgcGxlYXNlIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS90ZW5kZXJtaW50L3RlbmRlcm1pbnQvaXNzdWVzL25ldy9jaG9vc2UiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPm9wZW4gYW4gaXNzdWUgb24KR2l0aHViPE91dGJvdW5kTGluay8+PC9hPi4gVG8gZGlnCmRlZXBlciwgcmVhZCA8YSBocmVmPSJodHRwczovL2RvY3MudGVuZGVybWludC5jb20vbWFpbi8iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPnRoZSBkb2NzPE91dGJvdW5kTGluay8+PC9hPi48L3A+CjwvQ29udGVudFNsb3RzRGlzdHJpYnV0b3I+Cg=="},null]}