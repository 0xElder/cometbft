{"remainingRequest":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/architecture/adr-075-rpc-subscription.md?vue&type=template&id=5219f206&","dependencies":[{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/architecture/adr-075-rpc-subscription.md","mtime":1673295761176},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/cache-loader/dist/cjs.js","mtime":1673296285960},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1673296286086},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/cache-loader/dist/cjs.js","mtime":1673296285960},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/vue-loader/lib/index.js","mtime":1673296285952},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/@vuepress/markdown-loader/index.js","mtime":1673296286103}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PGgxIGlkPSJhZHItMDc1LXJwYy1ldmVudC1zdWJzY3JpcHRpb24taW50ZXJmYWNlIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2Fkci0wNzUtcnBjLWV2ZW50LXN1YnNjcmlwdGlvbi1pbnRlcmZhY2UiPiM8L2E+IEFEUiAwNzU6IFJQQyBFdmVudCBTdWJzY3JpcHRpb24gSW50ZXJmYWNlPC9oMT4KPGgyIGlkPSJjaGFuZ2Vsb2ciPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjY2hhbmdlbG9nIj4jPC9hPiBDaGFuZ2Vsb2c8L2gyPgo8dWw+CjxsaT4wMS1NYXItMjAyMjogVXBkYXRlIGxvbmctcG9sbGluZyBpbnRlcmZhY2UgKEBjcmVhY2hhZGFpcikuPC9saT4KPGxpPjEwLUZlYi0yMDIyOiBVcGRhdGVzIHRvIHJlZmxlY3QgaW1wbGVtZW50YXRpb24uPC9saT4KPGxpPjI2LUphbi0yMDIyOiBNYXJrZWQgYWNjZXB0ZWQuPC9saT4KPGxpPjIyLUphbi0yMDIyOiBVcGRhdGVkIGFuZCBleHBhbmRlZCAoQGNyZWFjaGFkYWlyKS48L2xpPgo8bGk+MjAtTm92LTIwMjE6IEluaXRpYWwgZHJhZnQgKEBjcmVhY2hhZGFpcikuPC9saT4KPC91bD4KPGhyPgo8aDIgaWQ9InN0YXR1cyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNzdGF0dXMiPiM8L2E+IFN0YXR1czwvaDI+CjxwPkFjY2VwdGVkPC9wPgo8aHI+CjxoMiBpZD0iYmFja2dyb3VuZC1jb250ZXh0Ij48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2JhY2tncm91bmQtY29udGV4dCI+IzwvYT4gQmFja2dyb3VuZCAmYW1wOyBDb250ZXh0PC9oMj4KPHA+Rm9yIGNvbnRleHQsIHNlZSA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vdGVuZGVybWludC90ZW5kZXJtaW50L2Jsb2IvbWFpbi9kb2NzL3JmYy9yZmMtMDA2LWV2ZW50LXN1YnNjcmlwdGlvbi5tZCIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+UkZDIDAwNjogRXZlbnQgU3Vic2NyaXB0aW9uPE91dGJvdW5kTGluay8+PC9hPi48L3A+CjxwPlRoZSA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vdGVuZGVybWludC90ZW5kZXJtaW50L2Jsb2IvbWFpbi9ycGMvb3BlbmFwaS9vcGVuYXBpLnlhbWwiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPlRlbmRlcm1pbnQgUlBDIHNlcnZpY2U8T3V0Ym91bmRMaW5rLz48L2E+IHBlcm1pdHMgY2xpZW50cyB0byBzdWJzY3JpYmUgdG8gdGhlCmV2ZW50IHN0cmVhbSBnZW5lcmF0ZWQgYnkgYSBjb25zZW5zdXMgbm9kZS4gVGhpcyBhbGxvd3MgY2xpZW50cyB0byBvYnNlcnZlIHRoZQpzdGF0ZSBvZiB0aGUgY29uc2Vuc3VzIG5ldHdvcmssIGluY2x1ZGluZyBkZXRhaWxzIG9mIHRoZSBjb25zZW5zdXMgYWxnb3JpdGhtCnN0YXRlIG1hY2hpbmUsIHByb3Bvc2FscywgdHJhbnNhY3Rpb24gZGVsaXZlcnksIGFuZCBibG9jayBjb21wbGV0aW9uLiBUaGUKYXBwbGljYXRpb24gbWF5IGFsc28gYXR0YWNoIGN1c3RvbSBrZXktdmFsdWUgYXR0cmlidXRlcyB0byBldmVudHMgdG8gZXhwb3NlCmFwcGxpY2F0aW9uLXNwZWNpZmljIGRldGFpbHMgdG8gY2xpZW50cy48L3A+CjxwPlRoZSBldmVudCBzdWJzY3JpcHRpb24gQVBJIGluIHRoZSBSUEMgc2VydmljZSBjdXJyZW50bHkgY29tcHJpc2VzIHRocmVlIG1ldGhvZHM6PC9wPgo8b2w+CjxsaT4KPHA+PGNvZGU+c3Vic2NyaWJlPC9jb2RlPjogQSByZXF1ZXN0IHRvIHN1YnNjcmliZSB0byB0aGUgZXZlbnRzIG1hdGNoaW5nIGEgc3BlY2lmaWMKPGEgaHJlZj0iaHR0cHM6Ly9wa2cuZ28uZGV2L2dpdGh1Yi5jb20vdGVuZGVybWludC90ZW5kZXJtaW50QG1hc3Rlci9pbnRlcm5hbC9wdWJzdWIvcXVlcnkvc3ludGF4IiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5xdWVyeSBleHByZXNzaW9uPE91dGJvdW5kTGluay8+PC9hPi4gRXZlbnRzIGNhbiBiZSBmaWx0ZXJlZCBieSB0aGVpciBrZXktdmFsdWUKYXR0cmlidXRlcywgaW5jbHVkaW5nIGN1c3RvbSBhdHRyaWJ1dGVzIHByb3ZpZGVkIGJ5IHRoZSBhcHBsaWNhdGlvbi48L3A+CjwvbGk+CjxsaT4KPHA+PGNvZGU+dW5zdWJzY3JpYmU8L2NvZGU+OiBBIHJlcXVlc3QgdG8gY2FuY2VsIGFuIGV4aXN0aW5nIHN1YnNjcmlwdGlvbiBiYXNlZCBvbiBpdHMKcXVlcnkgZXhwcmVzc2lvbi48L3A+CjwvbGk+CjxsaT4KPHA+PGNvZGU+dW5zdWJzY3JpYmVfYWxsPC9jb2RlPjogQSByZXF1ZXN0IHRvIGNhbmNlbCBhbGwgZXhpc3Rpbmcgc3Vic2NyaXB0aW9ucyBiZWxvbmdpbmcKdG8gdGhlIGNsaWVudC48L3A+CjwvbGk+Cjwvb2w+CjxwPlRoZXJlIGFyZSBzb21lIGltcG9ydGFudCB0ZWNobmljYWwgYW5kIFVYIGlzc3VlcyB3aXRoIHRoZSBjdXJyZW50IFJQQyBldmVudApzdWJzY3JpcHRpb24gQVBJLiBUaGUgcmVzdCBvZiB0aGlzIEFEUiBvdXRsaW5lcyB0aGVzZSBwcm9ibGVtcyBpbiBkZXRhaWwsIGFuZApwcm9wb3NlcyBhIG5ldyBBUEkgc2NoZW1lIGludGVuZGVkIHRvIGFkZHJlc3MgdGhlbS48L3A+CjxoMyBpZD0iaXNzdWUtMS1wZXJzaXN0ZW50LWNvbm5lY3Rpb25zIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2lzc3VlLTEtcGVyc2lzdGVudC1jb25uZWN0aW9ucyI+IzwvYT4gSXNzdWUgMTogUGVyc2lzdGVudCBjb25uZWN0aW9uczwvaDM+CjxwPlRvIHN1YnNjcmliZSB0byBhIG5vZGUncyBldmVudCBzdHJlYW0sIGEgY2xpZW50IG5lZWRzIGEgcGVyc2lzdGVudCBjb25uZWN0aW9uCnRvIHRoZSBub2RlLiAgVW5saWtlIHRoZSBvdGhlciBtZXRob2RzIG9mIHRoZSBzZXJ2aWNlLCBmb3Igd2hpY2ggZWFjaCBjYWxsIGlzCnNlcnZpY2VkIGJ5IGEgc2hvcnQtbGl2ZWQgSFRUUCByb3VuZCB0cmlwLCBzdWJzY3JpcHRpb24gZGVsaXZlcnMgYSBjb250aW51b3VzCnN0cmVhbSBvZiBldmVudHMgdG8gdGhlIGNsaWVudCBieSBoaWphY2tpbmcgdGhlIEhUVFAgY2hhbm5lbCBmb3IgYSB3ZWJzb2NrZXQuClRoZSBzdHJlYW0gKGFuZCBoZW5jZSB0aGUgSFRUUCByZXF1ZXN0KSBwZXJzaXN0cyB1bnRpbCBlaXRoZXIgdGhlIHN1YnNjcmlwdGlvbgppcyBleHBsaWNpdGx5IGNhbmNlbGVkLCBvciB0aGUgY29ubmVjdGlvbiBpcyBjbG9zZWQuPC9wPgo8cD5UaGVyZSBhcmUgc2V2ZXJhbCBwcm9ibGVtcyB3aXRoIHRoaXMgQVBJOjwvcD4KPG9sPgo8bGk+CjxwPjxzdHJvbmc+RXhwZW5zaXZlIHBlci1jb25uZWN0aW9uIHN0YXRlPC9zdHJvbmc+OiBUaGUgc2VydmVyIG11c3QgbWFpbnRhaW4gYSBzdWJzdGFudGlhbAphbW91bnQgb2Ygc3RhdGUgcGVyIHN1YnNjcmliZXIgY2xpZW50OjwvcD4KPHVsPgo8bGk+CjxwPlRoZSBjdXJyZW50IGltcGxlbWVudGF0aW9uIHVzZXMgYSA8YSBocmVmPSJodHRwczovL2RhdGF0cmFja2VyLmlldGYub3JnL2RvYy9odG1sL3JmYzY0NTUiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPldlYlNvY2tldDxPdXRib3VuZExpbmsvPjwvYT4gZm9yIGVhY2ggYWN0aXZlCnN1YnNjcmliZXIuIFRoZSBjb25uZWN0aW9uIG11c3QgYmUgbWFpbnRhaW5lZCBldmVuIGlmIHRoZXJlIGFyZSBubwptYXRjaGluZyBldmVudHMgZm9yIGEgZ2l2ZW4gY2xpZW50LjwvcD4KPHA+VGhlIHNlcnZlciBjYW4gZHJvcCBpZGxlIGNvbm5lY3Rpb25zIHRvIHNhdmUgcmVzb3VyY2VzLCBidXQgZG9pbmcgc28KdGVybWluYXRlcyBhbGwgc3Vic2NyaXB0aW9ucyBvbiB0aG9zZSBjb25uZWN0aW9ucyBhbmQgZm9yY2VzIHRob3NlIGNsaWVudHMKdG8gcmUtY29ubmVjdCwgYWRkaW5nIGFkZGl0aW9uYWwgcmVzb3VyY2UgY2h1cm4gZm9yIHRoZSBzZXJ2ZXIuPC9wPgo8L2xpPgo8bGk+CjxwPkluIGFkZGl0aW9uLCB0aGUgc2VydmVyIG1haW50YWlucyBhIHNlcGFyYXRlIGJ1ZmZlciBvZiB1bmRlbGl2ZXJlZCBldmVudHMKZm9yIGVhY2ggY2xpZW50LiAgVGhpcyBpcyB0byByZWR1Y2UgdGhlIGR1YWwgcmlza3MgdGhhdCBhIGNsaWVudCB3aWxsIG1pc3MKZXZlbnRzLCBhbmQgdGhhdCBhIHNsb3cgY2xpZW50IGNvdWxkICZxdW90O3B1c2ggYmFjayZxdW90OyBvbiB0aGUgcHVibGlzaGVyLAppbXBlZGluZyB0aGUgcHJvZ3Jlc3Mgb2YgY29uc2Vuc3VzLjwvcD4KPHA+QmVjYXVzZSBldmVudCB0cmFmZmljIGlzIHF1aXRlIGJ1cnN0eSwgcXVldWVzIGNhbiBwb3RlbnRpYWxseSB0YWtlIHVwIGEKbG90IG9mIG1lbW9yeS4gTW9yZW92ZXIsIGVhY2ggc3Vic2NyaWJlciBtYXkgaGF2ZSBhIGRpZmZlcmVudCBmaWx0ZXIKcXVlcnksIHNvIHRoZSBzZXJ2ZXIgd2luZHMgdXAgaGF2aW5nIHRvIGR1cGxpY2F0ZSB0aGUgc2FtZSBldmVudHMgYW1vbmcKbXVsdGlwbGUgc3Vic2NyaWJlciBxdWV1ZXMuIE5vdCBvbmx5IGRvZXMgdGhpcyBhZGQgbWVtb3J5IHByZXNzdXJlLCBidXQgaXQKZG9lcyBzbyBtb3N0IGF0IHRoZSB3b3JzdCBwb3NzaWJsZSB0aW1lLCBpLmUuLCB3aGVuIHRoZSBzZXJ2ZXIgaXMgYWxyZWFkeQp1bmRlciBsb2FkIGZyb20gaGlnaCBldmVudCB0cmFmZmljLjwvcD4KPC9saT4KPC91bD4KPC9saT4KPGxpPgo8cD48c3Ryb25nPk9wZXJhdGlvbmFsIGFjY2VzcyBjb250cm9sIGlzIGRpZmZpY3VsdDwvc3Ryb25nPjogVGhlIHNlcnZlcidzIHdlYnNvY2tldAppbnRlcmZhY2UgZXhwb3NlcyA8ZW0+YWxsPC9lbT4gdGhlIFJQQyBzZXJ2aWNlIGVuZHBvaW50cywgbm90IG9ubHkgdGhlIHN1YnNjcmlwdGlvbgptZXRob2RzLiAgVGhpcyBpbmNsdWRlcyBtZXRob2RzIHRoYXQgYWxsb3cgY2FsbGVycyB0byBpbmplY3QgYXJiaXRyYXJ5CnRyYW5zYWN0aW9ucyAoPGNvZGU+YnJvYWRjYXN0X3R4Xyo8L2NvZGU+KSBhbmQgZXZpZGVuY2UgKDxjb2RlPmJyb2FkY2FzdF9ldmlkZW5jZTwvY29kZT4pIGludG8gdGhlCm5ldHdvcmssIHJlbW92ZSB0cmFuc2FjdGlvbnMgKDxjb2RlPnJlbW92ZV90eDwvY29kZT4pLCBhbmQgcmVxdWVzdCBhcmJpdHJhcnkgYW1vdW50cyBvZgpjaGFpbiBzdGF0ZS48L3A+CjxwPkZpbHRlcmluZyByZXF1ZXN0cyB0byB0aGUgR0VUIGVuZHBvaW50IGlzIHN0cmFpZ2h0Zm9yd2FyZDogQSByZXZlcnNlIHByb3h5Cmxpa2UgPGEgaHJlZj0iaHR0cHM6Ly9uZ2lueC5vcmcvZW4vZG9jcy8iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPm5naW54PE91dGJvdW5kTGluay8+PC9hPiBjYW4gZWFzaWx5IGZpbHRlciBtZXRob2RzIGJ5IFVSTCBwYXRoLiBGaWx0ZXJpbmcgUE9TVApyZXF1ZXN0cyB0YWtlcyBhIGJpdCBtb3JlIHdvcmssIGJ1dCBjYW4gYmUgbWFuYWdlZCB3aXRoIGEgZmlsdGVyIHByb2dyYW0KdGhhdCBzcGVha3MgPGEgaHJlZj0iaHR0cDovL3d3dy5taXQuZWR1L355YW5kcm9zL2RvYy9zcGVjcy9mY2dpLXNwZWMuaHRtbCIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+RmFzdENHSTxPdXRib3VuZExpbmsvPjwvYT4gYW5kIHBhcnNlcyBKU09OLVJQQyByZXF1ZXN0IGJvZGllcy48L3A+CjxwPkZpbHRlcmluZyB0aGUgd2Vic29ja2V0IGludGVyZmFjZSByZXF1aXJlcyBhIGRlZGljYXRlZCBwcm94eSBpbXBsZW1lbnRhdGlvbi4KQWx0aG91Z2ggbmdpbnggY2FuIDxhIGhyZWY9Imh0dHBzOi8vbmdpbngub3JnL2VuL2RvY3MvaHR0cC93ZWJzb2NrZXQuaHRtbCIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+cmV2ZXJzZS1wcm94eSB3ZWJzb2NrZXRzPE91dGJvdW5kTGluay8+PC9hPiwgaXQgZG9lcyBub3Qgc3VwcG9ydApmaWx0ZXJpbmcgd2Vic29ja2V0IHRyYWZmaWMgdmlhIEZhc3RDR0kuIFRoZSBvcGVyYXRvciB3b3VsZCBuZWVkIHRvIGVpdGhlcgppbXBsZW1lbnQgYSBjdXN0b20gPGEgaHJlZj0iaHR0cHM6Ly93d3cubmdpbnguY29tL3Jlc291cmNlcy93aWtpL2V4dGVuZGluZy8iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPm5naW54IGV4dGVuc2lvbiBtb2R1bGU8T3V0Ym91bmRMaW5rLz48L2E+IG9yIGJ1aWxkIGFuZCBydW4gYQpzdGFuZGFsb25lIHByb3h5IHRoYXQgaW1wbGVtZW50cyB3ZWJzb2NrZXQgYW5kIGZpbHRlcnMgZWFjaCBzZXNzaW9uLiAgQXBhcnQKZnJvbSB0aGUgd29yaywgdGhpcyBhbHNvIG1ha2VzIHRoZSBzeXN0ZW0gZXZlbiBtb3JlIHJlc291cmNlIGludGVuc2l2ZSwgYXMKd2VsbCBhcyBpbnRyb2R1Y2luZyB5ZXQgYW5vdGhlciBjb25uZWN0aW9uIHRoYXQgY291bGQgcG90ZW50aWFsbHkgdGltZSBvdXQKb3Igc3RhbGwgb24gZnVsbCBidWZmZXJzLjwvcD4KPHA+RXZlbiBmb3IgdGhlIHNpbXBsZSBjYXNlIG9mIHJlc3RyaWN0aW5nIGFjY2VzcyB0byBvbmx5IGV2ZW50IHN1YnNjcmlwdGlvbiwKdGhlcmUgaXMgbm8gZWFzeSBzb2x1dGlvbiBjdXJyZW50bHk6IE9uY2UgYSBjYWxsZXIgaGFzIGFjY2VzcyB0byB0aGUKd2Vic29ja2V0IGVuZHBvaW50LCBpdCBoYXMgY29tcGxldGUgYWNjZXNzIHRvIHRoZSBSUEMgc2VydmljZS48L3A+CjwvbGk+Cjwvb2w+CjxoMyBpZD0iaXNzdWUtMi1pbmNvbnZlbmllbnQtY2xpZW50LWFwaSI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNpc3N1ZS0yLWluY29udmVuaWVudC1jbGllbnQtYXBpIj4jPC9hPiBJc3N1ZSAyOiBJbmNvbnZlbmllbnQgY2xpZW50IEFQSTwvaDM+CjxwPlRoZSBzdWJzY3JpcHRpb24gaW50ZXJmYWNlIGhhcyBzb21lIGluY29udmVuaWVudCBmZWF0dXJlcyBmb3IgdGhlIGNsaWVudCBhcwp3ZWxsIGFzIHRoZSBzZXJ2ZXIuIFRoZXNlIGluY2x1ZGU6PC9wPgo8b2w+CjxsaT4KPHA+PHN0cm9uZz5Ob24tc3RhbmRhcmQgcHJvdG9jb2w6PC9zdHJvbmc+IFRoZSBSUEMgc2VydmljZSBpcyBtb3N0bHkgPGEgaHJlZj0iaHR0cHM6Ly93d3cuanNvbnJwYy5vcmcvc3BlY2lmaWNhdGlvbiIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+SlNPTi1SUEMgMi4wPE91dGJvdW5kTGluay8+PC9hPiwKYnV0IHRoZSBzdWJzY3JpcHRpb24gaW50ZXJmYWNlIGRpdmVyZ2VzIGZyb20gdGhlIHN0YW5kYXJkLjwvcD4KPHA+SW4gYSBzdGFuZGFyZCBKU09OLVJQQyAyLjAgY2FsbCwgdGhlIGNsaWVudCBpbml0aWF0ZXMgYSByZXF1ZXN0IHRvIHRoZQpzZXJ2ZXIgd2l0aCBhIHVuaXF1ZSBJRCwgYW5kIHRoZSBzZXJ2ZXIgY29uY2x1ZGVzIHRoZSBjYWxsIGJ5IHNlbmRpbmcgYQpyZXBseSBmb3IgdGhhdCBJRC4gVGhlIDxjb2RlPnN1YnNjcmliZTwvY29kZT4gaW1wbGVtZW50YXRpb24sIGhvd2V2ZXIsIHNlbmRzIG11bHRpcGxlCnJlc3BvbnNlcyB0byB0aGUgY2xpZW50J3MgcmVxdWVzdDo8L3A+Cjx1bD4KPGxpPgo8cD5UaGUgY2xpZW50IHNlbmRzIDxjb2RlPnN1YnNjcmliZTwvY29kZT4gd2l0aCBzb21lIElEIDxjb2RlPng8L2NvZGU+IGFuZCB0aGUgZGVzaXJlZCBxdWVyeTwvcD4KPC9saT4KPGxpPgo8cD5UaGUgc2VydmVyIHJlc3BvbmRzIHdpdGggSUQgPGNvZGU+eDwvY29kZT4gYW5kIGFuIGVtcHR5IGNvbmZpcm1hdGlvbiByZXNwb25zZS48L3A+CjwvbGk+CjxsaT4KPHA+VGhlIHNlcnZlciB0aGVuIChyZXBlYXRlZGx5KSBzZW5kcyBldmVudCByZXN1bHQgcmVzcG9uc2VzIHdpdGggSUQgPGNvZGU+eDwvY29kZT4sIG9uZQpmb3IgZWFjaCBpdGVtIHdpdGggYSBtYXRjaGluZyBldmVudC48L3A+CjwvbGk+CjwvdWw+CjxwPlN0YW5kYXJkIEpTT04tUlBDIGNsaWVudHMgd2lsbCByZWplY3QgdGhlIHN1YnNlcXVlbnQgcmVwbGllcywgYXMgdGhleQphbm5vdW5jZSBhIHJlcXVlc3QgSUQgKDxjb2RlPng8L2NvZGU+KSB0aGF0IGlzIGFscmVhZHkgY29tcGxldGUuIFRoaXMgbWVhbnMgYSBjYWxsZXIKaGFzIHRvIGltcGxlbWVudCBUZW5kZXJtaW50LXNwZWNpZmljIGhhbmRsaW5nIGZvciB0aGVzZSByZXNwb25zZXMuPC9wPgo8cD5Nb3Jlb3ZlciwgdGhlIHJlc3VsdCBmb3JtYXQgaXMgZGlmZmVyZW50IGJldHdlZW4gdGhlIGluaXRpYWwgY29uZmlybWF0aW9uCmFuZCB0aGUgc3Vic2VxdWVudCByZXNwb25zZXMuICBUaGlzIG1lYW5zIGEgY2FsbGVyIGhhcyB0byBpbXBsZW1lbnQgc3BlY2lhbApsb2dpYyBmb3IgZGVjb2RpbmcgdGhlIGZpcnN0IHJlc3BvbnNlIHZlcnN1cyB0aGUgc3Vic2VxdWVudCBvbmVzLjwvcD4KPC9saT4KPGxpPgo8cD48c3Ryb25nPk5vIHdheSB0byBkZXRlY3QgZGF0YSBsb3NzOjwvc3Ryb25nPiBUaGUgc3Vic2NyaWJlciBjb25uZWN0aW9uIGNhbiBiZSB0ZXJtaW5hdGVkCmZvciBtYW55IHJlYXNvbnMuIEV2ZW4gaWdub3Jpbmcgb3JkaW5hcnkgbmV0d29yayBpc3N1ZXMgKGUuZy4sIHBhY2tldCBsb3NzKTo8L3A+Cjx1bD4KPGxpPgo8cD5UaGUgc2VydmVyIHdpbGwgZHJvcCBtZXNzYWdlcyBhbmQvb3IgY2xvc2UgdGhlIHdlYnNvY2tldCBpZiBpdHMgd3JpdGUKYnVmZmVyIGZpbGxzLCBvciBpZiB0aGUgcXVldWUgb2YgdW5kZWxpdmVyZWQgbWF0Y2hpbmcgZXZlbnRzIGlzIG5vdApkcmFpbmVkIGZhc3QgZW5vdWdoLiBUaGUgY2xpZW50IGhhcyBubyB3YXkgdG8gZGlzY292ZXIgdGhhdCBtZXNzYWdlcyB3ZXJlCmRyb3BwZWQgZXZlbiBpZiB0aGUgY29ubmVjdGlvbiByZW1haW5zIG9wZW4uPC9wPgo8L2xpPgo8bGk+CjxwPkVpdGhlciB0aGUgY2xpZW50IG9yIHRoZSBzZXJ2ZXIgbWF5IGNsb3NlIHRoZSB3ZWJzb2NrZXQgaWYgdGhlIHdlYnNvY2tldApQSU5HIGFuZCBQT05HIGV4Y2hhbmdlcyBhcmUgbm90IGhhbmRsZWQgY29ycmVjdGx5LCBvciBmcmVxdWVudGx5IGVub3VnaC4KRXZlbiBpZiBjb3JyZWN0bHkgaW1wbGVtZW50ZWQsIHRoaXMgbWF5IGZhaWwgaWYgdGhlIHN5c3RlbSBpcyB1bmRlciBoaWdoCmxvYWQgYW5kIGNhbm5vdCBzZXJ2aWNlIHRob3NlIGNvbnRyb2wgbWVzc2FnZXMgaW4gYSB0aW1lbHkgbWFubmVyLjwvcD4KPC9saT4KPC91bD4KPHA+V2hlbiB0aGUgY29ubmVjdGlvbiBpcyB0ZXJtaW5hdGVkLCB0aGUgc2VydmVyIGRyb3BzIGFsbCB0aGUgc3Vic2NyaXB0aW9ucwpmb3IgdGhhdCBjbGllbnQgKGFzIGlmIGl0IGhhZCBjYWxsZWQgPGNvZGU+dW5zdWJzY3JpYmVfYWxsPC9jb2RlPikuIEV2ZW4gaWYgdGhlIGNsaWVudApyZWNvbm5lY3RzLCBhbnkgZXZlbnRzIHRoYXQgd2VyZSBwdWJsaXNoZWQgZHVyaW5nIHRoZSBwZXJpb2QgYmV0d2VlbiB0aGUKZGlzY29ubmVjdCBhbmQgcmUtY29ubmVjdCBhbmQgcmUtc3Vic2NyaXB0aW9uIHdpbGwgYmUgc2lsZW50bHkgbG9zdCwgYW5kIHRoZQpjbGllbnQgaGFzIG5vIHdheSB0byBkaXNjb3ZlciB0aGF0IGl0IG1pc3NlZCBzb21lIHJlbGV2YW50IG1lc3NhZ2VzLjwvcD4KPC9saT4KPGxpPgo8cD48c3Ryb25nPk5vIHdheSB0byByZXBsYXkgb2xkIGV2ZW50czo8L3N0cm9uZz4gRXZlbiBpZiBhIGNsaWVudCBrbmV3IGl0IGhhZCBtaXNzZWQgc29tZQpldmVudHMgKGR1ZSB0byBhIGRpc2Nvbm5lY3Rpb24sIGZvciBleGFtcGxlKSwgdGhlIEFQSSBwcm92aWRlcyBubyB3YXkgZm9yCnRoZSBjbGllbnQgdG8gJnF1b3Q7cGxheSBiYWNrJnF1b3Q7IGV2ZW50cyBpdCBtYXkgaGF2ZSBtaXNzZWQuPC9wPgo8L2xpPgo8bGk+CjxwPjxzdHJvbmc+TGFyZ2UgcmVzcG9uc2Ugc2l6ZXM6PC9zdHJvbmc+IFNvbWUgZXZlbnQgZGF0YSBjYW4gYmUgcXVpdGUgbGFyZ2UsIGFuZCB0aGVyZSBjYW4KYmUgc3Vic3RhbnRpYWwgZHVwbGljYXRpb24gYWNyb3NzIGl0ZW1zLiBUaGUgQVBJIGFsbG93cyB0aGUgY2xpZW50IHRvIHNlbGVjdAo8ZW0+d2hpY2g8L2VtPiBldmVudHMgYXJlIHJlcG9ydGVkLCBidXQgaGFzIG5vIHdheSB0byBjb250cm9sIHdoaWNoIHBhcnRzIG9mIGEKbWF0Y2hpbmcgZXZlbnQgaXQgd2lzaGVzIHRvIHJlY2VpdmUuPC9wPgo8cD5UaGlzIGNhbiBiZSBjb3N0bHkgb24gdGhlIHNlcnZlciAod2hpY2ggaGFzIHRvIG1hcnNoYWwgdGhvc2UgZGF0YSBpbnRvCkpTT04pLCB0aGUgbmV0d29yaywgYW5kIHRoZSBjbGllbnQgKHdoaWNoIGhhcyB0byB1bm1hcnNoYWwgdGhlIHJlc3VsdCBhbmQKdGhlbiBwaWNrIHRocm91Z2ggZm9yIHRoZSBjb21wb25lbnRzIHRoYXQgYXJlIHJlbGV2YW50IHRvIGl0KS48L3A+CjxwPkJlc2lkZXMgYmVpbmcgaW5lZmZpY2llbnQsIHRoaXMgYWxzbyBjb250cmlidXRlcyB0byBzb21lIG9mIHRoZSBwZXJzaXN0ZW50CmNvbm5lY3Rpb24gaXNzdWVzIG1lbnRpb25lZCBhYm92ZSwgZS5nLiwgZmlsbGluZyB1cCB0aGUgd2Vic29ja2V0IHdyaXRlCmJ1ZmZlciBhbmQgZm9yY2luZyB0aGUgc2VydmVyIHRvIHF1ZXVlIHBvdGVudGlhbGx5IHNldmVyYWwgY29waWVzIG9mIGEgbGFyZ2UKdmFsdWUgaW4gbWVtb3J5LjwvcD4KPC9saT4KPGxpPgo8cD48c3Ryb25nPkNsaWVudCBpZGVudGl0eSBpcyB0aWVkIHRvIG5ldHdvcmsgYWRkcmVzczo8L3N0cm9uZz4gVGhlIFRlbmRlcm1pbnQgZXZlbnQgQVBJCmlkZW50aWZpZXMgZWFjaCBzdWJzY3JpYmVyIGJ5IGEgKENsaWVudCBJRCwgUXVlcnkpIHBhaXIuIEluIHRoZSBSUEMgc2VydmljZSwKdGhlIHF1ZXJ5IGlzIHByb3ZpZGVkIGJ5IHRoZSBjbGllbnQsIGJ1dCB0aGUgY2xpZW50IElEIGlzIHNldCB0byB0aGUgVENQCmFkZHJlc3Mgb2YgdGhlIGNsaWVudCAodHlwaWNhbGx5ICZxdW90O2hvc3Q6cG9ydCZxdW90OyBvciAmcXVvdDtpcDpwb3J0JnF1b3Q7KS48L3A+CjxwPlRoaXMgbWVhbnMgdGhhdCBldmVuIGlmIHRoZSBzZXJ2ZXIgZGlkIDxlbT5ub3Q8L2VtPiBkcm9wIHN1YnNjcmlwdGlvbnMgaW1tZWRpYXRlbHkKd2hlbiB0aGUgd2Vic29ja2V0IGNvbm5lY3Rpb24gaXMgY2xvc2VkLCBhIGNsaWVudCBtYXkgbm90IGJlIGFibGUgdG8KcmVhdHRhY2ggdG8gaXRzIGV4aXN0aW5nIHN1YnNjcmlwdGlvbi4gIERpYWxpbmcgYSBuZXcgY29ubmVjdGlvbiBpcyBsaWtlbHkKdG8gcmVzdWx0IGluIGEgZGlmZmVyZW50IHBvcnQgKGFuZCwgZGVwZW5kaW5nIG9uIHRoZWlyIG93biBwcm94eSBzZXR1cCwKcG9zc2libHkgYSBkaWZmZXJlbnQgcHVibGljIElQKS48L3A+CjxwPkluIGlzb2xhdGlvbiwgdGhpcyBwcm9ibGVtIHdvdWxkIGJlIGVhc3kgdG8gd29yayBhcm91bmQgd2l0aCBhIG5ldwpzdWJzY3JpcHRpb24gcGFyYW1ldGVyLCBidXQgaXQgd291bGQgcmVxdWlyZSBzZXZlcmFsIG90aGVyIGNoYW5nZXMgdG8gdGhlCmhhbmRsaW5nIG9mIGV2ZW50IHN1YnNjcmlwdGlvbnMgZm9yIHRoYXQgd29ya2Fyb3VuZCB0byBiZWNvbWUgdXNlZnVsLjwvcD4KPC9saT4KPC9vbD4KPGhyPgo8aDIgaWQ9ImRlY2lzaW9uIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2RlY2lzaW9uIj4jPC9hPiBEZWNpc2lvbjwvaDI+CjxwPlRvIGFkZHJlc3MgdGhlIGRlc2NyaWJlZCBwcm9ibGVtcywgd2Ugd2lsbDo8L3A+CjxvbD4KPGxpPgo8cD5JbnRyb2R1Y2UgYSBuZXcgQVBJIGZvciBldmVudCBzdWJzY3JpcHRpb24gdG8gdGhlIFRlbmRlcm1pbnQgUlBDIHNlcnZpY2UuClRoZSBwcm9wb3NlZCBBUEkgaXMgZGVzY3JpYmVkIGluIDxhIGhyZWY9IiNkZXRhaWxlZC1kZXNpZ24iPkRldGFpbGVkIERlc2lnbjwvYT4gYmVsb3cuPC9wPgo8L2xpPgo8bGk+CjxwPlRoaXMgbmV3IEFQSSB3aWxsIHRhcmdldCB0aGUgVGVuZGVybWludCB2MC4zNiByZWxlYXNlLCBkdXJpbmcgd2hpY2ggdGhlCmN1cnJlbnQgKCZxdW90O3N0cmVhbWluZyZxdW90OykgQVBJIHdpbGwgcmVtYWluIGF2YWlsYWJsZSBhcy1pcywgYnV0IGRlcHJlY2F0ZWQuPC9wPgo8L2xpPgo8bGk+CjxwPlRoZSBzdHJlYW1pbmcgQVBJIHdpbGwgYmUgZW50aXJlbHkgcmVtb3ZlZCBpbiByZWxlYXNlIHYwLjM3LCB3aGljaCB3aWxsCnJlcXVpcmUgYWxsIHVzZXJzIG9mIGV2ZW50IHN1YnNjcmlwdGlvbiB0byBzd2l0Y2ggdG8gdGhlIG5ldyBBUEkuPC9wPgo8L2xpPgo8L29sPgo8YmxvY2txdW90ZT4KPHA+PHN0cm9uZz5Qb2ludCBmb3IgZGlzY3Vzc2lvbjo8L3N0cm9uZz4gR2l2ZW4gdGhhdCBBQkNJKysgYW5kIFBCVFMgYXJlIHRoZSBtYWluIHByaW9yaXRpZXMKZm9yIHYwLjM2LCBpdCB3b3VsZCBiZSBmaW5lIHRvIHNsaXAgdGhlIGZpcnN0IHBoYXNlIG9mIHRoaXMgd29yayB0byB2MC4zNy4KVW5sZXNzIHRoZXJlIGlzIGEgdGltZSBwcm9ibGVtLCBob3dldmVyLCB0aGUgcHJvcG9zZWQgZGVzaWduIGRvZXMgbm90IGRpc3J1cHQKdGhlIHdvcmsgb24gQUJDSSsrIG9yIFBCVFMsIGFuZCB3aWxsIG5vdCBpbmNyZWFzZSB0aGUgc2NvcGUgb2YgYnJlYWtpbmcKY2hhbmdlcy4gVGhlcmVmb3JlIHRoZSBwbGFuIGlzIHRvIGJlZ2luIGluIHYwLjM2IGFuZCBzbGlwIG9ubHkgaWYgbmVjZXNzYXJ5LjwvcD4KPC9ibG9ja3F1b3RlPgo8aHI+CjxoMiBpZD0iZGV0YWlsZWQtZGVzaWduIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2RldGFpbGVkLWRlc2lnbiI+IzwvYT4gRGV0YWlsZWQgRGVzaWduPC9oMj4KPGgzIGlkPSJkZXNpZ24tZ29hbHMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjZGVzaWduLWdvYWxzIj4jPC9hPiBEZXNpZ24gR29hbHM8L2gzPgo8cD5TcGVjaWZpYyBnb2FscyBvZiB0aGlzIGRlc2lnbiBpbmNsdWRlOjwvcD4KPG9sPgo8bGk+CjxwPlJlbW92ZSB0aGUgbmVlZCBmb3IgYSBwZXJzaXN0ZW50IGNvbm5lY3Rpb24gdG8gZWFjaCBzdWJzY3JpcHRpb24gY2xpZW50LgpTdWJzY3JpYmVycyBzaG91bGQgdXNlIHRoZSBzYW1lIEhUVFAgcmVxdWVzdCBmbG93IGZvciBldmVudCBzdWJzY3JpcHRpb24KcmVxdWVzdHMgYXMgZm9yIG90aGVyIFJQQyBjYWxscy48L3A+CjwvbGk+CjxsaT4KPHA+VGhlIHNlcnZlciByZXRhaW5zIG1pbmltYWwgc3RhdGUgKHBvc3NpYmx5IG5vbmUpIHBlci1zdWJzY3JpYmVyLiAgSW4KcGFydGljdWxhcjo8L3A+Cjx1bD4KPGxpPlRoZSBzZXJ2ZXIgZG9lcyBub3QgYnVmZmVyIHVuY29uc3VtZWQgd3JpdGVzIG5vciBxdWV1ZSB1bmRlbGl2ZXJlZCBldmVudHMKb24gYSBwZXItY2xpZW50IGJhc2lzLjwvbGk+CjxsaT5BIGNsaWVudCB0aGF0IHN0YWxscyBvciBnb2VzIGlkbGUgZG9lcyBub3QgY29zdCB0aGUgc2VydmVyIGFueSByZXNvdXJjZXMuPC9saT4KPGxpPkFueSBldmVudCBkYXRhIHRoYXQgaXMgYnVmZmVyZWQgb3Igc3RvcmVkIGlzIHNoYXJlZCBhbW9uZyA8ZW0+YWxsPC9lbT4Kc3Vic2NyaWJlcnMsIGFuZCBpcyBub3QgZHVwbGljYXRlZCBwZXIgY2xpZW50LjwvbGk+CjwvdWw+CjwvbGk+CjxsaT4KPHA+U2xvdyBjbGllbnRzIGhhdmUgbm8gaW1wYWN0IChvciBtaW5pbWFsIGltcGFjdCkgb24gdGhlIHJhdGUgb2YgcHJvZ3Jlc3Mgb2YKdGhlIGNvbnNlbnN1cyBhbGdvcml0aG0sIGJleW9uZCB0aGUgYW1iaWVudCBvdmVyaGVhZCBvZiBzZXJ2aWNpbmcgaW5kaXZpZHVhbApSUEMgcmVxdWVzdHMuPC9wPgo8L2xpPgo8bGk+CjxwPkNsaWVudHMgY2FuIHRlbGwgd2hlbiB0aGV5IGhhdmUgbWlzc2VkIGV2ZW50cyBtYXRjaGluZyB0aGVpciBzdWJzY3JpcHRpb24sCndpdGhpbiBzb21lIHJlYXNvbmFibGUgKGNvbmZpZ3VyYWJsZSkgd2luZG93IG9mIHRpbWUsIGFuZCBjYW4gJnF1b3Q7cmVwbGF5JnF1b3Q7CmV2ZW50cyB3aXRoaW4gdGhhdCB3aW5kb3cgdG8gY2F0Y2ggdXAuPC9wPgo8L2xpPgo8bGk+CjxwPk5pY2UgdG8gaGF2ZTogSXQgc2hvdWxkIGJlIGVhc3kgdG8gdXNlIHRoZSBldmVudCBzdWJzY3JpcHRpb24gQVBJIGZyb20KZXhpc3Rpbmcgc3RhbmRhcmQgdG9vbHMgYW5kIGxpYnJhcmllcywgaW5jbHVkaW5nIGNvbW1hbmQtbGluZSB1c2UgZm9yCnRlc3RpbmcgYW5kIGV4cGVyaW1lbnRhdGlvbi48L3A+CjwvbGk+Cjwvb2w+CjxoMyBpZD0iZGVmaW5pdGlvbnMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjZGVmaW5pdGlvbnMiPiM8L2E+IERlZmluaXRpb25zPC9oMz4KPHVsPgo8bGk+CjxwPlRoZSA8c3Ryb25nPmV2ZW50IHN0cmVhbTwvc3Ryb25nPiBvZiBhIG5vZGUgaXMgYSBzaW5nbGUsIHRpbWUtb3JkZXJlZCwgaGV0ZXJvZ2VuZW91cwpzdHJlYW0gb2YgZXZlbnQgaXRlbXMuPC9wPgo8L2xpPgo8bGk+CjxwPkVhY2ggPHN0cm9uZz5ldmVudCBpdGVtPC9zdHJvbmc+IGNvbXByaXNlcyBhbiA8c3Ryb25nPmV2ZW50IGRhdHVtPC9zdHJvbmc+IChmb3IgZXhhbXBsZSwgYmxvY2sgaGVhZGVyCm1ldGFkYXRhIGZvciBhIG5ldy1ibG9jayBldmVudCksIGFuZCB6ZXJvIG9yIG1vcmUgb3B0aW9uYWwgPHN0cm9uZz5ldmVudHM8L3N0cm9uZz4uPC9wPgo8L2xpPgo8bGk+CjxwPkFuIDxzdHJvbmc+ZXZlbnQ8L3N0cm9uZz4gbWVhbnMgdGhlIDxhIGhyZWY9Imh0dHBzOi8vcGtnLmdvLmRldi9naXRodWIuY29tL3RlbmRlcm1pbnQvdGVuZGVybWludC9hYmNpL3R5cGVzI0V2ZW50IiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5BQkNJIDxjb2RlPkV2ZW50PC9jb2RlPiBkYXRhIHR5cGU8T3V0Ym91bmRMaW5rLz48L2E+LCB3aGljaCBjb21wcmlzZXMKYSBzdHJpbmcgdHlwZSBhbmQgemVybyBvciBtb3JlIHN0cmluZyBrZXktdmFsdWUgPHN0cm9uZz5ldmVudCBhdHRyaWJ1dGVzPC9zdHJvbmc+LjwvcD4KPHA+VGhlIHVzZSBvZiB0aGUgbmV3IHRlcm1zICZxdW90O2V2ZW50IGl0ZW0mcXVvdDsgYW5kICZxdW90O2V2ZW50IGRhdHVtJnF1b3Q7IGlzIHRvIGF2ZXJ0IGNvbmZ1c2lvbgpiZXR3ZWVuIHRoZSB2YWx1ZXMgdGhhdCBhcmUgcHVibGlzaGVkIHRvIHRoZSBldmVudCBidXMgKHdoYXQgd2UgY2FsbCBoZXJlCiZxdW90O2V2ZW50IGl0ZW1zJnF1b3Q7KSBhbmQgdGhlIEFCQ0kgPGNvZGU+RXZlbnQ8L2NvZGU+IGRhdGEgdHlwZS48L3A+CjwvbGk+CjxsaT4KPHA+VGhlIG5vZGUgYXNzaWducyBlYWNoIGV2ZW50IGl0ZW0gYSB1bmlxdWUgaWRlbnRpZmllciBzdHJpbmcgY2FsbGVkIGEKPHN0cm9uZz5jdXJzb3I8L3N0cm9uZz4uICBBIGN1cnNvciBtdXN0IGJlIHVuaXF1ZSBhbW9uZyBhbGwgZXZlbnRzIHB1Ymxpc2hlZCBieSBhIHNpbmdsZQpub2RlLCBidXQgaXQgaXMgbm90IHJlcXVpcmVkIHRvIGJlIHVuaXF1ZSBnbG9iYWxseSBhY3Jvc3Mgbm9kZXMuPC9wPgo8cD5DdXJzb3JzIGFyZSB0aW1lLW9yZGVyZWQgc28gdGhhdCBnaXZlbiBldmVudCBpdGVtcyBBIGFuZCBCLCBpZiBBIHdhcwpwdWJsaXNoZWQgYmVmb3JlIEIsIHRoZW4gY3Vyc29yKEEpICZsdDsgY3Vyc29yKEIpIGluIGxleGljb2dyYXBoaWMgb3JkZXIuPC9wPgo8cD5BIG1pbmltdW0gdmlhYmxlIGN1cnNvciBpbXBsZW1lbnRhdGlvbiBpcyBhIHR1cGxlIGNvbnNpc3Rpbmcgb2YgYSB0aW1lc3RhbXAKYW5kIGEgc2VxdWVuY2UgbnVtYmVyIChlLmcuLCA8Y29kZT4xNkNDQzc5OEZCNUY0NjcwLTAxMjM8L2NvZGU+KS4gSG93ZXZlciwgaXQgbWF5IGFsc28KYmUgdXNlZnVsIHRvIGFwcGVuZCBiYXNpYyB0eXBlIGluZm9ybWF0aW9uIHRvIGEgY3Vyc29yLCB0byBhbGxvdyBlZmZpY2llbnQKZmlsdGVyaW5nIChlLmcuLCA8Y29kZT4xNkNDQzg3RTkxODY5MDUwLTAwOTE6QmVnaW5CbG9jazwvY29kZT4pLjwvcD4KPHA+VGhlIGluaXRpYWwgaW1wbGVtZW50YXRpb24gd2lsbCB1c2UgdGhlIG1pbmltdW0gdmlhYmxlIGZvcm1hdC48L3A+CjwvbGk+CjwvdWw+CjxoMyBpZD0iZGlzY3Vzc2lvbiI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNkaXNjdXNzaW9uIj4jPC9hPiBEaXNjdXNzaW9uPC9oMz4KPHA+VGhlIG5vZGUgbWFpbnRhaW5zIGFuIDxzdHJvbmc+ZXZlbnQgbG9nPC9zdHJvbmc+LCBhIHNoYXJlZCBvcmRlcmVkIHJlY29yZCBvZiB0aGUgZXZlbnRzCnB1Ymxpc2hlZCB0byBpdHMgZXZlbnQgYnVzIHdpdGhpbiBhbiBvcGVyYXRvci1jb25maWd1cmFibGUgdGltZSB3aW5kb3cuICBUaGUKaW5pdGlhbCBpbXBsZW1lbnRhdGlvbiB3aWxsIHN0b3JlIHRoZSBldmVudCBsb2cgaW4tbWVtb3J5LCBhbmQgdGhlIG9wZXJhdG9yCndpbGwgYmUgZ2l2ZW4gdHdvIHBlci1ub2RlIGNvbmZpZ3VyYXRpb24gc2V0dGluZ3MuICBOb3RlLCB0aGVzZSBuYW1lcyBhcmUKcHJvdmlzaW9uYWw6PC9wPgo8dWw+CjxsaT4KPHA+PGNvZGU+W3JwY10gZXZlbnQtbG9nLXdpbmRvdy1zaXplPC9jb2RlPjogQSBkdXJhdGlvbiBiZWZvcmUgdGhlIGxhdGVzdCBwdWJsaXNoZWQgZXZlbnQsCmR1cmluZyB3aGljaCB0aGUgbm9kZSB3aWxsIHJldGFpbiBldmVudCBpdGVtcyBwdWJsaXNoZWQuIFNldHRpbmcgdGhpcyB2YWx1ZQp0byB6ZXJvIGRpc2FibGVzIGV2ZW50IHN1YnNjcmlwdGlvbi48L3A+CjwvbGk+CjxsaT4KPHA+PGNvZGU+W3JwY10gZXZlbnQtbG9nLW1heC1pdGVtczwvY29kZT46IEEgbWF4aW11bSBudW1iZXIgb2YgZXZlbnQgaXRlbXMgdGhhdCB0aGUgbm9kZQp3aWxsIHJldGFpbiB3aXRoaW4gdGhlIHRpbWUgd2luZG93LiBJZiB0aGUgbnVtYmVyIG9mIGl0ZW1zIGV4Y2VlZHMgdGhpcwp2YWx1ZSwgdGhlIG5vZGUgZGlzY2FyZGVzIHRoZSBvbGRlc3QgaXRlbXMgaW4gdGhlIHdpbmRvdy4gU2V0dGluZyB0aGlzIHZhbHVlCnRvIHplcm8gbWVhbnMgdGhhdCBubyBsaW1pdCBpcyBpbXBvc2VkIG9uIHRoZSBudW1iZXIgb2YgaXRlbXMuPC9wPgo8L2xpPgo8L3VsPgo8cD5UaGUgbm9kZSB3aWxsIHJldGFpbiBhbGwgZXZlbnRzIHdpdGhpbiB0aGUgdGltZSB3aW5kb3csIHByb3ZpZGVkIHRoZXkgZG8gbm90CmV4Y2VlZCB0aGUgbWF4aW11bSBudW1iZXIuICBUaGVzZSBjb25maWcgcGFyYW1ldGVycyBhbGxvdyB0aGUgb3BlcmF0b3IgdG8KbG9vc2VseSByZWd1bGF0ZSBob3cgbXVjaCBtZW1vcnkgYW5kIHN0b3JhZ2UgdGhlIG5vZGUgYWxsb2NhdGVzIHRvIHRoZSBldmVudApsb2cuIFRoZSBjbGllbnQgY2FuIHVzZSB0aGUgc2VydmVyIHJlcGx5IHRvIHRlbGwgd2hldGhlciB0aGUgZXZlbnRzIGl0IHdhbnRzCmFyZSBzdGlsbCBhdmFpbGFibGUgZnJvbSB0aGUgZXZlbnQgbG9nLjwvcD4KPHA+VGhlIGV2ZW50IGxvZyBpcyBzaGFyZWQgYW1vbmcgYWxsIHN1YnNjcmliZXJzIHRvIHRoZSBub2RlLjwvcD4KPGJsb2NrcXVvdGU+CjxwPjxzdHJvbmc+RGlzY3Vzc2lvbiBwb2ludDo8L3N0cm9uZz4gU2hvdWxkIGV2ZW50cyBwZXJzaXN0IGFjcm9zcyBub2RlIHJlc3RhcnRzPzwvcD4KPHA+VGhlIGN1cnJlbnQgZXZlbnQgQVBJIGRvZXMgbm90IHBlcnNpc3QgZXZlbnRzIGFjcm9zcyByZXN0YXJ0cywgc28gdGhpcyBuZXcKZGVzaWduIGRvZXMgbm90IGVpdGhlci4gTm90ZSwgaG93ZXZlciwgdGhhdCB3ZSBtYXkgJnF1b3Q7c3BpbGwmcXVvdDsgb2xkZXIgZXZlbnQgZGF0YQp0byBkaXNrIGFzIGEgd2F5IG9mIGNvbnRyb2xsaW5nIG1lbW9yeSB1c2UuIFN1Y2ggdXNhZ2UgaXMgZXBoZW1lcmFsLCBob3dldmVyLAphbmQgZG9lcyBub3QgbmVlZCB0byBiZSB0cmFja2VkIGFzIG5vZGUgZGF0YSAoZS5nLiwgaXQgY291bGQgYmUgdGVtcCBmaWxlcykuPC9wPgo8L2Jsb2NrcXVvdGU+CjxoMyBpZD0icXVlcnktYXBpIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3F1ZXJ5LWFwaSI+IzwvYT4gUXVlcnkgQVBJPC9oMz4KPHA+VG8gcmV0cmlldmUgZXZlbnQgZGF0YSwgdGhlIGNsaWVudCB3aWxsIGNhbGwgdGhlIChuZXcpIFJQQyBtZXRob2QgPGNvZGU+ZXZlbnRzPC9jb2RlPi4KVGhlIHBhcmFtZXRlcnMgb2YgdGhpcyBtZXRob2Qgd2lsbCBjb3JyZXNwb25kIHRvIHRoZSBmb2xsb3dpbmcgR28gdHlwZXM6PC9wPgoKICAgIDx0bS1jb2RlLWJsb2NrIGNsYXNzPSJjb2RlYmxvY2siIGxhbmd1YWdlPSJnbyIgYmFzZTY0PSJkSGx3WlNCRmRtVnVkRkJoY21GdGN5QnpkSEoxWTNRZ2V3b2dJQ0FnTHk4Z1QzQjBhVzl1WVd3Z1ptbHNkR1Z5SUhOd1pXTXVJRWxtSUc1cGJDQnZjaUJsYlhCMGVTd2dZV3hzSUdsMFpXMXpJR0Z5WlNCbGJHbG5hV0pzWlM0S0lDQWdJRVpwYkhSbGNpQXFSbWxzZEdWeUlHQnFjMjl1T2laeGRXOTBPMlpwYkhSbGNpWnhkVzkwTzJBS0NpQWdJQ0F2THlCVWFHVWdiV0Y0YVcxMWJTQnVkVzFpWlhJZ2IyWWdaV3hwWjJsaWJHVWdjbVZ6ZFd4MGN5QjBieUJ5WlhSMWNtNHVDaUFnSUNBdkx5QkpaaUI2WlhKdklHOXlJRzVsWjJGMGFYWmxMQ0IwYUdVZ2MyVnlkbVZ5SUhkcGJHd2djbVZ3YjNKMElHRWdaR1ZtWVhWc2RDQnVkVzFpWlhJdUNpQWdJQ0JOWVhoU1pYTjFiSFJ6SUdsdWRDQmdhbk52YmpvbWNYVnZkRHR0WVhoZmNtVnpkV3gwY3laeGRXOTBPMkFLQ2lBZ0lDQXZMeUJTWlhSMWNtNGdiMjVzZVNCcGRHVnRjeUJoWm5SbGNpQjBhR2x6SUdOMWNuTnZjaTRnU1dZZ1pXMXdkSGtzSUhSb1pTQnNhVzFwZENCcGN5QnFkWE4wQ2lBZ0lDQXZMeUJpWldadmNtVWdkR2hsSUhSb1pTQmlaV2RwYm01cGJtY2diMllnZEdobElHVjJaVzUwSUd4dlp5NEtJQ0FnSUVGbWRHVnlJSE4wY21sdVp5Qmdhbk52YmpvbWNYVnZkRHRoWm5SbGNpWnhkVzkwTzJBS0NpQWdJQ0F2THlCU1pYUjFjbTRnYjI1c2VTQnBkR1Z0Y3lCaVpXWnZjbVVnZEdocGN5QmpkWEp6YjNJdUlDQkpaaUJsYlhCMGVTd2dkR2hsSUd4cGJXbDBJR2x6SUdwMWMzUUtJQ0FnSUM4dklHRm1kR1Z5SUhSb1pTQm9aV0ZrSUc5bUlIUm9aU0JsZG1WdWRDQnNiMmN1Q2lBZ0lDQkNaV1p2Y21VZ2MzUnlhVzVuSUdCcWMyOXVPaVp4ZFc5ME8ySmxabTl5WlNaeGRXOTBPMkFLQ2lBZ0lDQXZMeUJYWVdsMElHWnZjaUIxY0NCMGJ5QjBhR2x6SUd4dmJtY2dabTl5SUdWMlpXNTBjeUIwYnlCaVpTQmhkbUZwYkdGaWJHVXVDaUFnSUNCWFlXbDBWR2x0WlNCMGFXMWxMa1IxY21GMGFXOXVJR0JxYzI5dU9pWnhkVzkwTzNkaGFYUmZkR2x0WlNaeGRXOTBPMkFLZlFvS2RIbHdaU0JHYVd4MFpYSWdjM1J5ZFdOMElIc0tJQ0FnSUZGMVpYSjVJSE4wY21sdVp5Qmdhbk52YmpvbWNYVnZkRHR4ZFdWeWVTWnhkVzkwTzJBS2ZRbz0iPjwvdG0tY29kZS1ibG9jaz4KICAgIDxibG9ja3F1b3RlPgo8cD48c3Ryb25nPkRpc2N1c3Npb24gcG9pbnQ6PC9zdHJvbmc+IFRoZSBpbml0aWFsIGltcGxlbWVudGF0aW9uIHdpbGwgbm90IGNhY2hlIGZpbHRlcgpxdWVyaWVzIGZvciB0aGUgY2xpZW50LiBJZiB0aGlzIHR1cm5zIG91dCB0byBiZSBhIHBlcmZvcm1hbmNlIGlzc3VlIGluCnByb2R1Y3Rpb24sIHRoZSBzZXJ2aWNlIGNhbiBrZWVwIGEgc21hbGwgc2hhcmVkIGNhY2hlIG9mIGNvbXBpbGVkIHF1ZXJpZXMuCkdpdmVuIHRoZSBpbXByb3ZlbWVudHMgZnJvbSAjNzMxOSBldCBzZXEuLCB0aGlzIHNob3VsZCBub3QgYmUgbmVjZXNzYXJ5LjwvcD4KPC9ibG9ja3F1b3RlPgo8YmxvY2txdW90ZT4KPHA+PHN0cm9uZz5EaXNjdXNzaW9uIHBvaW50Ojwvc3Ryb25nPiBGb3IgdGhlIGluaXRpYWwgaW1wbGVtZW50YXRpb24sIHRoZSBuZXcgQVBJIHdpbGwgdXNlCnRoZSBleGlzdGluZyBxdWVyeSBsYW5ndWFnZSBhcy1pcy4gRnV0dXJlIHdvcmsgbWF5IGV4dGVuZCB0aGUgRmlsdGVyIG1lc3NhZ2UKd2l0aCBhIG1vcmUgc3RydWN0dXJlZCBhbmQvb3IgZXhwcmVzc2l2ZSBxdWVyeSBzdXJmYWNlLCBidXQgdGhhdCBpcyBiZXlvbmQKdGhlIHNjb3BlIG9mIHRoaXMgZGVzaWduLjwvcD4KPC9ibG9ja3F1b3RlPgo8cD5UaGUgc2VtYW50aWNzIG9mIHRoZSByZXF1ZXN0IGFyZSBhcyBmb2xsb3dzOiBBbiBpdGVtIGluIHRoZSBldmVudCBsb2cgaXMKPHN0cm9uZz5lbGlnaWJsZTwvc3Ryb25nPiBmb3IgYSBxdWVyeSBpZjo8L3A+Cjx1bD4KPGxpPkl0IGlzIG5ld2VyIHRoYW4gdGhlIDxjb2RlPmFmdGVyPC9jb2RlPiBjdXJzb3IgKGlmIHNldCkuPC9saT4KPGxpPkl0IGlzIG9sZGVyIHRoYW4gdGhlIDxjb2RlPmJlZm9yZTwvY29kZT4gY3Vyc29yIChpZiBzZXQpLjwvbGk+CjxsaT5JdCBtYXRjaGVzIHRoZSBmaWx0ZXIgKGlmIHNldCkuPC9saT4KPC91bD4KPHA+QW1vbmcgdGhlIGVsaWdpYmxlIGl0ZW1zIGluIHRoZSBsb2csIHRoZSBzZXJ2ZXIgcmV0dXJucyB1cCB0byA8Y29kZT5tYXhfcmVzdWx0czwvY29kZT4gb2YKdGhlIG5ld2VzdCBpdGVtcywgaW4gcmV2ZXJzZSBvcmRlciBvZiBjdXJzb3IuIElmIDxjb2RlPm1heF9yZXN1bHRzPC9jb2RlPiBpcyB1bnNldCB0aGUKc2VydmVyIGNob29zZXMgYSBudW1iZXIgdG8gcmV0dXJuLCBhbmQgd2lsbCBjYXAgPGNvZGU+bWF4X3Jlc3VsdHM8L2NvZGU+IGF0IGEgc2Vuc2libGUKbGltaXQuPC9wPgo8cD5UaGUgPGNvZGU+d2FpdF90aW1lPC9jb2RlPiBwYXJhbWV0ZXIgaXMgdXNlZCB0byBlZmZlY3QgcG9sbGluZy4gSWYgPGNvZGU+YmVmb3JlPC9jb2RlPiBpcyBlbXB0eSBhbmQKbm8gaXRlbXMgYXJlIGF2YWlsYWJsZSwgdGhlIHNlcnZlciB3aWxsIHdhaXQgZm9yIHVwIHRvIDxjb2RlPndhaXRfdGltZTwvY29kZT4gZm9yIG1hdGNoaW5nCml0ZW1zIHRvIGFycml2ZSBhdCB0aGUgaGVhZCBvZiB0aGUgbG9nLiBJZiA8Y29kZT53YWl0X3RpbWU8L2NvZGU+IGlzIHplcm8gb3IgbmVnYXRpdmUsIHRoZQpzZXJ2ZXIgd2lsbCB3YWl0IGZvciBhIGRlZmF1bHQgKHBvc2l0aXZlKSBpbnRlcnZhbC48L3A+CjxwPklmIDxjb2RlPmJlZm9yZTwvY29kZT4gbm9uLWVtcHR5LCA8Y29kZT53YWl0X3RpbWU8L2NvZGU+IGlzIGlnbm9yZWQ6IG5ldyByZXN1bHRzIGFyZSBvbmx5IGFkZGVkIHRvCnRoZSBoZWFkIG9mIHRoZSBsb2csIHNvIHRoZXJlIGlzIG5vIG5lZWQgdG8gd2FpdC4gIFRoaXMgYWxsb3dzIHRoZSBjbGllbnQgdG8KcG9sbCBmb3IgbmV3IGRhdGEsIGFuZCAmcXVvdDtwYWdlJnF1b3Q7IGJhY2t3YXJkIHRocm91Z2ggbWF0Y2hpbmcgZXZlbnQgaXRlbXMuIFRoaXMgaXMKZGlzY3Vzc2VkIGluIG1vcmUgZGV0YWlsIGJlbG93LjwvcD4KPHA+VGhlIHNlcnZlciB3aWxsIHNldCBhIHNlbnNpYmxlIGNhcCBvbiB0aGUgbWF4aW11bSA8Y29kZT53YWl0X3RpbWU8L2NvZGU+LCBvdmVycmlkaW5nCmNsaWVudC1yZXF1ZXN0ZWQgaW50ZXJ2YWxzIGxvbmdlciB0aGFuIHRoYXQuPC9wPgo8cD5BIHN1Y2Nlc3NmdWwgcmVwbHkgZnJvbSB0aGUgPGNvZGU+ZXZlbnRzPC9jb2RlPiByZXF1ZXN0IGNvcnJlc3BvbmRzIHRvIHRoZSBmb2xsb3dpbmcgR28KdHlwZXM6PC9wPgoKICAgIDx0bS1jb2RlLWJsb2NrIGNsYXNzPSJjb2RlYmxvY2siIGxhbmd1YWdlPSJnbyIgYmFzZTY0PSJkSGx3WlNCRmRtVnVkRkpsY0d4NUlITjBjblZqZENCN0NpQWdJQ0F2THlCVWFHVWdhWFJsYlhNZ2JXRjBZMmhwYm1jZ2RHaGxJSEpsY1hWbGMzUWdjR0Z5WVcxbGRHVnljeXdnWm5KdmJTQnVaWGRsYzNRS0lDQWdJQzh2SUhSdklHOXNaR1Z6ZEN3Z2FXWWdZVzU1SUhkbGNtVWdZWFpoYVd4aFlteGxJSGRwZEdocGJpQjBhR1VnZEdsdFpXOTFkQzRLSUNBZ0lFbDBaVzF6SUZ0ZEtrVjJaVzUwU1hSbGJTQmdhbk52YmpvbWNYVnZkRHRwZEdWdGN5WnhkVzkwTzJBS0NpQWdJQ0F2THlCVWFHbHpJR2x6SUhSeWRXVWdhV1lnZEdobGNtVWdhWE1nWVhRZ2JHVmhjM1FnYjI1bElHOXNaR1Z5SUcxaGRHTm9hVzVuSUdsMFpXMEtJQ0FnSUM4dklHRjJZV2xzWVdKc1pTQnBiaUIwYUdVZ2JHOW5JSFJvWVhRZ2QyRnpJRzV2ZENCeVpYUjFjbTVsWkM0S0lDQWdJRTF2Y21VZ1ltOXZiQ0JnYW5OdmJqb21jWFZ2ZER0dGIzSmxKbkYxYjNRN1lBb0tJQ0FnSUM4dklGUm9aU0JqZFhKemIzSWdiMllnZEdobElHOXNaR1Z6ZENCcGRHVnRJR2x1SUhSb1pTQnNiMmNnWVhRZ2RHaGxJSFJwYldVZ2IyWWdkR2hwY3lCeVpYQnNlU3dLSUNBZ0lDOHZJRzl5SUNaeGRXOTBPeVp4ZFc5ME95QnBaaUIwYUdVZ2JHOW5JR2x6SUdWdGNIUjVMZ29nSUNBZ1QyeGtaWE4wSUhOMGNtbHVaeUJnYW5OdmJqb21jWFZ2ZER0dmJHUmxjM1FtY1hWdmREdGdDZ29nSUNBZ0x5OGdWR2hsSUdOMWNuTnZjaUJ2WmlCMGFHVWdibVYzWlhOMElHbDBaVzBnYVc0Z2RHaGxJR3h2WnlCaGRDQjBhR1VnZEdsdFpTQnZaaUIwYUdseklISmxjR3g1TEFvZ0lDQWdMeThnYjNJZ0puRjFiM1E3Sm5GMWIzUTdJR2xtSUhSb1pTQnNiMmNnYVhNZ1pXMXdkSGt1Q2lBZ0lDQk9aWGRsYzNRZ2MzUnlhVzVuSUdCcWMyOXVPaVp4ZFc5ME8yNWxkMlZ6ZENaeGRXOTBPMkFLZlFvS2RIbHdaU0JGZG1WdWRFbDBaVzBnYzNSeWRXTjBJSHNLSUNBZ0lDOHZJRlJvWlNCamRYSnpiM0lnYjJZZ2RHaHBjeUJwZEdWdExnb2dJQ0FnUTNWeWMyOXlJSE4wY21sdVp5Qmdhbk52YmpvbWNYVnZkRHRqZFhKemIzSW1jWFZ2ZER0Z0Nnb2dJQ0FnTHk4Z1ZHaGxJR1Z1WTI5a1pXUWdaWFpsYm5RZ1pHRjBZU0JtYjNJZ2RHaHBjeUJwZEdWdExnb2dJQ0FnTHk4Z1ZHaGxJSFI1Y0dVZ2FXUmxiblJwWm1sbGN5QjBhR1VnYzNSeWRXTjBkWEpsSUc5bUlIUm9aU0IyWVd4MVpTNEtJQ0FnSUVSaGRHRWdjM1J5ZFdOMElIc0tJQ0FnSUNBZ0lDQlVlWEJsSUNCemRISnBibWNnSUNBZ0lDQWdJQ0FnWUdwemIyNDZKbkYxYjNRN2RIbHdaU1p4ZFc5ME8yQUtJQ0FnSUNBZ0lDQldZV3gxWlNCcWMyOXVMbEpoZDAxbGMzTmhaMlVnWUdwemIyNDZKbkYxYjNRN2RtRnNkV1VtY1hWdmREdGdDaUFnSUNCOUlHQnFjMjl1T2laeGRXOTBPMlJoZEdFbWNYVnZkRHRnQ24wSyI+PC90bS1jb2RlLWJsb2NrPgogICAgPHA+VGhlIDxjb2RlPm9sZGVzdDwvY29kZT4gYW5kIDxjb2RlPm5ld2VzdDwvY29kZT4gZmllbGRzIG9mIHRoZSByZXBseSByZXBvcnQgdGhlIGN1cnNvcnMgb2YgdGhlIG9sZGVzdAphbmQgbmV3ZXN0IGl0ZW1zIChvZiBhbnkga2luZCkgcmVjb3JkZWQgaW4gdGhlIGV2ZW50IGxvZyBhdCB0aGUgdGltZSBvZiB0aGUKcmVwbHksIG9yIGFyZSA8Y29kZT4mcXVvdDsmcXVvdDs8L2NvZGU+IGlmIHRoZSBsb2cgaXMgZW1wdHkuPC9wPgo8cD5UaGUgPGNvZGU+ZGF0YTwvY29kZT4gZmllbGQgY29udGFpbnMgdGhlIHR5cGUtc3BlY2lmaWMgZXZlbnQgZGF0dW0uICBUaGUgZGF0dW0gY2FycmllcyBhbnkKQUJDSSBldmVudHMgdGhhdCBtYXkgaGF2ZSBiZWVuIGRlZmluZWQuPC9wPgo8YmxvY2txdW90ZT4KPHA+PHN0cm9uZz5EaXNjdXNzaW9uIHBvaW50PC9zdHJvbmc+OiBCYXNlZCBvbiA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vdGVuZGVybWludC90ZW5kZXJtaW50L2lzc3Vlcy83MjczIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5pc3N1ZSAjNzI3MzxPdXRib3VuZExpbmsvPjwvYT4sIEkgZGlkIG5vdCBpbmNsdWRlIGEKc2VwYXJhdGUgZmllbGQgaW4gdGhlIHJlc3BvbnNlIGZvciB0aGUgQUJDSSBldmVudHMsIHNpbmNlIGl0IGR1cGxpY2F0ZXMgZGF0YQphbHJlYWR5IHN0b3JlZCBlbHNld2hlcmUgaW4gdGhlIGV2ZW50IGRhdGEuPC9wPgo8L2Jsb2NrcXVvdGU+CjxwPlRoZSBzZW1hbnRpY3Mgb2YgdGhlIHJlcGx5IGFyZSBhcyBmb2xsb3dzOjwvcD4KPHVsPgo8bGk+CjxwPklmIDxjb2RlPml0ZW1zPC9jb2RlPiBpcyBub24tZW1wdHk6PC9wPgo8dWw+CjxsaT4KPHA+SXRlbXMgYXJlIG9yZGVyZWQgZnJvbSBuZXdlc3QgdG8gb2xkZXN0LjwvcD4KPC9saT4KPGxpPgo8cD5JZiA8Y29kZT5tb3JlPC9jb2RlPiBpcyB0cnVlLCB0aGVyZSBpcyBhdCBsZWFzdCBvbmUgYWRkaXRpb25hbCwgb2xkZXIgaXRlbSBpbiB0aGUKZXZlbnQgbG9nIHRoYXQgd2FzIG5vdCByZXR1cm5lZCAoaW4gZXhjZXNzIG9mIDxjb2RlPm1heF9yZXN1bHRzPC9jb2RlPikuPC9wPgo8cD5JbiB0aGlzIGNhc2UgdGhlIGNsaWVudCBjYW4gZmV0Y2ggdGhlIG5leHQgcGFnZSBieSBzZXR0aW5nIDxjb2RlPmJlZm9yZTwvY29kZT4gaW4gYQpuZXcgcmVxdWVzdCwgdG8gdGhlIGN1cnNvciBvZiB0aGUgb2xkZXN0IGl0ZW0gZmV0Y2hlZCAoaS5lLiwgdGhlIGxhc3Qgb25lCmluIDxjb2RlPml0ZW1zPC9jb2RlPikuPC9wPgo8L2xpPgo8bGk+CjxwPk90aGVyd2lzZSAoaWYgPGNvZGU+bW9yZTwvY29kZT4gaXMgZmFsc2UpLCBhbGwgdGhlIG1hdGNoaW5nIHJlc3VsdHMgaGF2ZSBiZWVuCnJlcG9ydGVkIChwYWdpbmF0aW9uIGlzIGNvbXBsZXRlKS48L3A+CjwvbGk+CjxsaT4KPHA+VGhlIGZpcnN0IGVsZW1lbnQgb2YgPGNvZGU+aXRlbXM8L2NvZGU+IGlkZW50aWZpZXMgdGhlIG5ld2VzdCBpdGVtIGNvbnNpZGVyZWQuClN1YnNlcXVlbnQgcG9sbCByZXF1ZXN0cyBjYW4gc2V0IDxjb2RlPmFmdGVyPC9jb2RlPiB0byB0aGlzIGN1cnNvciB0byBza2lwIGl0ZW1zCnRoYXQgd2VyZSBhbHJlYWR5IHJldHJpZXZlZC48L3A+CjwvbGk+CjwvdWw+CjwvbGk+CjxsaT4KPHA+SWYgPGNvZGU+aXRlbXM8L2NvZGU+IGlzIGVtcHR5OjwvcD4KPHVsPgo8bGk+CjxwPklmIHRoZSA8Y29kZT5iZWZvcmU8L2NvZGU+IHdhcyBzZXQgaW4gdGhlIHJlcXVlc3QsIHRoZXJlIGFyZSBubyBmdXJ0aGVyIGVsaWdpYmxlCml0ZW1zIGZvciB0aGlzIHF1ZXJ5IGluIHRoZSBsb2cgKHBhZ2luYXRpb24gaXMgY29tcGxldGUpLjwvcD4KPHA+VGhpcyBpcyBqdXN0IGEgc2FmZXR5IGNhc2U7IHRoZSBjbGllbnQgY2FuIGRldGVjdCB0aGlzIHdpdGhvdXQgaXNzdWluZwphbm90aGVyIGNhbGwgYnkgY29uc3VsdGluZyB0aGUgPGNvZGU+bW9yZTwvY29kZT4gZmllbGQgb2YgdGhlIHByZXZpb3VzIHJlcGx5LjwvcD4KPC9saT4KPGxpPgo8cD5JZiB0aGUgPGNvZGU+YmVmb3JlPC9jb2RlPiB3YXMgZW1wdHkgaW4gdGhlIHJlcXVlc3QsIG5vIGVsaWdpYmxlIGl0ZW1zIHdlcmUKYXZhaWxhYmxlIGJlZm9yZSB0aGUgPGNvZGU+d2FpdF90aW1lPC9jb2RlPiBleHBpcmVkLiBUaGUgY2xpZW50IG1heSBwb2xsIGFnYWluIHRvCndhaXQgZm9yIG1vcmUgZXZlbnQgaXRlbXMuPC9wPgo8L2xpPgo8L3VsPgo8L2xpPgo8L3VsPgo8cD5BIGNsaWVudCBjYW4gc3RvcmUgY3Vyc29yIHZhbHVlcyB0byBkZXRlY3QgZGF0YSBsb3NzIGFuZCB0byByZWNvdmVyIGZyb20KY3Jhc2hlcyBhbmQgY29ubmVjdGl2aXR5IGlzc3Vlczo8L3A+Cjx1bD4KPGxpPgo8cD5BZnRlciBhIGNyYXNoLCB0aGUgY2xpZW50IHJlcXVlc3RzIGV2ZW50cyBhZnRlciB0aGUgbmV3ZXN0IGN1cnNvciBpdCBoYXMKc2Vlbi4gIElmIHRoZSByZXBseSBpbmRpY2F0ZXMgdGhhdCBjdXJzb3IgaXMgbm8gbG9uZ2VyIGluIHJhbmdlLCB0aGUgY2xpZW50Cm1heSAoY29uc2VydmF0aXZlbHkpIGNvbmNsdWRlIHNvbWUgZXZlbnQgZGF0YSBtYXkgaGF2ZSBiZWVuIGxvc3QuPC9wPgo8L2xpPgo8bGk+CjxwPk9uIHRoZSBvdGhlciBoYW5kLCBpZiBpdCA8ZW0+aXM8L2VtPiBpbiByYW5nZSwgdGhlIGNsaWVudCBjYW4gdGhlbiBwYWdlIGJhY2sgdGhyb3VnaAp0aGUgcmVzdWx0cyB0aGF0IGl0IG1pc3NlZCwgYW5kIHRoZW4gcmVzdW1lIHBvbGxpbmcuIEFzIGxvbmcgYXMgaXRzIHJlY292ZXJ5CmN1cnNvciBkb2VzIG5vdCBhZ2Ugb3V0IGJlZm9yZSBpdCBmaW5pc2hlcywgdGhlIGNsaWVudCBjYW4gYmUgc3VyZSBpdCBoYXMgYWxsCnRoZSByZWxldmFudCByZXN1bHRzLjwvcD4KPC9saT4KPC91bD4KPGgzIGlkPSJvdGhlci1ub3RlcyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNvdGhlci1ub3RlcyI+IzwvYT4gT3RoZXIgTm90ZXM8L2gzPgo8dWw+CjxsaT4KPHA+VGhlIG5ldyBBUEkgc3VwcG9ydHMgdHdvIGdlbmVyYWwgJnF1b3Q7bW9kZXMmcXVvdDsgb2Ygb3BlcmF0aW9uOjwvcD4KPG9sPgo8bGk+CjxwPkluIG9yZGluYXJ5IG9wZXJhdGlvbiwgY2xpZW50cyB3aWxsIDxzdHJvbmc+bG9uZy1wb2xsPC9zdHJvbmc+IHRoZSBoZWFkIG9mIHRoZSBldmVudApsb2cgZm9yIG5ldyBldmVudHMgbWF0Y2hpbmcgdGhlaXIgY3JpdGVyaWEgKGJ5IHNldHRpbmcgYSA8Y29kZT53YWl0X3RpbWU8L2NvZGU+IGFuZApubyA8Y29kZT5iZWZvcmU8L2NvZGU+KS48L3A+CjwvbGk+CjxsaT4KPHA+SWYgdGhlcmUgYXJlIG1vcmUgZXZlbnRzIHRoYW4gdGhlIGNsaWVudCByZXF1ZXN0ZWQsIG9yIGlmIHRoZSBjbGllbnQgbmVlZHMKdG8gdG8gcmVhZCBvbGRlciBldmVudHMgdG8gcmVjb3ZlciBmcm9tIGEgc3RhbGwgb3IgY3Jhc2gsIGNsaWVudHMgd2lsbAo8c3Ryb25nPnBhZ2U8L3N0cm9uZz4gYmFja3dhcmQgdGhyb3VnaCB0aGUgZXZlbnQgbG9nIChieSBzZXR0aW5nIDxjb2RlPmJlZm9yZTwvY29kZT4gYW5kIDxjb2RlPmFmdGVyPC9jb2RlPikuPC9wPgo8L2xpPgo8L29sPgo8L2xpPgo8bGk+CjxwPldoaWxlIHRoZSBuZXcgQVBJIHJlcXVpcmVzIGV4cGxpY2l0IHBvbGxpbmcgYnkgdGhlIGNsaWVudCwgaXQgbWFrZXMgYmV0dGVyCnVzZSBvZiB0aGUgbm9kZSdzIGV4aXN0aW5nIEhUVFAgaW5mcmFzdHJ1Y3R1cmUgKGUuZy4sIGNvbm5lY3Rpb24gcG9vbHMpLgpNb3Jlb3ZlciwgdGhlIGRpcmVjdCBpbXBsZW1lbnRhdGlvbiBpcyBlYXNpZXIgdG8gdXNlIGZyb20gc3RhbmRhcmQgdG9vbHMgYW5kCmNsaWVudCBsaWJyYXJpZXMgZm9yIEhUVFAgYW5kIEpTT04tUlBDLjwvcD4KPHA+RXhwbGljaXQgcG9sbGluZyBkb2VzIHNoaWZ0IHRoZSBidXJkZW4gb2YgdGltZWxpbmVzcyB0byB0aGUgY2xpZW50LiAgVGhhdCBpcwphcmd1YWJseSBwcmVmZXJhYmxlLCBob3dldmVyLCBnaXZlbiB0aGF0IHRoZSBSUEMgc2VydmljZSBpcyBhbmNpbGxhcnkgdG8gdGhlCm5vZGUncyBwcmltYXJ5IGdvYWwsIHZpei4sIGNvbnNlbnN1cy4gVGhlIGRldGFpbHMgb2YgcG9sbGluZyBjYW4gYmUgZWFzaWx5CmhpZGRlbiBmcm9tIGNsaWVudCBhcHBsaWNhdGlvbnMgd2l0aCBzaW1wbGUgbGlicmFyaWVzLjwvcD4KPC9saT4KPGxpPgo8cD5UaGUgZm9ybWF0IG9mIGEgY3Vyc29yIGlzIGNvbnNpZGVyZWQgb3BhcXVlIHRvIHRoZSBjbGllbnQuIENsaWVudHMgbXVzdCBub3QKcGFyc2UgY3Vyc29yIHZhbHVlcywgYnV0IHRoZXkgbWF5IHJlbHkgb24gdGhlaXIgb3JkZXJpbmcgcHJvcGVydGllcy48L3A+CjwvbGk+CjxsaT4KPHA+VG8gbWFpbnRhaW4gdGhlIGV2ZW50IGxvZywgdGhlIHNlcnZlciBtdXN0IHBydW5lIGl0ZW1zIG91dHNpZGUgdGhlIHRpbWUKd2luZG93IGFuZCBpbiBleGNlc3Mgb2YgdGhlIGl0ZW0gbGltaXQuPC9wPgo8cD5UaGUgaW5pdGlhbCBpbXBsZW1lbnRhdGlvbiB3aWxsIGRvIHRoaXMgYnkgY2hlY2tpbmcgdGhlIHRhaWwgb2YgdGhlIGV2ZW50IGxvZwphZnRlciBlYWNoIG5ldyBpdGVtIGlzIHB1Ymxpc2hlZC4gSWYgdGhlIG51bWJlciBvZiBpdGVtcyBpbiB0aGUgbG9nIGV4Y2VlZHMKdGhlIGl0ZW0gbGltaXQsIGl0IHdpbGwgZGVsZXRlIG9sZGVzdCBpdGVtcyB1bnRpbCB0aGUgbG9nIGlzIHVuZGVyIHRoZSBsaW1pdDsKdGhlbiBkaXNjYXJkIGFueSBvbGRlciB0aGFuIHRoZSB0aW1lIHdpbmRvdyBiZWZvcmUgdGhlIGxhdGVzdC48L3A+CjxwPlRvIG1pbmltaXplIGNvb3JkaW5hdGlvbiBpbnRlcmZlcmVuY2UgYmV0d2VlbiB0aGUgcHVibGlzaGVyICh0aGUgZXZlbnQgYnVzKQphbmQgdGhlIHN1YmNyaWJlcnMgKHRoZSA8Y29kZT5ldmVudHM8L2NvZGU+IHNlcnZpY2UgaGFuZGxlcnMpLCB0aGUgZXZlbnQgbG9nIHdpbGwgYmUKc3RvcmVkIGFzIGEgcGVyc2lzdGVudCBsaW5lYXIgcXVldWUgd2l0aCBzaGFyZWQgc3RydWN0dXJlIChhIGNvbnMgbGlzdCkuICBBCnNpbmdsZSByZWFkZXItd3JpdGVyIG11dGV4IHdpbGwgZ3VhcmQgdGhlICZxdW90O2hlYWQmcXVvdDsgb2YgdGhlIHF1ZXVlIHdoZXJlIG5ldwppdGVtcyBhcmUgcHVibGlzaGVkOjwvcD4KPHVsPgo8bGk+CjxwPjxzdHJvbmc+VG8gcHVibGlzaCBhIG5ldyBpdGVtPC9zdHJvbmc+LCB0aGUgcHVibGlzaGVyIGFjcXVpcmVzIHRoZSB3cml0ZSBsb2NrLCBjb25zZXMgYQpuZXcgaXRlbSB0byB0aGUgZnJvbnQgb2YgdGhlIGV4aXN0aW5nIHF1ZXVlLCBhbmQgcmVwbGFjZXMgdGhlIGhlYWQgcG9pbnRlcgp3aXRoIHRoZSBuZXcgaXRlbS48L3A+CjwvbGk+CjxsaT4KPHA+PHN0cm9uZz5UbyBzY2FuIHRoZSBxdWV1ZTwvc3Ryb25nPiwgYSByZWFkZXIgYWNxdWlyZXMgdGhlIHJlYWQgbG9jaywgY2FwdHVyZXMgdGhlIGhlYWQKcG9pbnRlciwgYW5kIHRoZW4gcmVsZWFzZXMgdGhlIGxvY2suIFRoZSByZXN0IG9mIGl0cyByZXF1ZXN0IGNhbiBiZSBzZXJ2ZWQKd2l0aG91dCBob2xkaW5nIGEgbG9jaywgc2luY2UgdGhlIHF1ZXVlIHN0cnVjdHVyZSB3aWxsIG5vdCBjaGFuZ2UuPC9wPgo8cD5XaGVuIGEgcmVhZGVyIHdhbnRzIHRvIHdhaXQsIGl0IHdpbGwgeWllbGQgdGhlIGxvY2sgYW5kIHdhaXQgb24gYSBjb25kaXRpb24KdGhhdCBpcyBzaWduYWxlZCB3aGVuIHRoZSBwdWJsaXNoZXIgc3dpbmdzIHRoZSBwb2ludGVyLjwvcD4KPC9saT4KPGxpPgo8cD48c3Ryb25nPlRvIHBydW5lIHRoZSBxdWV1ZTwvc3Ryb25nPiwgdGhlIHB1Ymxpc2hlciAod2hvIGlzIHRoZSBzb2xlIHdyaXRlcikgd2lsbCB0cmFjawp0aGUgcXVldWUgbGVuZ3RoIGFuZCB0aGUgYWdlIG9mIHRoZSBvbGRlc3QgaXRlbSBzZXBhcmF0ZWx5LiAgV2hlbiB0aGUKbGVuZ3RoIGFuZCBvciBhZ2UgZXhjZWVkIHRoZSBjb25maWd1cmVkIGJvdW5kcywgaXQgd2lsbCBjb25zdHJ1Y3QgYSBuZXcKcXVldWUgc3BpbmUgb24gdGhlIHNhbWUgaXRlbXMsIGRpc2NhcmRpbmcgb3V0LW9mLWJhbmQgdmFsdWVzLjwvcD4KPHA+UHJ1bmluZyBjYW4gYmUgZG9uZSB3aGlsZSB0aGUgcHVibGlzaGVyIGFscmVhZHkgaG9sZHMgdGhlIHdyaXRlIGxvY2ssIG9yCmNvdWxkIGJlIGRvbmUgb3V0c2lkZSB0aGUgbG9jayBlbnRpcmVseTogT25jZSB0aGUgbmV3IHF1ZXVlIGlzIGNvbnN0cnVjdGVkLAp0aGUgbG9jayBjYW4gYmUgcmUtYWNxdWlyZWQgdG8gc3dpbmcgdGhlIHBvaW50ZXIuIFRoaXMgY29zdHMgc29tZSBleHRyYQphbGxvY2F0aW9ucyBmb3IgdGhlIGNvbnMgY2VsbHMsIGJ1dCBhdm9pZHMgZHVwbGljYXRpbmcgYW55IGV2ZW50IGl0ZW1zLgpUaGUgcHJ1bmluZyBzdGVwIGlzIGEgc2ltcGxlIGxpbmVhciBzY2FuIGRvd24gdGhlIGZpcnN0ICh1cCB0bykgbWF4LWl0ZW1zCmVsZW1lbnRzIG9mIHRoZSBxdWV1ZSwgdG8gZmluZCB0aGUgYnJlYWtwb2ludCBvZiBhZ2UgYW5kIGxlbmd0aC48L3A+CjxwPk1vcmVvdmVyLCB0aGUgcHVibGlzaGVyIGNhbiBhbW9ydGl6ZSB0aGUgY29zdCBvZiBwcnVuaW5nIGJ5IGl0ZW0gY291bnQsIGlmCm5lY2Vzc2FyeSwgYnkgcHJ1bmluZyBsZW5ndGggJnF1b3Q7bW9yZSBhZ2dyZXNzaXZlbHkmcXVvdDsgdGhhbiB0aGUgY29uZmlndXJhdGlvbgpyZXF1aXJlcyAoZS5nLiwgcmVkdWNpbmcgdG8gMy80IG9mIHRoZSBtYXhpbXVtIHJhdGhlciB0aGFuIDEvMSkuPC9wPgo8cD5UaGUgc3RhdGUgb2YgdGhlIGV2ZW50IGxvZyBiZWZvcmUgdGhlIHB1Ymxpc2hlciBhY3F1aXJlcyB0aGUgbG9jazoKPGltZyBzcmM9Ii4vaW1nL2Fkci0wNzUtbG9nLWJlZm9yZS5wbmciIGFsdD0iQmVmb3JlIHB1Ymxpc2ggYW5kIHBydW5pbmciPjwvcD4KPHA+QWZ0ZXIgdGhlIHB1Ymxpc2hlciBoYXMgYWRkZWQgYSBuZXcgaXRlbSBhbmQgcHJ1bmVkIG9sZCBvbmVzOgo8aW1nIHNyYz0iLi9pbWcvYWRyLTA3NS1sb2ctYWZ0ZXIucG5nIiBhbHQ9IkFmdGVyIHB1Ymxpc2ggYW5kIHBydW5pbmciPjwvcD4KPC9saT4KPC91bD4KPC9saT4KPC91bD4KPGgzIGlkPSJtaWdyYXRpb24tcGxhbiI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNtaWdyYXRpb24tcGxhbiI+IzwvYT4gTWlncmF0aW9uIFBsYW48L2gzPgo8cD5UaGlzIGRlc2lnbiByZXF1aXJlcyB0aGF0IGNsaWVudHMgZXZlbnR1YWxseSBtaWdyYXRlIHRvIHRoZSBuZXcgZXZlbnQKc3Vic2NyaXB0aW9uIEFQSSwgYnV0IHByb3ZpZGVzIGEgZnVsbCByZWxlYXNlIGN5Y2xlIHdpdGggYm90aCBBUElzIGluIHBsYWNlIHRvCm1ha2UgdGhpcyBidXJkZW4gbW9yZSB0cmFjdGFibGUuIFRoZSBtaWdyYXRpb24gc3RyYXRlZ3kgaXMgYnJvYWRseTo8L3A+CjxwPjxzdHJvbmc+UGhhc2UgMTwvc3Ryb25nPjogUmVsZWFzZSB2MC4zNi48L3A+Cjx1bD4KPGxpPkltcGxlbWVudCB0aGUgbmV3IDxjb2RlPmV2ZW50czwvY29kZT4gZW5kcG9pbnQsIGtlZXBpbmcgdGhlIGV4aXN0aW5nIG1ldGhvZHMgYXMgdGhleSBhcmUuPC9saT4KPGxpPlVwZGF0ZSB0aGUgR28gY2xpZW50cyB0byBzdXBwb3J0IHRoZSBuZXcgPGNvZGU+ZXZlbnRzPC9jb2RlPiBlbmRwb2ludCwgYW5kIGhhbmRsZSBwb2xsaW5nLjwvbGk+CjxsaT5VcGRhdGUgdGhlIG9sZCBlbmRwb2ludHMgdG8gbG9nIGFubm95aW5nbHkgYWJvdXQgdGhlaXIgb3duIGRlcHJlY2F0aW9uLjwvbGk+CjxsaT5Xcml0ZSB0dXRvcmlhbHMgYWJvdXQgaG93IHRvIG1pZ3JhdGUgY2xpZW50IHVzYWdlLjwvbGk+CjwvdWw+CjxwPkF0IG9yIHNob3J0bHkgYWZ0ZXIgcmVsZWFzZSwgd2Ugc2hvdWxkIHByb2FjdGl2ZWx5IHVwZGF0ZSB0aGUgQ29zbW9zIFNESyB0byB1c2UKdGhlIG5ldyBBUEksIHRvIHJlbW92ZSBhIGRpc2luY2VudGl2ZSB0byB1cGdyYWRpbmcuPC9wPgo8cD48c3Ryb25nPlBoYXNlIDI8L3N0cm9uZz46IFJlbGVhc2UgdjAuMzc8L3A+Cjx1bD4KPGxpPkR1cmluZyBkZXZlbG9wbWVudCwgd2Ugc2hvdWxkIGFjdGl2ZWx5IHNlZWsgb3V0IGFueSBleGlzdGluZyB1c2VycyBvZiB0aGUKc3RyZWFtaW5nIGV2ZW50IHN1YnNjcmlwdGlvbiBBUEkgYW5kIGhlbHAgdGhlbSBtaWdyYXRlLjwvbGk+CjxsaT5Qb3NzaWJseSBhbHNvOiBTcGVuZCBzb21lIHRpbWUgd3JpdGluZyBjbGllbnRzIGZvciBKUywgUnVzdCwgZXQgYWwuPC9saT4KPGxpPlJlbGVhc2U6IERlbGV0ZSB0aGUgb2xkIGltcGxlbWVudGF0aW9uIGFuZCBhbGwgdGhlIHdlYnNvY2tldCBzdXBwb3J0IGNvZGUuPC9saT4KPC91bD4KPGJsb2NrcXVvdGU+CjxwPjxzdHJvbmc+RGlzY3Vzc2lvbiBwb2ludDwvc3Ryb25nPjogRXZlbiB0aG91Z2ggdGhlIHBsYW4gaXMgdG8ga2VlcCB0aGUgZXhpc3Rpbmcgc2VydmljZSwKd2UgbWlnaHQgdGFrZSB0aGUgb3Bwb3J0dW5pdHkgdG8gcmVzdHJpY3QgdGhlIHdlYnNvY2tldCBlbmRwb2ludCB0byA8ZW0+b25seTwvZW0+CnRoZSBldmVudCBzdHJlYW1pbmcgc2VydmljZSwgcmVtb3ZpbmcgdGhlIG90aGVyIGVuZHBvaW50cy4gVG8gbWluaW1pemUgdGhlCmRpc3J1cHRpb24gZm9yIHVzZXJzIGluIHRoZSB2MC4zNiBjeWNsZSwgSSBoYXZlIGRlY2lkZWQgbm90IHRvIGRvIHRoaXMgZm9yCnRoZSBmaXJzdCBwaGFzZS48L3A+CjxwPklmIHdlIHdpbmQgdXAgcHVzaGluZyB0aGlzIGRlc2lnbiBpbnRvIHYwLjM3LCBob3dldmVyLCB3ZSBzaG91bGQgcmUtZXZhdWxhdGUKdGhpcyBwYXJ0aWFsIHR1cm4tZG93biBvZiB0aGUgd2Vic29ja2V0LjwvcD4KPC9ibG9ja3F1b3RlPgo8aDMgaWQ9ImZ1dHVyZS13b3JrIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2Z1dHVyZS13b3JrIj4jPC9hPiBGdXR1cmUgV29yazwvaDM+Cjx1bD4KPGxpPgo8cD5UaGlzIGRlc2lnbiBkb2VzIG5vdCBpbW1lZGlhdGVseSBhZGRyZXNzIHRoZSBwcm9ibGVtIG9mIGFsbG93aW5nIHRoZSBjbGllbnQKdG8gY29udHJvbCB3aGljaCBkYXRhIGFyZSByZXBvcnRlZCBiYWNrIGZvciBldmVudCBpdGVtcy4gVGhhdCBjb25jZXJuIGlzCmRlZmVycmVkIHRvIGZ1dHVyZSB3b3JrLiBIb3dldmVyLCBpdCB3b3VsZCBiZSBzdHJhaWdodGZvcndhcmQgdG8gZXh0ZW5kIHRoZQpmaWx0ZXIgYW5kL29yIHRoZSByZXF1ZXN0IHBhcmFtZXRlcnMgdG8gYWxsb3cgbW9yZSBjb250cm9sLjwvcD4KPC9saT4KPGxpPgo8cD5UaGUgbm9kZSBjdXJyZW50bHkgc3RvcmVzIGEgc3Vic2V0IG9mIGV2ZW50IGRhdGEgKHNwZWNpZmljYWxseSB0aGUgYmxvY2sgYW5kCnRyYW5zYWN0aW9uIGV2ZW50cykgZm9yIHVzZSBpbiByZWluZGV4aW5nLiBXaGlsZSB0aGVzZSBkYXRhIGFyZSByZWR1bmRhbnQKd2l0aCB0aGUgZXZlbnQgbG9nIGRlc2NyaWJlZCBpbiB0aGlzIGRvY3VtZW50LCB0aGV5IGFyZSBub3Qgc3VmZmljaWVudCB0bwpjb3ZlciBldmVudCBzdWJzY3JpcHRpb24sIGFzIHRoZXkgb21pdCBvdGhlciBldmVudCB0eXBlcy48L3A+CjxwPkluIHRoZSBmdXR1cmUgd2Ugc2hvdWxkIGludmVzdGlnYXRlIGNvbnNvbGlkYXRpbmcgb3IgcmVtb3ZpbmcgZXZlbnQgZGF0YSBmcm9tCnRoZSBzdGF0ZSBzdG9yZSBlbnRpcmVseS4gRm9yIG5vdyB0aGlzIGlzc3VlIGlzIG91dCBvZiBzY29wZSBmb3IgcHVycG9zZXMgb2YKdXBkYXRpbmcgdGhlIFJQQyBBUEkuIFdlIG1heSBiZSBhYmxlIHRvIHBpZ2d5YmFjayBvbiB0aGUgZGF0YWJhc2UgdW5pZmljYXRpb24KcGxhbnMgKHNlZSA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vdGVuZGVybWludC90ZW5kZXJtaW50L2Jsb2IvbWFpbi9kb2NzL3JmYy9yZmMtMDAxLXN0b3JhZ2UtZW5naW5lLnJzdCIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+UkZDIDAwMTxPdXRib3VuZExpbmsvPjwvYT4pIHRvIHN0b3JlIHRoZSBldmVudCBsb2cgc2VwYXJhdGVseSwgc28gaXRzCnBydW5pbmcgcG9saWN5IGRvZXMgbm90IG5lZWQgdG8gYmUgdGllZCB0byB0aGUgYmxvY2sgYW5kIHN0YXRlIHN0b3Jlcy48L3A+CjwvbGk+CjxsaT4KPHA+VGhpcyBkZXNpZ24gcmV1c2VzIHRoZSBleGlzdGluZyBmaWx0ZXIgcXVlcnkgbGFuZ3VhZ2UgZnJvbSB0aGUgb2xkIEFQSS4gIEluCnRoZSBmdXR1cmUgd2UgbWF5IHdhbnQgdG8gdXNlIGEgbW9yZSBzdHJ1Y3R1cmVkIGFuZC9vciBleHByZXNzaXZlIHF1ZXJ5LiAgVGhlCkZpbHRlciBvYmplY3QgY2FuIGJlIGV4dGVuZGVkIHdpdGggbW9yZSBmaWVsZHMgYXMgbmVlZGVkIHRvIHN1cHBvcnQgdGhpcy48L3A+CjwvbGk+CjxsaT4KPHA+U29tZSB1c2VycyBoYXZlIHRyb3VibGUgY29tbXVuaWNhdGluZyB3aXRoIHRoZSBSUEMgc2VydmljZSBiZWNhdXNlIG9mCmNvbmZpZ3VyYXRpb24gcHJvYmxlbXMgbGlrZSBpbXByb3Blcmx5LXNldCBDT1JTIHBvbGljaWVzLiBXaGlsZSB0aGlzIGRlc2lnbgpkb2VzIG5vdCBhZGRyZXNzIHRob3NlIGlzc3VlcyBkaXJlY3RseSwgd2UgbWlnaHQgd2FudCB0byByZXZpc2l0IGhvdyB3ZSBzZXQKcG9saWNpZXMgaW4gdGhlIFJQQyBzZXJ2aWNlIHRvIG1ha2UgaXQgbGVzcyBzdXNjZXB0aWJsZSB0byBjb25mdXNpbmcgZXJyb3JzCmNhdXNlZCBieSBtaXNjb25maWd1cmF0aW9uLjwvcD4KPC9saT4KPC91bD4KPGhyPgo8aDIgaWQ9ImNvbnNlcXVlbmNlcyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNjb25zZXF1ZW5jZXMiPiM8L2E+IENvbnNlcXVlbmNlczwvaDI+Cjx1bD4KPGxpPuKchSBSZWR1Y2VzIHRoZSBudW1iZXIgb2YgdHJhbnNwb3J0IG9wdGlvbnMgZm9yIFJQQy4gIFN1cHBvcnRzIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS90ZW5kZXJtaW50L3RlbmRlcm1pbnQvYmxvYi9tYWluL2RvY3MvcmZjL3JmYy0wMDItaXBjLWVjb3N5c3RlbS5tZCIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+UkZDIDAwMjxPdXRib3VuZExpbmsvPjwvYT4uPC9saT4KPGxpPu+4j+KchSBSZW1vdmVzIHRoZSBwcmltYXJ5IG5vbi1zdGFuZGFyZCB1c2Ugb2YgSlNPTi1SUEMuPC9saT4KPGxpPuKblO+4jyBGb3JjZXMgY2xpZW50cyB0byBtaWdyYXRlIHRvIGEgZGlmZmVyZW50IEFQSSAoZXZlbnR1YWxseSkuPC9saT4KPGxpPuKGle+4jyAgQVBJIHJlcXVpcmVzIGNsaWVudHMgdG8gcG9sbCwgYnV0IHRoaXMgcmVkdWNlcyBjbGllbnQgc3RhdGUgb24gdGhlIHNlcnZlci48L2xpPgo8bGk+4oaV77iPICBXZSBoYXZlIHRvIG1haW50YWluIGJvdGggaW1wbGVtZW50YXRpb25zIGZvciBhIHdob2xlIHJlbGVhc2UsIGJ1dCB0aGlzCmdpdmVzIGNsaWVudHMgdGltZSB0byBtaWdyYXRlLjwvbGk+CjwvdWw+Cjxocj4KPGgyIGlkPSJhbHRlcm5hdGl2ZS1hcHByb2FjaGVzIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2FsdGVybmF0aXZlLWFwcHJvYWNoZXMiPiM8L2E+IEFsdGVybmF0aXZlIEFwcHJvYWNoZXM8L2gyPgo8cD5UaGUgZm9sbG93aW5nIGFsdGVybmF0aXZlIGFwcHJvYWNoZXMgd2VyZSBjb25zaWRlcmVkOjwvcD4KPG9sPgo8bGk+CjxwPjxzdHJvbmc+TGVhdmUgaXQgYWxvbmUuPC9zdHJvbmc+IFNpbmNlIGV4aXN0aW5nIHRvb2xzIG1vc3RseSBhbHJlYWR5IHdvcmsgd2l0aCB0aGUgQVBJIGFzCml0IHN0YW5kcyB0b2RheSwgd2UgY291bGQgbGVhdmUgaXQgYWxvbmUgYW5kIGRvIG91ciBiZXN0IHRvIGltcHJvdmUgaXRzCnBlcmZvcm1hbmNlIGFuZCByZWxpYWJpbGl0eS48L3A+CjxwPkJhc2VkIG9uIG1hbnkgaXNzdWVzIHJlcG9ydGVkIGJ5IHVzZXJzIGFuZCBub2RlIG9wZXJhdG9ycyAoZS5nLiwKPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3RlbmRlcm1pbnQvdGVuZGVybWludC9pc3N1ZXMvMzM4MCIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+IzMzODA8T3V0Ym91bmRMaW5rLz48L2E+LCA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vdGVuZGVybWludC90ZW5kZXJtaW50L2lzc3Vlcy82NDM5IiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj4jNjQzOTxPdXRib3VuZExpbmsvPjwvYT4sIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS90ZW5kZXJtaW50L3RlbmRlcm1pbnQvaXNzdWVzLzY3MjkiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPiM2NzI5PE91dGJvdW5kTGluay8+PC9hPiwgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3RlbmRlcm1pbnQvdGVuZGVybWludC9pc3N1ZXMvNzI0NyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+IzcyNDc8T3V0Ym91bmRMaW5rLz48L2E+KSwgdGhlCnByb2JsZW1zIGRlc2NyaWJlZCBoZXJlIGFmZmVjdCBldmVuIHRoZSBleGlzdGluZyB1c2UgdGhhdCB3b3Jrcy4gIEludmVzdGluZwpmdXJ0aGVyIGluY3JlbWVudGFsIGVmZm9ydCBpbiB0aGUgZXhpc3RpbmcgQVBJIGlzIHVubGlrZWx5IHRvIGFkZHJlc3MgdGhlc2UKaXNzdWVzLjwvcD4KPC9saT4KPGxpPgo8cD48c3Ryb25nPkRlc2lnbiBhIGJldHRlciBzdHJlYW1pbmcgQVBJLjwvc3Ryb25nPiBJbnN0ZWFkIG9mIHBvbGxpbmcsIHdlIG1pZ2h0IHRyeSB0bwpkZXNpZ24gYSBiZXR0ZXIgJnF1b3Q7c3RyZWFtaW5nJnF1b3Q7IEFQSSBmb3IgZXZlbnQgc3Vic2NyaXB0aW9uLjwvcD4KPHA+QSBzaWduaWZpY2FudCBhZHZhbnRhZ2Ugb2Ygc3dpdGNoaW5nIGF3YXkgZnJvbSBzdHJlYW1pbmcgaXMgdG8gcmVtb3ZlIHRoZQpuZWVkIGZvciBwZXJzaXN0ZW50IGNvbm5lY3Rpb25zIGJldHdlZW4gdGhlIG5vZGUgYW5kIHN1YnNjcmliZXJzLiAgQSBuZXcKc3RyZWFtaW5nIHByb3RvY29sIGRlc2lnbiB3b3VsZCBsb3NlIHRoYXQgYWR2YW50YWdlLCBhbmQgd291bGQgc3RpbGwgbmVlZCBhCndheSB0byBsZXQgY2xpZW50cyByZWNvdmVyIGFuZCByZXBsYXkuPC9wPgo8cD5UaGlzIGFwcHJvYWNoIG1pZ2h0IGxvb2sgYmV0dGVyIGlmIHdlIGRlY2lkZWQgdG8gdXNlIGEgZGlmZmVyZW50IHByb3RvY29sCmZvciBldmVudCBzdWJzY3JpcHRpb24sIHNheSBnUlBDIGluc3RlYWQgb2YgSlNPTi1SUEMuIFRoYXQgY2hvaWNlLCBob3dldmVyLAp3b3VsZCBiZSBqdXN0IGFzIGJyZWFraW5nIGZvciBleGlzdGluZyBjbGllbnRzLCBmb3IgbWFyZ2luYWwgYmVuZWZpdC4KTW9yZW92ZXIsIHRoaXMgb3B0aW9uIGluY3JlYXNlcyBib3RoIHRoZSBjb21wbGV4aXR5IGFuZCB0aGUgcmVzb3VyY2UgY29zdCBvbgp0aGUgbm9kZSBpbXBsZW1lbnRhdGlvbi48L3A+CjxwPkdpdmVuIHRoYXQgcmVzb3VyY2UgY29uc3VtcHRpb24gYW5kIGNvbXBsZXhpdHkgYXJlIGltcG9ydGFudCBjb25zaWRlcmF0aW9ucywKdGhpcyBvcHRpb24gd2FzIG5vdCBjaG9zZW4uPC9wPgo8L2xpPgo8bGk+CjxwPjxzdHJvbmc+RGVmZXIgdG8gYW4gZXh0ZXJuYWwgZXZlbnQgYnJva2VyLjwvc3Ryb25nPiBXZSBtaWdodCByZW1vdmUgdGhlIGVudGlyZSBldmVudApzdWJzY3JpcHRpb24gaW5mcmFzdHJ1Y3R1cmUgZnJvbSB0aGUgbm9kZSwgYW5kIGRlZmluZSBhbiBvcHRpb25hbCBpbnRlcmZhY2UKdG8gYWxsb3cgdGhlIG5vZGUgdG8gcHVibGlzaCBhbGwgaXRzIGV2ZW50cyB0byBhbiBleHRlcm5hbCBldmVudCBicm9rZXIsCnN1Y2ggYXMgQXBhY2hlIEthZmthLjwvcD4KPHA+VGhpcyBoYXMgdGhlIGFkdmFudGFnZSBvZiBncmVhdGx5IHNpbXBsaWZ5aW5nIHRoZSBub2RlLCBidXQgYXQgYSBncmVhdCBjb3N0CnRvIHRoZSBub2RlIG9wZXJhdG9yOiBUbyBlbmFibGUgZXZlbnQgc3Vic2NyaXB0aW9uIGluIHRoaXMgZGVzaWduLCB0aGUKb3BlcmF0b3IgaGFzIHRvIHN0YW5kIHVwIGFuZCBtYWludGFpbiBhIHNlcGFyYXRlIHByb2Nlc3MgaW4gY29tbXVuaW9uIHdpdGgKdGhlIG5vZGUsIGFuZCBjb25maWd1cmF0aW9uIGNoYW5nZXMgd291bGQgaGF2ZSB0byBiZSBjb29yZGluYXRlZCBhY3Jvc3MKYm90aC48L3A+CjxwPk1vcmVvdmVyLCB0aGlzIGFwcHJvYWNoIHdvdWxkIGJlIGhpZ2hseSBkaXNydXB0aXZlIHRvIGV4aXN0aW5nIGNsaWVudCB1c2UsCmFuZCBtaWdyYXRpb24gd291bGQgcHJvYmFibHkgcmVxdWlyZSBzd2l0Y2hpbmcgdG8gdGhpcmQtcGFydHkgbGlicmFyaWVzLgpEZXNwaXRlIHRoZSBwb3RlbnRpYWwgYmVuZWZpdHMgZm9yIHRoZSBub2RlIGl0c2VsZiwgdGhlIGNvc3RzIHRvIG9wZXJhdG9ycwphbmQgY2xpZW50cyBzZWVtcyB0b28gbGFyZ2UgZm9yIHRoaXMgdG8gYmUgdGhlIGJlc3Qgb3B0aW9uLjwvcD4KPHA+UHVibGlzaGluZyB0byBhbiBleHRlcm5hbCBldmVudCBicm9rZXIgbWlnaHQgYmUgYSB3b3J0aHdoaWxlIGZ1dHVyZSBwcm9qZWN0LAppZiB0aGVyZSBpcyBhbnkgZGVtYW5kIGZvciBpdC4gVGhhdCBkZWNpc2lvbiBpcyBvdXQgb2Ygc2NvcGUgZm9yIHRoaXMgZGVzaWduLAphcyBpdCBpbnRlcmFjdHMgd2l0aCB0aGUgZGVzaWduIG9mIHRoZSBpbmRleGVyIGFzIHdlbGwuPC9wPgo8L2xpPgo8L29sPgo8aHI+CjxoMiBpZD0icmVmZXJlbmNlcyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNyZWZlcmVuY2VzIj4jPC9hPiBSZWZlcmVuY2VzPC9oMj4KPHVsPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3RlbmRlcm1pbnQvdGVuZGVybWludC9ibG9iL21haW4vZG9jcy9yZmMvcmZjLTAwNi1ldmVudC1zdWJzY3JpcHRpb24ubWQiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPlJGQyAwMDY6IEV2ZW50IFN1YnNjcmlwdGlvbjxPdXRib3VuZExpbmsvPjwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3RlbmRlcm1pbnQvdGVuZGVybWludC9ibG9iL21haW4vcnBjL29wZW5hcGkvb3BlbmFwaS55YW1sIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5UZW5kZXJtaW50IFJQQyBzZXJ2aWNlPE91dGJvdW5kTGluay8+PC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL3BrZy5nby5kZXYvZ2l0aHViLmNvbS90ZW5kZXJtaW50L3RlbmRlcm1pbnRAbWFzdGVyL2ludGVybmFsL3B1YnN1Yi9xdWVyeS9zeW50YXgiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPkV2ZW50IHF1ZXJ5IGdyYW1tYXI8T3V0Ym91bmRMaW5rLz48L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZGF0YXRyYWNrZXIuaWV0Zi5vcmcvZG9jL2h0bWwvcmZjNjQ1NSIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+UkZDIDY0NTU6IFRoZSBXZWJTb2NrZXQgcHJvdG9jb2w8T3V0Ym91bmRMaW5rLz48L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vd3d3Lmpzb25ycGMub3JnL3NwZWNpZmljYXRpb24iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPkpTT04tUlBDIDIuMCBTcGVjaWZpY2F0aW9uPE91dGJvdW5kTGluay8+PC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL25naW54Lm9yZy9lbi9kb2NzLyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+TmdpbnggcHJveHkgc2VydmVyPE91dGJvdW5kTGluay8+PC9hPgo8dWw+CjxsaT48YSBocmVmPSJodHRwczovL25naW54Lm9yZy9lbi9kb2NzL2h0dHAvd2Vic29ja2V0Lmh0bWwiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPlByb3h5aW5nIHdlYnNvY2tldHM8T3V0Ym91bmRMaW5rLz48L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vd3d3Lm5naW54LmNvbS9yZXNvdXJjZXMvd2lraS9leHRlbmRpbmcvIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5FeHRlbnNpb24gbW9kdWxlczxPdXRib3VuZExpbmsvPjwvYT48L2xpPgo8L3VsPgo8L2xpPgo8bGk+PGEgaHJlZj0iaHR0cDovL3d3dy5taXQuZWR1L355YW5kcm9zL2RvYy9zcGVjcy9mY2dpLXNwZWMuaHRtbCIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+RmFzdENHSTxPdXRib3VuZExpbmsvPjwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3RlbmRlcm1pbnQvdGVuZGVybWludC9ibG9iL21haW4vZG9jcy9yZmMvcmZjLTAwMS1zdG9yYWdlLWVuZ2luZS5yc3QiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPlJGQyAwMDE6IFN0b3JhZ2UgRW5naW5lcyAmYW1wOyBEYXRhYmFzZSBMYXllcjxPdXRib3VuZExpbmsvPjwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3RlbmRlcm1pbnQvdGVuZGVybWludC9ibG9iL21haW4vZG9jcy9yZmMvcmZjLTAwMi1pcGMtZWNvc3lzdGVtLm1kIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5SRkMgMDAyOiBJbnRlcnByb2Nlc3MgQ29tbXVuaWNhdGlvbiBpbiBUZW5kZXJtaW50PE91dGJvdW5kTGluay8+PC9hPjwvbGk+CjxsaT5Jc3N1ZXM6Cjx1bD4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS90ZW5kZXJtaW50L3RlbmRlcm1pbnQvaXNzdWVzLzMzODAiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPnJwYy9jbGllbnQ6IHRlc3QgdGhhdCBjbGllbnQgcmVzdWJzY3JpYmVzIHVwb24gZGlzY29ubmVjdDxPdXRib3VuZExpbmsvPjwvYT4gKCMzMzgwKTwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vdGVuZGVybWludC90ZW5kZXJtaW50L2lzc3Vlcy82NDM5IiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5Ub28gaGlnaCBtZW1vcnkgdXNhZ2Ugd2hlbiBjcmVhdGluZyBtYW55IGV2ZW50cyBzdWJzY3JpcHRpb25zPE91dGJvdW5kTGluay8+PC9hPiAoIzY0MzkpPC9saT4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS90ZW5kZXJtaW50L3RlbmRlcm1pbnQvaXNzdWVzLzY3MjkiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPlRlbmRlcm1pbnQgZW1pdHMgZXZlbnRzIGZhc3RlciB0aGFuIGNsaWVudHMgY2FuIHB1bGwgdGhlbTxPdXRib3VuZExpbmsvPjwvYT4gKCM2NzI5KTwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vdGVuZGVybWludC90ZW5kZXJtaW50L2lzc3Vlcy83MjQ3IiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5pbmRleGVyOiB1bmJ1ZmZlcmVkIGV2ZW50IHN1YnNjcmlwdGlvbiBzbG93IGRvd24gdGhlIGNvbnNlbnN1czxPdXRib3VuZExpbmsvPjwvYT4gKCM3MjQ3KTwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vdGVuZGVybWludC90ZW5kZXJtaW50L2lzc3Vlcy83MjczIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5ycGM6IHJlbW92ZSBkdXBsaWNhdGlvbiBvZiBldmVudHMgd2hlbiBxdWVyeWluZzxPdXRib3VuZExpbmsvPjwvYT4gKCM3MjczKTwvbGk+CjwvdWw+CjwvbGk+CjwvdWw+CjwhLS0gbWFya2Rvd24tbGluay1jaGVjay1kaXNhYmxlLW5leHQtbGluZSAtLT4KPC9Db250ZW50U2xvdHNEaXN0cmlidXRvcj4K"},null]}