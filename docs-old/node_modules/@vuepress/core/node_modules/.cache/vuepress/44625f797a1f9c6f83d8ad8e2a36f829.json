{"remainingRequest":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/@cosmos-ui/vue/src/SectionSearch/SectionSearch.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/@cosmos-ui/vue/src/SectionSearch/SectionSearch.vue","mtime":1673296287215},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/cache-loader/dist/cjs.js","mtime":1673296285960},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/babel-loader/lib/index.js","mtime":1673296285980},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/cache-loader/dist/cjs.js","mtime":1673296285960},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/vue-loader/lib/index.js","mtime":1673296285952}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBGdXNlIGZyb20gImZ1c2UuanMiOwppbXBvcnQgTWFya2Rvd25JdCBmcm9tICJtYXJrZG93bi1pdCI7CmltcG9ydCBob3RrZXlzIGZyb20gImhvdGtleXMtanMiOwppbXBvcnQgU2VjdGlvblNob3J0Y3V0cyBmcm9tICIuL1NlY3Rpb25TaG9ydGN1dHMudnVlIjsKaW1wb3J0IFNlY3Rpb25SZXN1bHRzRW1wdHkgZnJvbSAiLi9TZWN0aW9uUmVzdWx0c0VtcHR5LnZ1ZSI7CmltcG9ydCBTZWN0aW9uSW5wdXQgZnJvbSAiLi9TZWN0aW9uSW5wdXQudnVlIjsKaW1wb3J0IFNlY3Rpb25SZXN1bHRzTGlzdCBmcm9tICIuL1NlY3Rpb25SZXN1bHRzTGlzdC52dWUiOwppbXBvcnQgYWxnb2xpYXNlYXJjaCBmcm9tICJhbGdvbGlhc2VhcmNoIjsKCmNvbnN0IGFsZ29saWFJbml0ID0gY29uZmlnID0+IHsKICBpZiAoY29uZmlnICYmIGNvbmZpZy5pZCAmJiBjb25maWcua2V5ICYmIGNvbmZpZy5pbmRleCkgewogICAgY29uc3QgYWxnb2xpYUNsaWVudCA9IGFsZ29saWFzZWFyY2goY29uZmlnLmlkLCBjb25maWcua2V5KTsKICAgIGNvbnN0IGFsZ29saWEgPSBhbGdvbGlhQ2xpZW50LmluaXRJbmRleChjb25maWcuaW5kZXgpOwogICAgcmV0dXJuIGFsZ29saWE7CiAgfSBlbHNlIHsKICAgIHJldHVybiBmYWxzZTsKICB9Cn07Cgpjb25zdCBmdXNlSW5pdCA9IHNpdGUgPT4gewogIHJldHVybiBuZXcgRnVzZSgKICAgIHNpdGUucGFnZXMKICAgICAgLm1hcChkb2MgPT4gewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBrZXk6IGRvYy5rZXksCiAgICAgICAgICB0aXRsZTogZG9jLnRpdGxlLAogICAgICAgICAgaGVhZGVyczogZG9jLmhlYWRlcnMgJiYgZG9jLmhlYWRlcnMubWFwKGggPT4gaC50aXRsZSkuam9pbigiICIpLAogICAgICAgICAgZGVzY3JpcHRpb246IGRvYy5mcm9udG1hdHRlci5kZXNjcmlwdGlvbiwKICAgICAgICAgIHBhdGg6IGRvYy5wYXRoCiAgICAgICAgfTsKICAgICAgfSkKICAgICAgLmZpbHRlcihkb2MgPT4gewogICAgICAgIHJldHVybiAhKAogICAgICAgICAgT2JqZWN0LmtleXMoc2l0ZS5sb2NhbGVzIHx8IHt9KS5pbmRleE9mKGRvYy5wYXRoLnNwbGl0KCIvIilbMV0pID4gLTEKICAgICAgICApOwogICAgICB9KSwKICAgIHsKICAgICAga2V5czogWyJ0aXRsZSIsICJoZWFkZXJzIiwgImRlc2NyaXB0aW9uIiwgInBhdGgiXSwKICAgICAgc2hvdWxkU29ydDogdHJ1ZSwKICAgICAgaW5jbHVkZVNjb3JlOiB0cnVlLAogICAgICBpbmNsdWRlTWF0Y2hlczogdHJ1ZQogICAgfQogICk7Cn07Cgpjb25zdCBmdXNlRm9ybWF0ID0gcmVzdWx0cyA9PiB7CiAgcmV0dXJuIHJlc3VsdHMubWFwKHJlc3VsdCA9PiB7CiAgICByZXR1cm4gewogICAgICB0aXRsZTogcmVzdWx0Lml0ZW0gJiYgcmVzdWx0Lml0ZW0udGl0bGUgJiYgbWQocmVzdWx0Lml0ZW0udGl0bGUpLAogICAgICBkZXNjOgogICAgICAgIHJlc3VsdC5pdGVtICYmIHJlc3VsdC5pdGVtLmRlc2NyaXB0aW9uICYmIG1kKHJlc3VsdC5pdGVtLmRlc2NyaXB0aW9uKSwKICAgICAgaWQ6IHJlc3VsdC5pdGVtICYmIHJlc3VsdC5pdGVtLmtleQogICAgfTsKICB9KTsKfTsKCmNvbnN0IGFsZ29saWFGb3JtYXQgPSByZXN1bHRzID0+IHsKICByZXR1cm4gcmVzdWx0cy5tYXAocmVzdWx0ID0+IHsKICAgIGNvbnN0IHRpdGxlID0gT2JqZWN0LnZhbHVlcyhyZXN1bHQuaGllcmFyY2h5KQogICAgICAuZmlsdGVyKGUgPT4gZSkKICAgICAgLm1hcChlID0+IGUucmVwbGFjZSgvXiMvLCAiIikpCiAgICAgIC5qb2luKCIg4oC6ICIpOwogICAgcmV0dXJuIHsKICAgICAgdGl0bGUsCiAgICAgIGRlc2M6IHJlc3VsdC5jb250ZW50LAogICAgICB1cmw6IHJlc3VsdC51cmwKICAgIH07CiAgfSk7Cn07Cgpjb25zdCBtZCA9IHN0cmluZyA9PiB7CiAgY29uc3QgbWQgPSBuZXcgTWFya2Rvd25JdCh7IGh0bWw6IHRydWUsIGxpbmtpZnk6IHRydWUgfSk7CiAgcmV0dXJuIGA8ZGl2PiR7bWQucmVuZGVySW5saW5lKHN0cmluZyl9PC9kaXY+YDsKfTsKCmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgcXVlcnk6IHsKICAgICAgdHlwZTogU3RyaW5nCiAgICB9LAogICAgc2l0ZTogewogICAgICB0eXBlOiBPYmplY3QKICAgIH0sCiAgICBhbGdvbGlhQ29uZmlnOiB7CiAgICAgIHR5cGU6IE9iamVjdAogICAgfSwKICAgIGJhc2U6IHsKICAgICAgZGVmYXVsdDogIi9tYXN0ZXIvIgogICAgfQogIH0sCiAgY29tcG9uZW50czogewogICAgU2VjdGlvbklucHV0LAogICAgU2VjdGlvblNob3J0Y3V0cywKICAgIFNlY3Rpb25SZXN1bHRzRW1wdHksCiAgICBTZWN0aW9uUmVzdWx0c0xpc3QKICB9LAogIGRhdGE6IGZ1bmN0aW9uKCkgewogICAgcmV0dXJuIHsKICAgICAgcmVzdWx0czogbnVsbCwKICAgICAgZnVzZTogbnVsbCwKICAgICAgYWxnb2xpYTogbnVsbCwKICAgICAgc2VsZWN0ZWRJbmRleDogbnVsbCwKICAgICAgc2VhcmNoSW5GbGlnaHQ6IG51bGwKICAgIH07CiAgfSwKICB3YXRjaDogewogICAgcXVlcnkoKSB7CiAgICAgIHRoaXMuc2VhcmNoKHRoaXMucXVlcnkpOwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHJlc3VsdHNBdmFpbGFibGUoKSB7CiAgICAgIHJldHVybiB0aGlzLnJlc3VsdHMgJiYgdGhpcy5yZXN1bHRzLmxlbmd0aCA+IDA7CiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgaG90a2V5cygiZG93biIsIGUgPT4gewogICAgICB0aGlzLmlucHV0S2V5cHJlc3MoZSk7CiAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgIH0pOwogICAgaG90a2V5cygidXAiLCBlID0+IHsKICAgICAgdGhpcy5pbnB1dEtleXByZXNzKGUpOwogICAgICBlLnByZXZlbnREZWZhdWx0KCk7CiAgICB9KTsKICAgIGhvdGtleXMoImVudGVyIiwgZSA9PiB7CiAgICAgIHRoaXMuaW5wdXRLZXlwcmVzcyhlKTsKICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgfSk7CiAgICB0aGlzLmFsZ29saWEgPSBhbGdvbGlhSW5pdCh0aGlzLmFsZ29saWFDb25maWcpOwogICAgdGhpcy5mdXNlID0gZnVzZUluaXQodGhpcy5zaXRlKTsKICAgIHRoaXMuc2VhcmNoKHRoaXMucXVlcnkpOwogIH0sCiAgbWV0aG9kczogewogICAgcXVlcnlTZXQoc3RyaW5nKSB7CiAgICAgIHRoaXMuJGVtaXQoInF1ZXJ5Iiwgc3RyaW5nKTsKICAgIH0sCiAgICBpbnB1dEtleXByZXNzKGUpIHsKICAgICAgaWYgKGUua2V5KSB7CiAgICAgICAgaWYgKGUua2V5ID09PSAiQXJyb3dVcCIpIHRoaXMuc2VsZWN0UmVzdWx0KC0xKTsKICAgICAgICBpZiAoZS5rZXkgPT09ICJBcnJvd0Rvd24iKSB0aGlzLnNlbGVjdFJlc3VsdCgrMSk7CiAgICAgICAgaWYgKGUua2V5ID09PSAiRW50ZXIiKSB7CiAgICAgICAgICB0aGlzLiRlbWl0KCJzZWxlY3QiLCB7IC4uLnRoaXMucmVzdWx0c1t0aGlzLnNlbGVjdGVkSW5kZXhdIH0pOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIHNlbGVjdFJlc3VsdChkZWx0YSkgewogICAgICBjb25zdCBpbmRleCA9IHRoaXMuc2VsZWN0ZWRJbmRleCwKICAgICAgICBpbmRleE5ldyA9IGluZGV4ICsgZGVsdGEsCiAgICAgICAgaXNWYWxpZEluZGV4ID0gTnVtYmVyLmlzSW50ZWdlcihpbmRleCkgJiYgaW5kZXggPj0gMDsKICAgICAgaWYgKGlzVmFsaWRJbmRleCkgewogICAgICAgIHRoaXMuc2VsZWN0ZWRJbmRleCA9IGluZGV4TmV3ID49IDAgPyBpbmRleE5ldyA6IDA7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5zZWxlY3RlZEluZGV4ID0gMDsKICAgICAgfQogICAgfSwKICAgIGFzeW5jIHNlYXJjaChxdWVyeSkgewogICAgICB0aGlzLnNlYXJjaEluRmxpZ2h0ID0gdHJ1ZTsKICAgICAgaWYgKCFxdWVyeSkgcmV0dXJuOwogICAgICBpZiAodGhpcy5hbGdvbGlhKSB7CiAgICAgICAgY29uc3QgcGFyYW1zID0geyBoaXRzUGVyUGFnZTogMTAwIH07CiAgICAgICAgY29uc3QgcmVzdWx0cyA9IChhd2FpdCB0aGlzLmFsZ29saWEuc2VhcmNoKHF1ZXJ5LCBwYXJhbXMpKS5oaXRzOwogICAgICAgIHRoaXMucmVzdWx0cyA9IGFsZ29saWFGb3JtYXQocmVzdWx0cyk7CiAgICAgICAgdGhpcy5zZWFyY2hJbkZsaWdodCA9IGZhbHNlOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMucmVzdWx0cyA9IGZ1c2VGb3JtYXQodGhpcy5mdXNlLnNlYXJjaChxdWVyeSkpOwogICAgICB9CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["SectionSearch.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"SectionSearch.vue","sourceRoot":"node_modules/@cosmos-ui/vue/src/SectionSearch","sourcesContent":["<template>\n  <div>\n    <div class=\"container\">\n      <section-input\n        :value=\"query\"\n        @input=\"querySet($event)\"\n        @keypress=\"inputKeypress\"\n        @cancel=\"$emit('cancel', false)\"\n      />\n      <div class=\"results\">\n        <section-results-list\n          v-if=\"query && resultsAvailable\"\n          @activate=\"$emit('select', $event)\"\n          :selected=\"selectedIndex\"\n          :value=\"results\"\n          :base=\"base\"\n        />\n        <section-shortcuts v-else-if=\"!query\"/>\n        <section-results-empty\n          v-else-if=\"query && !resultsAvailable && !searchInFlight\"\n          @query=\"querySet($event)\"\n          :query=\"query\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\nstrong {\n  font-weight: 500;\n}\n.container {\n  height: 100vh;\n  overflow-y: scroll;\n  -webkit-overflow-scrolling: touch;\n  flex-direction: column;\n  background-color: #f8f9fc;\n  font-family: var(--ds-font-family);\n}\n.results {\n  padding-bottom: 3rem;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n}\n</style>\n\n<script>\nimport Fuse from \"fuse.js\";\nimport MarkdownIt from \"markdown-it\";\nimport hotkeys from \"hotkeys-js\";\nimport SectionShortcuts from \"./SectionShortcuts.vue\";\nimport SectionResultsEmpty from \"./SectionResultsEmpty.vue\";\nimport SectionInput from \"./SectionInput.vue\";\nimport SectionResultsList from \"./SectionResultsList.vue\";\nimport algoliasearch from \"algoliasearch\";\n\nconst algoliaInit = config => {\n  if (config && config.id && config.key && config.index) {\n    const algoliaClient = algoliasearch(config.id, config.key);\n    const algolia = algoliaClient.initIndex(config.index);\n    return algolia;\n  } else {\n    return false;\n  }\n};\n\nconst fuseInit = site => {\n  return new Fuse(\n    site.pages\n      .map(doc => {\n        return {\n          key: doc.key,\n          title: doc.title,\n          headers: doc.headers && doc.headers.map(h => h.title).join(\" \"),\n          description: doc.frontmatter.description,\n          path: doc.path\n        };\n      })\n      .filter(doc => {\n        return !(\n          Object.keys(site.locales || {}).indexOf(doc.path.split(\"/\")[1]) > -1\n        );\n      }),\n    {\n      keys: [\"title\", \"headers\", \"description\", \"path\"],\n      shouldSort: true,\n      includeScore: true,\n      includeMatches: true\n    }\n  );\n};\n\nconst fuseFormat = results => {\n  return results.map(result => {\n    return {\n      title: result.item && result.item.title && md(result.item.title),\n      desc:\n        result.item && result.item.description && md(result.item.description),\n      id: result.item && result.item.key\n    };\n  });\n};\n\nconst algoliaFormat = results => {\n  return results.map(result => {\n    const title = Object.values(result.hierarchy)\n      .filter(e => e)\n      .map(e => e.replace(/^#/, \"\"))\n      .join(\" › \");\n    return {\n      title,\n      desc: result.content,\n      url: result.url\n    };\n  });\n};\n\nconst md = string => {\n  const md = new MarkdownIt({ html: true, linkify: true });\n  return `<div>${md.renderInline(string)}</div>`;\n};\n\nexport default {\n  props: {\n    query: {\n      type: String\n    },\n    site: {\n      type: Object\n    },\n    algoliaConfig: {\n      type: Object\n    },\n    base: {\n      default: \"/master/\"\n    }\n  },\n  components: {\n    SectionInput,\n    SectionShortcuts,\n    SectionResultsEmpty,\n    SectionResultsList\n  },\n  data: function() {\n    return {\n      results: null,\n      fuse: null,\n      algolia: null,\n      selectedIndex: null,\n      searchInFlight: null\n    };\n  },\n  watch: {\n    query() {\n      this.search(this.query);\n    }\n  },\n  computed: {\n    resultsAvailable() {\n      return this.results && this.results.length > 0;\n    }\n  },\n  mounted() {\n    hotkeys(\"down\", e => {\n      this.inputKeypress(e);\n      e.preventDefault();\n    });\n    hotkeys(\"up\", e => {\n      this.inputKeypress(e);\n      e.preventDefault();\n    });\n    hotkeys(\"enter\", e => {\n      this.inputKeypress(e);\n      e.preventDefault();\n    });\n    this.algolia = algoliaInit(this.algoliaConfig);\n    this.fuse = fuseInit(this.site);\n    this.search(this.query);\n  },\n  methods: {\n    querySet(string) {\n      this.$emit(\"query\", string);\n    },\n    inputKeypress(e) {\n      if (e.key) {\n        if (e.key === \"ArrowUp\") this.selectResult(-1);\n        if (e.key === \"ArrowDown\") this.selectResult(+1);\n        if (e.key === \"Enter\") {\n          this.$emit(\"select\", { ...this.results[this.selectedIndex] });\n        }\n      }\n    },\n    selectResult(delta) {\n      const index = this.selectedIndex,\n        indexNew = index + delta,\n        isValidIndex = Number.isInteger(index) && index >= 0;\n      if (isValidIndex) {\n        this.selectedIndex = indexNew >= 0 ? indexNew : 0;\n      } else {\n        this.selectedIndex = 0;\n      }\n    },\n    async search(query) {\n      this.searchInFlight = true;\n      if (!query) return;\n      if (this.algolia) {\n        const params = { hitsPerPage: 100 };\n        const results = (await this.algolia.search(query, params)).hits;\n        this.results = algoliaFormat(results);\n        this.searchInFlight = false;\n      } else {\n        this.results = fuseFormat(this.fuse.search(query));\n      }\n    }\n  }\n};\n</script>"]}]}