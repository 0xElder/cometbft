{"remainingRequest":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/rfc/rfc-016-node-architecture.md?vue&type=template&id=7c30411a&","dependencies":[{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/rfc/rfc-016-node-architecture.md","mtime":1673295761290},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/cache-loader/dist/cjs.js","mtime":1673296285960},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1673296286086},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/cache-loader/dist/cjs.js","mtime":1673296285960},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/vue-loader/lib/index.js","mtime":1673296285952},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/@vuepress/markdown-loader/index.js","mtime":1673296286103}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PGgxIGlkPSJyZmMtMDE2LW5vZGUtYXJjaGl0ZWN0dXJlIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3JmYy0wMTYtbm9kZS1hcmNoaXRlY3R1cmUiPiM8L2E+IFJGQyAwMTY6IE5vZGUgQXJjaGl0ZWN0dXJlPC9oMT4KPGgyIGlkPSJjaGFuZ2Vsb2ciPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjY2hhbmdlbG9nIj4jPC9hPiBDaGFuZ2Vsb2c8L2gyPgo8dWw+CjxsaT5BcHJpbCA4LCAyMDIyOiBJbml0aWFsIGRyYWZ0IChAY213YXRlcnMpPC9saT4KPGxpPkFwcmlsIDE1LCAyMDIyOiBJbmNvcnBvcmF0aW9uIG9mIGZlZWRiYWNrPC9saT4KPC91bD4KPGgyIGlkPSJhYnN0cmFjdCI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNhYnN0cmFjdCI+IzwvYT4gQWJzdHJhY3Q8L2gyPgo8cD5UaGUgPGNvZGU+bm9kZTwvY29kZT4gcGFja2FnZSBpcyB0aGUgZW50cnkgcG9pbnQgaW50byB0aGUgVGVuZGVybWludCBjb2RlYmFzZSwgdXNlZCBib3RoIGJ5IHRoZSBjb21tYW5kIGxpbmUgYW5kIHByb2dyYW1hdGljYWxseSB0byBjcmVhdGUgdGhlIG5vZGVzIHRoYXQgbWFrZSB1cCBhIG5ldHdvcmsuIFRoZSBwYWNrYWdlIGhhcyBzdWZmZXJlZCB0aGUgbW9zdCBmcm9tIHRoZSBldm9sdXRpb24gb2YgdGhlIGNvZGViYXNlLCBiZWNvbWluZyBibG9hdGVkIGFzIGRldmVsb3BlcnMgY2xpcHBlZCBvbiB0aGVpciBiaXRzIG9mIGNvZGUgaGVyZSBhbmQgdGhlcmUgdG8gZ2V0IHdoYXRldmVyIGZlYXR1cmUgdGhleSB3YW50ZWQgd29ya2luZy48L3A+CjxwPlRoZSBkZWNpc2lvbnMgbWFkZSBhdCB0aGUgbm9kZSBsZXZlbCBoYXZlIHRoZSBiaWdnZXN0IGltcGFjdCB0byBzaW1wbGlmeWluZyB0aGUgcHJvdG9jb2xzIHdpdGhpbiB0aGVtLCB1bmxvY2tpbmcgYmV0dGVyIGludGVybmFsIGRlc2lnbnMgYW5kIG1ha2luZyBUZW5kZXJtaW50IG1vcmUgaW50dWl0aXZlIHRvIHVzZSBhbmQgZWFzaWVyIHRvIHVuZGVyc3RhbmQgZnJvbSB0aGUgb3V0c2lkZS4gV29yaywgaW4gbWlub3IgaW5jcmVtZW50cywgaGFzIGFscmVhZHkgYmVndW4gb24gdGhpcyBzZWN0aW9uIG9mIHRoZSBjb2RlYmFzZS4gVGhpcyBkb2N1bWVudCBleGlzdHMgdG8gc3BhcmsgZm9ydGggdGhlIG5lY2Vzc2FyeSBkaXNjb3Vyc2UgaW4gYSBmZXcgcmVsYXRlZCBhcmVhcyB0aGF0IHdpbGwgaGVscCB0aGUgdGVhbSB0byBjb252ZXJnZSBvbiB0aGUgbG9uZyB0ZXJtIG1ha2V1cCBvZiB0aGUgbm9kZS48L3A+CjxoMiBpZD0iZGlzY3Vzc2lvbiI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNkaXNjdXNzaW9uIj4jPC9hPiBEaXNjdXNzaW9uPC9oMj4KPHA+VGhlIGZvbGxvd2luZyBpcyBhIGxpc3Qgb2YgcG9pbnRzIG9mIGRpc2N1c3Npb24gYXJvdW5kIHRoZSBhcmNoaXRlY3R1cmUgb2YgdGhlIG5vZGU6PC9wPgo8aDMgaWQ9ImRlcGVuZGVuY3ktdHJlZSI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNkZXBlbmRlbmN5LXRyZWUiPiM8L2E+IERlcGVuZGVuY3kgVHJlZTwvaDM+CjxwPlRoZSBub2RlIG9iamVjdCBpcyBjdXJyZW50bHkgc3R1ZmZlZCB3aXRoIGV2ZXJ5IGNvbXBvbmVudCB0aGF0IHBvc3NpYmx5IGV4aXN0cyB3aXRoaW4gVGVuZGVybWludC4gSW4gdGhlIGNvbnN0cnVjdG9yLCBhbGwgb2JqZWN0cyBhcmUgYnVpbHQgYW5kIGludGVybGFpZCB3aXRoIG9uZSBhbm90aGVyIGluIHNvbWUgYXdrd2FyZCBkYW5jZS4gTXkgZ3VpZGluZyBwcmluY2lwbGUgaXMgdGhhdCB0aGUgbm9kZSBzaG91bGQgb25seSBiZSBtYWRlIHVwIG9mIHRoZSBjb21wb25lbnRzIHRoYXQgaXQgd2FudHMgdG8gaGF2ZSBkaXJlY3QgY29udHJvbCBvZiB0aHJvdWdob3V0IGl0cyBsaWZlLiBUaGUgbm9kZSBpcyBhIHNlcnZpY2Ugd2hpY2ggY3VycmVudGx5IGhhcyB0aGUgcHVycG9zZSBvZiBzdGFydGluZyBvdGhlciBzZXJ2aWNlcyB1cCBpbiBhIHBhcnRpY3VsYXIgb3JkZXIgYW5kIHN0b3BwaW5nIHRoZW0gYWxsIHdoZW4gY29tbWFuZGVkIHRvIGRvIHNvLiBIb3dldmVyLCB0aGVyZSBhcmUgbWFueSBzZXJ2aWNlcyB3aGljaCBhcmUgbm90IGRpcmVjdCBkZXBlbmRlbnRzIGkuZS4gdGhlIG1lbXBvb2wgYW5kIGV2aWRlbmNlIHNlcnZpY2VzIHNob3VsZCBvbmx5IGJlIHdvcmtpbmcgd2hlbiB0aGUgY29uc2Vuc3VzIHNlcnZpY2UgaXMgcnVubmluZy4gSSBwcm9wb3NlIHRvIGZvcm0gbW9yZSBvZiBhIGhpZXJhcmNoaWNhbCBzdHJ1Y3R1cmUgb2YgZGVwZW5kZW50cyB3aGljaCBmb3JjZXMgdXMgdG8gYmUgY2xlYXIgYWJvdXQgdGhlIHJlbGF0aW9ucyB0aGF0IG9uZSBjb21wb25lbnQgaGFzIHRvIHRoZSBvdGhlci4gTW9yZSBjb25jcmV0ZWx5LCBJIHByb3Bvc2UgdGhlIGZvbGxvd2luZyBkZXBlbmRlbmN5IHRyZWU6PC9wPgo8cD48aW1nIHNyYz0iLi9pbWFnZXMvbm9kZS1kZXBlbmRlbmN5LXRyZWUuc3ZnIiBhbHQ9Im5vZGUgZGVwZW5kZW5jeSB0cmVlIj48L3A+CjxwPk1hbnkgb2YgdGhlIGZ1cnRoZXIgZGlzY3Vzc2lvbiB0b3BpY3MgY2lyY2xlIGJhY2sgdG8gdGhpcyByZXByZXNlbnRhdGlvbiBvZiB0aGUgbm9kZS48L3A+CjxwPkl0J3MgYWxzbyBpbXBvcnRhbnQgdG8gZGlzdGluZ3Vpc2ggdHdvIGRpbWVuc2lvbnMgd2hpY2ggbWF5IHJlcXVpcmUgZGlmZmVyZW50IGNoYXJhY3RlcmlzdGljcyBvZiB0aGUgYXJjaGl0ZWN0dXJlLiBUaGVyZSBpcyB0aGUgc3RhcnRpbmcgYW5kIHN0b3BwaW5nIG9mIHNlcnZpY2VzIGFuZCB0aGVpciBnZW5lcmFsIGxpZmVjeWNsZSBtYW5hZ2VtZW50LiBXaGF0IGlzIHRoZSBjb3JyZWN0IG9yZGVyIG9mIG9wZXJhdGlvbnMgdG8gc3RhcnRpbmcgYSBub2RlIGZvciBleGFtcGxlLiBUaGVuIHRoZXJlIGlzIHRoZSBxdWVzdGlvbiBvZiB0aGUgbmVlZHMgb2YgdGhlIHNlcnZpY2UgZHVyaW5nIGFjdHVhbCBvcGVyYXRpb24uIFRoZW4gdGhlcmUgaXMgdGhlIHF1ZXN0aW9uIG9mIHdoYXQgcmVzb3VyY2VzIGVhY2ggc2VydmljZSBuZWVkcyBhY2Nlc3MgdG8gZHVyaW5nIGl0cyBvcGVyYXRpb24uIFNvbWUgbmVlZCB0byBwdWJsaXNoIGV2ZW50cywgb3RoZXJzIG5lZWQgYWNjZXNzIHRvIGRhdGEgc3RvcmVzLCBhbmQgc28gZm9ydGguPC9wPgo8cD5BbiBhbHRlcm5hdGl2ZSBtb2RlbCBhbmQgb25lIHRoYXQgcGVyaGFwcyBiZXR0ZXIgc3VpdHMgdGhlIGxhdHRlciBvZiB0aGVzZSBkaW1lbnNpb25zIGlzIHRoZSBub3Rpb24gb2YgYW4gaW50ZXJuYWwgbWVzc2FnZSBwYXNzaW5nIHN5c3RlbS4gRWl0aGVyIHRoZSBldmVudHMgYnVzIG9yIHAycCBsYXllciBjb3VsZCBzZXJ2ZSBhcyBhIHZpYWJsZSB0cmFuc3BvcnQuIFRoaXMgd291bGQgZXNzZW50aWFsbHkgYWxsb3cgYWxsIHNlcnZpY2VzIHRvIGNvbW11bmljYXRlIHdpdGggYW55IG90aGVyIHNlcnZpY2UgYW5kIGNvdWxkIHBlcmhhcHMgcHJvdmlkZSBhIHNvbHV0aW9uIHRvIHRoZSBjb29yZGluYXRpb24gcHJvYmxlbSAocHJlc2VudGVkIGJlbG93KSB3aXRob3V0IGEgY2VudHJhbGl6ZWQgY29vcmRpbmF0b3IuIFRoZSBvdGhlciBtYWluIGFkdmFudGFnZSBpcyB0aGF0IHN1Y2ggYSBzeXN0ZW0gd291bGQgYmUgbW9yZSByb2J1c3QgdG8gZGlzcnVwdGlvbnMgYW5kIGNoYW5nZXMgdG8gdGhlIGNvZGUgd2hpY2ggbWF5IG1ha2UgYSBoaWVyYXJjaGljYWwgc3RydWN0dXJlIHF1aWNrbHkgb3V0ZGF0ZWQgYW5kIHN1Ym9wdGltYWwuIFRoZSBhZGRpdGlvbiBvZiBtZXNzYWdlIHJvdXRpbmcgaXMgYW4gYWRkZWQgY29tcGxleGl0eSB0byBpbXBsZW1lbnQsIHdpbGwgaW5jcmVhc2UgdGhlIGRlZ3JlZSBvZiBhc3luY2hyb25pY2l0eSBpbiB0aGUgc3lzdGVtIGFuZCBtYXkgbWFrZSBpdCBoYXJkZXIgdG8gZGVidWcgcHJvYmxlbXMgdGhhdCBhcmUgYWNyb3NzIG11bHRpcGxlIHNlcnZpY2VzLjwvcD4KPGgzIGlkPSJjb29yZGluYXRpb24tb2Ytc3RhdGUtYWR2YW5jaW5nLW1lY2hhbmlzbXMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjY29vcmRpbmF0aW9uLW9mLXN0YXRlLWFkdmFuY2luZy1tZWNoYW5pc21zIj4jPC9hPiBDb29yZGluYXRpb24gb2YgU3RhdGUgQWR2YW5jaW5nIE1lY2hhbmlzbXM8L2gzPgo8cD5BZHZhbmNlbWVudCBvZiBzdGF0ZSBpbiBUZW5kZXJtaW50IGlzIHNpbXBseSBkZWZpbmVkIGluIGhlaWdodHM6IElmIHRoZSBub2RlIGlzIGF0IGhlaWdodCBuLCBob3cgZG9lcyBpdCBnZXQgdG8gaGVpZ2h0IG4gKyAxIGFuZCBzbyBvbi4gQmFzZWQgb24gdGhpcyBkZWZpbml0aW9uIHdlIGhhdmUgdGhyZWUgY29tcG9uZW50cyB0aGF0IGhlbHAgYSBub2RlIHRvIGFkdmFuY2UgaW4gaGVpZ2h0OiBjb25zZW5zdXMsIHN0YXRlc3luYyBhbmQgYmxvY2tzeW5jLiBUaGUgd2F5IHRoZXNlIGNvbXBvbmVudHMgYmVoYXZlIGN1cnJlbnRseSBpcyB2ZXJ5IHRpZ2h0bHkgY291cGxlZCB0byBvbmUgYW5vdGhlciB3aXRoIHJlZmVyZW5jZXMgcGFzc2VkIGJhY2sgYW5kIGZvcnRoLiBNeSBndWlkaW5nIHByaW5jaXBsZSBpcyB0aGF0IGVhY2ggb2YgdGhlc2Ugc2hvdWxkIGJlIGFibGUgdG8gb3BlcmF0ZSBjb21wbGV0ZWx5IGluZGVwZW5kZW50bHkgb2YgZWFjaCBvdGhlciwgZS5nLiBhIG5vZGUgc2hvdWxkIGJlIGFibGUgdG8gcnVuIHNvbGVseSBibG9ja3N5bmMgaW5kZWZpbml0ZWx5LiBUaGVyZSBoYXZlIGJlZW4gc2V2ZXJhbCBpZGVhcyBzdWdnZXN0ZWQgdG93YXJkcyBpbXByb3ZpbmcgdGhpcyBmbG93LiBJJ3ZlIGJlZW4gbGVhbmluZyBzdHJvbmdseSB0b3dhcmRzIGEgY2VudHJhbGl6ZWQgc3lzdGVtLCB3aGVyZWJ5IGFuIG9yY2hlc3RyYXRvciAoaW4gdGhpcyBjYXNlIHRoZSBub2RlKSBkZWNpZGVzIHdoYXQgc2VydmljZXMgdG8gc3RhcnQgYW5kIHN0b3AuCkluIGEgZGVjZW50cmFsaXplZCBtZXNzYWdlIHBhc3Npbmcgc3lzdGVtLCBpbmRpdmlkdWFsIHNlcnZpY2VzIG1ha2UgdGhlaXIgZGVjaXNpb24gYmFzZWQgdXBvbiBhICZxdW90O2dsb2JhbCZxdW90OyBzaGFyZWQgc3RhdGUgaS5lLiBpZiBteSBoZWlnaHQgaXMgbGVzcyB0aGF0IDEwIGJlbG93IHRoZSBhdmVyYWdlIHBlZXIgaGVpZ2h0LCBJIGFzIGNvbnNlbnN1cywgc2hvdWxkIHN0b3AgKGtub3dpbmcgdGhhdCBibG9ja3N5bmMgaGFzIHRoZSBzYW1lIGNvbmRpdGlvbiBmb3Igc3RhcnRpbmcpLiBBcyB0aGUgZXhhbXBsZSBpbGx1c3RyYXRlcywgZWFjaCBtZWNoYW5pc20gd2lsbCBzdGlsbCBuZWVkIHRvIGJlIGF3YXJlIG9mIHRoZSBwcmVzZW5jZSBvZiBvdGhlciBtZWNoYW5pc21zLjwvcD4KPHA+Qm90aCBjZW50cmFsaXplZCBhbmQgZGVjZW50cmFsaXplZCBzeXN0ZW1zIHJlbHkgb24gdGhlIGNvbW11bmljYXRpb24gb2YgdGhlIG5vZGVzIGN1cnJlbnQgaGVpZ2h0IGFuZCBhIGp1ZGdlbWVudCBvbiB0aGUgaGVpZ2h0IG9mIHRoZSBoZWFkIG9mIHRoZSBjaGFpbi4gVGhlIGxhdHRlciwgd29ya2luZyBvdXQgdGhlIGhlYWQgb2YgdGhlIGNoYWluLCBpcyBxdWl0ZSBhIGRpZmZpY3VsdCBjaGFsbGVuZ2UgYXMgdGhlaXIgaXMgbm90aGluZyBwcmV2ZW50aW5nIHRoZSBub2RlIGZyb20gYWN0aW5nIG1hbGljaW91c2x5IGFuZCBwcm92aWRpbmcgYSBkaWZmZXJlbnQgaGVpZ2h0LiBDdXJyZW50bHkgYm90aCBibG9ja3N5bmMsIGNvbnNlbnN1cyAoYW5kIHRvIGEgY2VydGFpbiBkZWdyZWUgc3RhdGVzeW5jKSwgaGF2ZSBwYXJhbGxlbCBzeXN0ZW1zIHdoZXJlIHBlZXJzIGNvbW11bmljYXRlIHRoZWlyIGhlaWdodC4gVGhpcyBjb3VsZCBiZSBzdHJlYW1saW5lZCB3aXRoIHRoZSBjb25zZW5zdXMgKG9yIGV2ZW4gdGhlIHAycCBsYXllciksIGJyb2FkY2FzdGluZyBwZWVyIGhlaWdodHMgYW5kIGVpdGhlciB0aGUgbm9kZSBvciB0aGUgb3RoZXIgc3RhdGUgYWR2YW5jaW5nIG1lY2hhbmlzbXMgYWN0aW5nIGFjY29yZGluZ2x5LjwvcD4KPHA+Q3VycmVudGx5LCB3aGVuIGEgbm9kZSBzdGFydHMsIGl0IHR1cm5zIG9uIGV2ZXJ5IHNlcnZpY2UgdGhhdCBpdCBpcyBhdHRhY2hlZCB0by4gVGhpcyBtZWFucyB0aGF0IHdoaWxlIGEgbm9kZSBpcyBzeW5jaW5nIHVwIGJ5IHJlcXVlc3RpbmcgYmxvY2tzLCBpdCBpcyBhbHNvIHJlY2VpdmluZyB0cmFuc2FjdGlvbnMgYW5kIHZvdGVzLCBhcyB3ZWxsIGFzIHNuYXBzaG90IGFuZCBibG9jayByZXF1ZXN0cy4gVGhpcyBpcyBhIG5lZWRsZXNzIHVzZSBvZiBiYW5kd2lkdGguIEFuIGltcGxlbWVudGF0aW9uIG9mIGFuIG9yY2hlc3RyYXRvciwgcmVnYXJkbGVzcyBvZiB3aGV0aGVyIHRoZSBzeXN0ZW0gaXMgaGVpcmFjaGljYWwgb3Igbm90LCBzaG91bGQgbG9vayB0byBiZSBhYmxlIHRvIG9wZW4gYW5kIGNsb3NlIGNoYW5uZWxzIGR5bmFtaWNhbGx5IGFuZCBlZmZlY3RpdmVseSBicm9hZGNhc3Qgd2hpY2ggc2VydmljZXMgaXQgaXMgcnVubmluZy4gSW50ZWdyYXRpbmcgdGhpcyB3aXRoIHNlcnZpY2UgZGlzY292ZXJ5IG1heSBhbHNvIGxlYWQgdG8gYSBiZXR0ZXIgc2VyaXZjZSB0byBwZWVycy48L3A+CjxwPlRoZSBvcmNoZXN0cmF0b3IgYWxsb3dzIGZvciBzb21lIGRlYWwgb2YgdmFyaWFibGl0eSBpbiBob3cgYSBub2RlIGlzIGNvbnN0cnVjdGVkLiBEb2VzIGl0IGp1c3QgcnVuIGJsb2Nrc3luYywgc2hhZG93aW5nIHRoZSBoZWFkIG9mIHRoZSBjaGFpbiBhbmQgYmUgaGlnaGx5IGF2YWlsYWJsZSBmb3IgcXVlcnlpbmcuIERvZXMgaXQgcmVseSBvbiBzdGF0ZSBzeW5jIGF0IGFsbD8gQW4gaW1wb3J0YW50IHF1ZXN0aW9uIHRoYXQgYXJpc2VzIGZyb20gdGhpcyBkeW5hbWljaXNtIGlzIHdlIGlkZWFsbHkgd2FudCB0byBlbmNvdXJhZ2Ugbm9kZXMgdG8gcHJvdmlkZSBhcyBtdWNoIG9mIHRoZWlyIHJlc291cmNlcyBhcyBwb3NzaWJsZSBzbyB0aGF0IHRoZWlyIGlzIGEgaGVhbHRoeSBhbW91bnQgb2YgcHJvdmlkZXJzIHRvIGNvbnN1bWVycy4gRG8gd2UgbWFrZSBhbGwgc2VydmljZXMgY29tcHVsc29yeSBvciBhbGxvdyBmb3IgdGhlbSB0byBiZSBkaXNhYmxlZD8gQXJndWFibHkgaXQncyBwb3NzaWJsZSB0aGF0IGEgdXNlciBmb3JrcyB0aGUgY29kZWJhc2UgYW5kIHJpcHMgb3V0IHRoZSBibG9ja3N5bmMgY29kZSBiZWNhdXNlIHRoZXkgd2FudCB0byByZWR1Y2UgYmFuZHdpZHRoIHNvIHRoaXMgaXMgbW9yZSBhIHF1ZXN0aW9uIG9mIGhvdyBlYXN5IGRvIHdlIHdhbnQgdG8gbWFrZSB0aGlzIGZvciB1c2Vycy48L3A+CjxoMyBpZD0iYmxvY2stZXhlY3V0b3IiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjYmxvY2stZXhlY3V0b3IiPiM8L2E+IEJsb2NrIEV4ZWN1dG9yPC9oMz4KPHA+VGhlIGJsb2NrIGV4ZWN1dG9yIGlzIGFuIGltcG9ydGFudCBjb21wb25lbnQgdGhhdCBpcyBjdXJyZW50bHkgdXNlZCBieSBib3RoIGNvbnNlbnN1cyBhbmQgYmxvY2tzeW5jIHRvIGV4ZWN1dGUgdHJhbnNhY3Rpb25zIGFuZCB1cGRhdGUgYXBwbGljYXRpb24gc3RhdGUuIFByaW5jaXBhbGx5LCBJIHRoaW5rIGl0IHNob3VsZCBiZSB0aGUgb25seSBjb21wb25lbnQgdGhhdCBjYW4gd3JpdGUgKGFuZCBwb3NzaWJseSBldmVuIHJlYWQpIHRoZSBibG9jayBhbmQgc3RhdGUgc3RvcmVzLCBhbmQgd2Ugc2hvdWxkIGNsZWFuIHVwIG90aGVyIGRpcmVjdCBkZXBlbmRlbmNpZXMgb24gdGhlIHN0b3JhZ2UgZW5naW5lIGlmIHdlIGNhbi4gVGhpcyB3b3VsZCBtZWFuOjwvcD4KPHVsPgo8bGk+VGhlIHJlYWN0b3JzIENvbnNlbnN1cywgQmxvY2tTeW5jIGFuZCBTdGF0ZVN5bmMgc2hvdWxkIGFsbCBpbXBvcnQgdGhlIGV4ZWN1dG9yIGZvciBhZHZhbmNpbmcgc3RhdGUgaWUuICA8Y29kZT5BcHBseUJsb2NrPC9jb2RlPiBhbmQgPGNvZGU+Qm9vdHN0cmFwU3RhdGU8L2NvZGU+LjwvbGk+CjxsaT5QcnVuaW5nIHNob3VsZCBhbHNvIGJlIGEgY29uY2VybiBvZiB0aGUgYmxvY2sgZXhlY3V0b3IgYXMgd2VsbCBhcyA8Y29kZT5GaW5hbGl6ZUJsb2NrPC9jb2RlPiBhbmQgPGNvZGU+Q29tbWl0PC9jb2RlPi4gVGhpcyBjYW4gc2ltcGxpZnkgY29uc2Vuc3VzIHRvIGZvY3VzIGp1c3Qgb24gdGhlIGNvbnNlbnN1cyBwYXJ0LjwvbGk+CjwvdWw+CjxoMyBpZD0idGhlLWludGVycHJvY2Vzcy1jb21tdW5pY2F0aW9uLXN5c3RlbXMtcnBjLXAycC1hYmNpLWFuZC1ldmVudHMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjdGhlLWludGVycHJvY2Vzcy1jb21tdW5pY2F0aW9uLXN5c3RlbXMtcnBjLXAycC1hYmNpLWFuZC1ldmVudHMiPiM8L2E+IFRoZSBJbnRlcnByb2Nlc3MgY29tbXVuaWNhdGlvbiBzeXN0ZW1zOiBSUEMsIFAyUCwgQUJDSSwgYW5kIEV2ZW50czwvaDM+CjxwPlRoZSBzY2hlbWF0aWMgc3VwcGxpZWQgYWJvdmUgc2hvd3MgdGhlIHJlbGF0aW9ucyBiZXR3ZWVuIHRoZSBkaWZmZXJlbnQgc2VydmljZXMsIHRoZSBub2RlLCB0aGUgYmxvY2sgZXhlY3V0b3IsIGFuZCB0aGUgc3RvcmFnZSBsYXllci4gUmVwcmVzZW50ZWQgYXMgY29sb3JlZCBkb3RzIGFyZSB0aGUgY29tcG9uZW50cyByZXNwb25zaWJsZSBmb3IgZGlmZmVyZW50IHJvbGVzIG9mIGludGVycHJvY2VzcyBjb21tdW5pY2F0aW9uIChJUEMpLiBUaGVzZSBjb21wb25lbnRzIHBlcm1lYXRlIHRocm91Z2hvdXQgdGhlIGNvZGUgYmFzZSwgc2VlcGluZyBpbnRvIG1vc3Qgc2VydmljZXMuIFdoYXQgY2FuIHByb3ZpZGUgcG93ZXJmdWwgZnVuY3Rpb25hbGl0eSBvbiBvbmUgaGFuZCBjYW4gYWxzbyBiZWNvbWUgYSB0d2lzdGVkIHZpbmUsIGNyZWF0aW5nIG1lc3N5IGNvcm5lciBjYXNlcyBhbmQgY29udm9sdXRpbmcgdGhlIHByb3RvY29scyB0aGVtc2VsdmVzLiBBIGxvdCBvZiB0aGUgdGhpbmtpbmcgYXJvdW5kCmhvdyB3ZSB3YW50IG91ciBJUEMgc3lzdGVucyB0byBmdW5jdGlvbiBoYXMgYmVlbiBzdW1tYXJpc2VkIGluIHRoaXMgPFJvdXRlckxpbmsgdG89Ii9yZmMvcmZjLTAwMi1pcGMtZWNvc3lzdGVtLmh0bWwiPlJGQzwvUm91dGVyTGluaz4uIEluIHRoaXMgc2VjdGlvbiwgSSdkIGxpa2UgdG8gZm9jdXMgdGhlIHJlYWRlciBvbiB0aGUgcmVsYXRpb24gYmV0d2VlbiB0aGUgSVBDIGFuZCB0aGUgbm9kZSBzdHJ1Y3R1cmUuIEFuIGlzc3VlIHRoYXQgaGFzIGZyZXF1ZW50bHkgcmlzZW4gaXMgdGhhdCB0aGUgUlBDIGhhcyBjb250cm9sIG9mIHRoZSBjb21wb25lbnRzIHdoZXJlIGl0IHN0cmlrZXMgbWUgYXMgYmVpbmcgbW9yZSBsb2dpY2FsIGZvciB0aGUgY29tcG9uZW50IHRvIGRpY3RhdGUgdGhlIGluZm9ybWF0aW9uIHRoYXQgaXMgZW1pdHRlZC9hdmFpbGFibGUgYW5kIHRoZSBrbm9icyBpdCB3aXNoZXMgdG8gZXhwb3NlLiBUaGUgUlBDIGlzIGFsc28gaW5leHRyaWNhYmx5IHRpZWQgdG8gdGhlIG5vZGUgaW5zdGFuY2UgYW5kIGhhcyBzaXR1YXRpb25zIHdoZXJlIGl0IGlzIHBhc3NlZCBwb2ludGVycyBkaXJlY3RseSB0byB0aGUgc3RvcmFnZSBlbmdpbmUgYW5kIG90aGVyIGNvbXBvbmVudHMuPC9wPgo8cD5JIGFtIGN1cnJlbnRseSBjb252aW5jZWQgb2YgdGhlIGFwcHJvYWNoIHRoYXQgdGhlIHAycCBsYXllciB0YWtlcyBhbmQgd291bGQgbGlrZSB0byBzZWUgb3RoZXIgSVBDIGNvbXBvbmVudHMgZm9sbG93IHN1aXQuIFRoaXMgd291bGQgbWVhbiB0aGF0IHRoZSBSUEMgYW5kIGV2ZW50cyBzeXN0ZW0gd291bGQgYmUgY29uc3RydWN0ZWQgaW4gdGhlIG5vZGUgeWV0IHdvdWxkIHBhc3MgdGhlIGFkZXF1YXRlIG1ldGhvZHMgdG8gcmVnaXN0ZXIgZW5kcG9pbnRzIGFuZCB0b3BpY3MgdG8gdGhlIHN1YiBjb21wb25lbnRzLiBGb3IgZXhhbXBsZSw8L3A+CgogICAgPHRtLWNvZGUtYmxvY2sgY2xhc3M9ImNvZGVibG9jayIgbGFuZ3VhZ2U9ImdvIiBiYXNlNjQ9Ikx5OGdUV1YwYUc5a2N5Qm1jbTl0SUhSb1pTQlNVRU1nWVc1a0lHVjJaVzUwSUdKMWN5QjBhR0YwSUhkdmRXeGtJR0psSUhCaGMzTmxaQ0JwYm5SdklIUm9aU0JqYjI1emRISjFZM1J2Y2lCdlppQmpiMjF3YjI1bGJuUnpJR3hwYTJVZ0puRjFiM1E3WTI5dWMyVnVjM1Z6Sm5GMWIzUTdDaTh2SUU1UFZFVTZJRlJvYVhNZ2FYTWdZU0JvZVhCdmRHaGxkR2xqWVd3Z1kyOXVjM1J5ZFdOMGFXOXVJSFJ2SUdOdmJuWmxlU0IwYUdVZ2FXUmxZUzRnUVc0Z1lXTjBkV0ZzSUdsdGNHeGxiV1Z1ZEdGMGFXOXVJRzFoZVNCa2FXWm1aWEl1Q21aMWJtTWdVbVZuYVhOMFpYSlNiM1YwWlNod1lYUm9JSE4wY21sdVp5d2dhR0Z1Wkd4bGNpQm1kVzVqS0doMGRIQXVVbVZ6Y0c5dWMyVlhjbWwwWlhJc0lDcG9kSFJ3TGxKbGNYVmxjM1FwS1FvS1puVnVZeUJTWldkcGMzUmxjbFJ2Y0dsaktHNWhiV1VnYzNSeWFXNW5LU0JGZG1WdWRGQjFZbXhwYzJobGNnb0tkSGx3WlNCRmRtVnVkRkIxWW14cGMyaGxjaUJtZFc1aklDaGpiMjUwWlhoMExrTnZiblJsZUhRc0lIUjVjR1Z6TGtWMlpXNTBSR0YwWVN3Z1cxMWhZbU5wTGtWMlpXNTBLUW89Ij48L3RtLWNvZGUtYmxvY2s+CiAgICA8cD5UaGlzIHdvdWxkIGdpdmUgdGhlIGNvbXBvbmVudHMgY29udHJvbCB0byB0aGUgaW5mb3JtYXRpb24gdGhleSB3YW50IHRvIGV4cG9zZSBhbmQga2VlcCBhbGwgcmVsZXZhbnQgbG9naWMgd2l0aGluIHRoYXQgcGFja2FnZS4gSXQgYWNjb21vZGF0ZXMgbW9yZSB0byBhIGR5bmFtaWMgc3lzdGVtIHdoZXJlIHNlcnZpY2VzIGNhbiBzd2l0Y2ggb24gYW5kIG9mZi4gRWFjaCBjb21wb25lbnQgd291bGQgYWxzbyByZWNlaXZlIGFjY2VzcyB0byB0aGUgbG9nZ2VyIGFuZCBtZXRyaWNzIHN5c3RlbSBmb3IgaW50cm9zcGVjdGlvbiBhbmQgZGVidWdnYWJpbGl0eS48L3A+CjxoNCBpZD0iaXBjLXJ1YnJpYyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNpcGMtcnVicmljIj4jPC9hPiBJUEMgUnVicmljPC9oND4KPHA+SSdkIGxpa2UgdG8gYWltIHRvIHJlYWNoIGEgc3RhdGUgd2hlcmUgd2UgYXMgYSB0ZWFtIGhhdmUgZWl0aGVyIGFuIGltcGxpY2l0IG9yIGV4cGxpY2l0IHJ1YnJpYyB3aGljaCBjYW4gZGV0ZXJtaW5lLCBpbiB0aGUgZXZlbnQgb2Ygc29tZSBuZXcgbmVlZCB0byBjb21tdW5pY2F0ZSBpbmZvcm1hdGlvbiwgd2hhdCB0b29sIGl0IHNob3VsZCB1c2UgZm9yIGRvaW5nIHRoaXMuIEluIHRoZSBjYXNlIG9mIGludGVyIG5vZGUgY29tbXVuaWNhdGlvbiwgdGhpcyBpcyBvYnZpb3VzbHkgdGhlIHAycCBzdGFjayAod2l0aCBwZXJoYXBzIHRoZSBleGNlcHRpb24gb2YgdGhlIGxpZ2h0IGNsaWVudCkuIE1ldHJpY3MgYW5kIGxvZ2dpbmcgYWxzbyBoYXZlIGNsZWFyIHVzYWdlIHBhdHRlcm5zLiBSUEMgYW5kIHRoZSBldmVudHMgc3lzdGVtIGFyZSBsZXNzIGNsZWFyLiBUaGUgUlBDIGlzIHVzZWQgZm9yIGRlYnVnZ2luZyBkYXRhIGFuZCBmaW5lIHR1bmVkIG9wZXJhdG9yIGNvbnRyb2wgYXMgaXQgaXMgZm9yIGdlbmVyYWwgcHVibGljIHF1ZXJ5aW5nIGFuZCB0cmFuc2FjdGlvbiBzdWJtaXNzaW9uLiBUaGUgUlBDIGlzIGFsc28ga25vd24gdG8gaGF2ZSBiZWVuIHBsdW1iZWQgYmFjayBpbnRvIHRoZSBhcHBsaWNhdGlvbiBmb3IgaGlzdG9yaWNhbCBxdWVyaWVzLiBUaGUgZXZlbnRzIHN5c3RlbSwgc2ltaWxhcmx5LCBpcyB1c2VkIGZvciBjb25zdW1pbmcgdHJhbnNhY3Rpb24gZXZlbnRzIGFzIGl0IGlzIGZvciB0aGUgdGVzdGluZyBvZiBjb25zZW5zdXMgc3RhdGUgdHJhbnNpdGlvbnMuPC9wPgo8cD5QcmluY2lwYWxseSwgSSB0aGluayB3ZSBzaG91bGQgbG9vayB0byBjaGFuZ2Ugb3VyIGxhbmd1YWdlIGF3YXkgZnJvbSB3aGF0IHRoZSBhY3R1YWwgdHJhbnNwb3J0IGlzIGFuZCBtb3JlIHRvd2FyZHMgd2hhdCBpdCdzIGJlaW5nIHVzZWQgZm9yIGFuZCB0byB3aG9tLiBXZSBjYWxsIGl0IGEgcGVlciB0byBwZWVyIGxheWVyIGFuZCBub3QgdGhlIHVuZGVybHlpbmcgdGNwIGNvbm5lY3Rpb24uIEluIHRoZSBzYW1lIHdheSwgd2Ugc2hvdWxkIGxvb2sgdG8gc3BsaXQgUlBDIGludG8gYW4gb3BlcmF0b3IgaW50ZXJmYWNlIChSUEMgSW50ZXJuYWwpLCBhIHB1YmxpYyBpbnRlcmZhY2UgKFJQQyBFeHRlcm5hbCkgYW5kIGEgYmlkaXJlY3Rpb25hbCBBQkNJLjwvcD4KPGgzIGlkPSJzZXBlcmF0aW9uLW9mLWNvbnN1bWVycy1hbmQtc3VwcGxpZXJzIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3NlcGVyYXRpb24tb2YtY29uc3VtZXJzLWFuZC1zdXBwbGllcnMiPiM8L2E+IFNlcGVyYXRpb24gb2YgY29uc3VtZXJzIGFuZCBzdXBwbGllcnM8L2gzPgo8cD5XaGVuIGEgc2VydmljZSBzdWNoIGFzIGJsb2Nrc3luYyBpcyB0dXJuZWQgb24sIGl0IGF1dG9tYXRpY2FsbHkgYmVnaW5zIHJlcXVlc3RpbmcgYmxvY2tzIHRvIHZlcmlmeSBhbmQgYXBwbHkgdGhlbSBhcyBpdCBhbHNvIHRyaWVzIHRvIHNlcnZlIHRoZW0gdG8gb3RoZXIgcGVlcnMgY2F0Y2hpbmcgdXAuIFdlIHNob3VsZCBsb29rIHRvIGRpc3Rpbmd1aXNoIHRoZXNlIHR3byBhc3BlY3RzOiBzdXBwbHlpbmcgb2YgaW5mb3JtYXRpb24gYW5kIGNvbnN1bWluZyBvZiBpbmZvcm1hdGlvbiBpbiBtYW55IG9mIHRoZXNlIGNvbXBvbmVudHMuIE1vcmUgY29uY3JldGVseSwgSSdkIHN1Z2dlc3Q6PC9wPgo8dWw+CjxsaT5UaGUgYmxvY2tzeW5jIGFuZCBzdGF0ZXN5bmMgc2VydmljZSwgaS5lLiBzdXBwbHlpbmcgaW5mb3JtYXRpb24gZm9yIHRob3NlIHRyeWluZyB0byBjYXRjaCB1cCBzaG91bGQgb25seSBzdGFydCBydW5uaW5nIG9uY2UgYSBub2RlIGhhcyBjYXVnaHQgdXAgaS5lLiBhZnRlciBydW5uaW5nIHRoZSBibG9ja3N5bmMgYW5kL29yIHN0YXRlIHN5bmMgPGVtPnByb2Nlc3NlczwvZW0+PC9saT4KPGxpPlRoZSBibG9ja3N5bmMgYW5kIHN0YXRlIHN5bmMgcHJvY2Vzc2VzIGhhdmUgZGVmaW5lZCB0ZXJtaW5hdGlvbiBjbGF1c2VzIHRoYXQgaW5mb3JtIHRoZSBvcmNoZXN0cmF0b3Igd2hlbiB0aGV5IGFyZSBkb25lIGFuZCB3aGVyZSB0aGV5IGZpbmlzaGVkLgo8dWw+CjxsaT5PbmUgd2F5IG9mIGFjaGlldmluZyB0aGlzIHdvdWxkIGJlIHRoYXQgZXZlcnkgcHJvY2VzcyBib3RoIHBhc3NlcyBhbmQgcmV0dXJucyB0aGUgPGNvZGU+U3RhdGU8L2NvZGU+IG9iamVjdDwvbGk+CjxsaT5JbiBzb21lIGNhc2VzLCBhIG5vZGUgbWF5IHNwZWNpZnkgdGhhdCBpdCB3YW50cyB0byBydW4gYmxvY2tzeW5jIGluZGVmaW5pdGVseS48L2xpPgo8L3VsPgo8L2xpPgo8bGk+VGhlIG1lbXBvb2wgc2hvdWxkIGFsc28gaW5kaWNhdGUgd2hldGhlciBpdCB3YW50cyB0byByZWNlaXZlIHRyYW5zYWN0aW9ucyBvciB0byBzZW5kIHRoZW0gb25seSAob25lLWRpcmVjdGlvbmFsIG1lbXBvb2wpPC9saT4KPGxpPlNpbWlsYXJseSwgdGhlIGxpZ2h0IGNsaWVudCBpdHNlbGYgb25seSByZXF1ZXN0cyBpbmZvcm1hdGlvbiB3aGVyZWFzIHRoZSBsaWdodCBjbGllbnQgc2VydmljZSAoY3VycmVudGx5IHBhcnQgb2Ygc3RhdGUgc3luYykgY2FuIGRvIGJvdGguPC9saT4KPGxpPlRoaXMgZGlzdGluY3Rpb24gbmVlZHMgdG8gYmUgY29tbXVuaWNhdGVkIGluIHRoZSBwMnAgbGF5ZXIgaGFuZHNoYWtlIGl0c2VsZiBidXQgc2hvdWxkIGFsc28gYmUgY2hhbmdlYWJsZSBvdmVyIHRoZSBsaWZlc3BhbiBvZiB0aGUgY29ubmVjdGlvbi48L2xpPgo8L3VsPgo8L0NvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yPgo="},null]}