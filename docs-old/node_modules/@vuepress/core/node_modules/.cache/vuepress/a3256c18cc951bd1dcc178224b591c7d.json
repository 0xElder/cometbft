{"remainingRequest":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/architecture/adr-035-documentation.md?vue&type=template&id=e308e6ec&","dependencies":[{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/architecture/adr-035-documentation.md","mtime":1673295761173},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/cache-loader/dist/cjs.js","mtime":1673296285960},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1673296286086},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/cache-loader/dist/cjs.js","mtime":1673296285960},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/vue-loader/lib/index.js","mtime":1673296285952},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/@vuepress/markdown-loader/index.js","mtime":1673296286103}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygKICAgICJDb250ZW50U2xvdHNEaXN0cmlidXRvciIsCiAgICB7IGF0dHJzOiB7ICJzbG90LWtleSI6IF92bS4kcGFyZW50LnNsb3RLZXkgfSB9LAogICAgWwogICAgICBfYygiaDEiLCB7IGF0dHJzOiB7IGlkOiAiYWRyLTAzNS1kb2N1bWVudGF0aW9uIiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiNhZHItMDM1LWRvY3VtZW50YXRpb24iIH0sCiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgQURSIDAzNTogRG9jdW1lbnRhdGlvbiIpLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgW192bS5fdigiQXV0aG9yOiBAenJhbXNheSAoWmFjaCBSYW1zYXkpIildKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMiIsIHsgYXR0cnM6IHsgaWQ6ICJjaGFuZ2Vsb2ciIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgeyBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLCBhdHRyczogeyBocmVmOiAiI2NoYW5nZWxvZyIgfSB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgQ2hhbmdlbG9nIiksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgzIiwgeyBhdHRyczogeyBpZDogIm5vdmVtYmVyLTJuZC0yMDE4IiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiNub3ZlbWJlci0ybmQtMjAxOCIgfSwKICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiBOb3ZlbWJlciAybmQgMjAxOCIpLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJ1bCIsIFtfYygibGkiLCBbX3ZtLl92KCJpbml0aWFsIHdyaXRlLXVwIildKV0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgyIiwgeyBhdHRyczogeyBpZDogImNvbnRleHQiIH0gfSwgWwogICAgICAgIF9jKCJhIiwgeyBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLCBhdHRyczogeyBocmVmOiAiI2NvbnRleHQiIH0gfSwgWwogICAgICAgICAgX3ZtLl92KCIjIiksCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgQ29udGV4dCIpLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICJUaGUgVGVuZGVybWludCBkb2N1bWVudGF0aW9uIGhhcyB1bmRlcmdvbmUgc2V2ZXJhbCBjaGFuZ2VzIHVudGlsIHNldHRsaW5nIG9uIHRoZSBjdXJyZW50IG1vZGVsLiBPcmlnaW5hbGx5LCB0aGUgZG9jdW1lbnRhdGlvbiB3YXMgaG9zdGVkIG9uIHRoZSB3ZWJzaXRlIGFuZCBoYWQgdG8gYmUgdXBkYXRlZCBhc3luY2hyb25vdXNseSBmcm9tIHRoZSBjb2RlLiBBbG9uZyB3aXRoIHRoZSBvdGhlciByZXBvc2l0b3JpZXMgcmVxdWlyaW5nIGRvY3VtZW50YXRpb24sIHRoZSB3aG9sZSBzdGFjayBtb3ZlZCB0byB1c2luZyBSZWFkIFRoZSBEb2NzIHRvIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGUsIHB1Ymxpc2gsIGFuZCBob3N0IHRoZSBkb2N1bWVudGF0aW9uLiBUaGlzLCBob3dldmVyLCB3YXMgaW5zdWZmaWNpZW50OyB0aGUgUlREIHNpdGUgaGFkIGFkdmVydGlzZW1lbnQsIGl0IHdhc24ndCBlYXNpbHkgYWNjZXNzaWJsZSB0byBkZXZzLCBkaWRuJ3QgY29sbGVjdCBtZXRyaWNzLCB3YXMgYW5vdGhlciBzZXQgb2YgZXh0ZXJuYWwgbGlua3MsIGV0Yy4iCiAgICAgICAgKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDIiLCB7IGF0dHJzOiB7IGlkOiAiZGVjaXNpb24iIH0gfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgeyBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLCBhdHRyczogeyBocmVmOiAiI2RlY2lzaW9uIiB9IH0sCiAgICAgICAgICBbX3ZtLl92KCIjIildCiAgICAgICAgKSwKICAgICAgICBfdm0uX3YoIiBEZWNpc2lvbiIpLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigiRm9yIHR3byByZWFzb25zLCB0aGUgZGVjaXNpb24gd2FzIG1hZGUgdG8gdXNlIFZ1ZVByZXNzOiIpLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJvbCIsIFsKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJhYmlsaXR5IHRvIGdldCBtZXRyaWNzIChpbXBsZW1lbnRlZCBvbiBib3RoIFRlbmRlcm1pbnQgYW5kIFNESykiCiAgICAgICAgICApLAogICAgICAgIF0pLAogICAgICAgIF92bS5fdigiICIpLAogICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgIF92bS5fdigiaG9zdCB0aGUgZG9jdW1lbnRhdGlvbiBvbiB0aGUgd2Vic2l0ZSBhcyBhICIpLAogICAgICAgICAgX2MoImNvZGUiLCBbX3ZtLl92KCIvZG9jcyIpXSksCiAgICAgICAgICBfdm0uX3YoIiBlbmRwb2ludC4iKSwKICAgICAgICBdKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiVGhpcyBpcyBkb25lIHdoaWxlIG1haW50YWluaW5nIHN5bmNocm9ueSBiZXR3ZWVuIHRoZSBkb2NzIGFuZCBjb2RlLCBpLmUuLCB0aGUgd2Vic2l0ZSBpcyBidWlsdCB3aGVuZXZlciB0aGUgZG9jcyBhcmUgdXBkYXRlZC4iCiAgICAgICAgKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDIiLCB7IGF0dHJzOiB7IGlkOiAic3RhdHVzIiB9IH0sIFsKICAgICAgICBfYygiYSIsIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwgYXR0cnM6IHsgaHJlZjogIiNzdGF0dXMiIH0gfSwgWwogICAgICAgICAgX3ZtLl92KCIjIiksCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl92KCIgU3RhdHVzIiksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoCiAgICAgICAgInAiLAogICAgICAgIFsKICAgICAgICAgIF92bS5fdigiVGhlIHR3byBwb2ludHMgYWJvdmUgaGF2ZSBiZWVuIGltcGxlbWVudGVkOyB0aGUgIiksCiAgICAgICAgICBfYygiY29kZSIsIFtfdm0uX3YoImNvbmZpZy5qcyIpXSksCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICIgaGFzIGEgR29vZ2xlIEFuYWx5dGljcyBpZGVudGlmaWVyIGFuZCB0aGUgZG9jdW1lbnRhdGlvbiB3b3JrZmxvdyBoYXMgYmVlbiB1cCBhbmQgcnVubmluZyBsYXJnZWx5IHdpdGhvdXQgcHJvYmxlbXMgZm9yIHNldmVyYWwgbW9udGhzLiBEZXRhaWxzIGFib3V0IHRoZSBkb2N1bWVudGF0aW9uIGJ1aWxkICYgd29ya2Zsb3cgY2FuIGJlIGZvdW5kICIKICAgICAgICAgICksCiAgICAgICAgICBfYygiUm91dGVyTGluayIsIHsgYXR0cnM6IHsgdG86ICIvRE9DU19SRUFETUUuaHRtbCIgfSB9LCBbCiAgICAgICAgICAgIF92bS5fdigiaGVyZSIpLAogICAgICAgICAgXSksCiAgICAgICAgXSwKICAgICAgICAxCiAgICAgICksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDIiLCB7IGF0dHJzOiB7IGlkOiAiY29uc2VxdWVuY2VzIiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwgYXR0cnM6IHsgaHJlZjogIiNjb25zZXF1ZW5jZXMiIH0gfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIENvbnNlcXVlbmNlcyIpLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJwIiwgWwogICAgICAgIF92bS5fdigKICAgICAgICAgICdCZWNhdXNlIG9mIHRoZSBvcmdhbml6YXRpb25hbCBzZXBlcmF0aW9uIGJldHdlZW4gVGVuZGVybWludCAmIENvc21vcywgdGhlcmUgaXMgYSBjaGFsbGVuZ2Ugb2YgIndoYXQgZ29lcyB3aGVyZSIgZm9yIGNlcnRhaW4gYXNwZWN0cyBvZiBkb2N1bWVudGF0aW9uLicKICAgICAgICApLAogICAgICBdKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKCJoMyIsIHsgYXR0cnM6IHsgaWQ6ICJwb3NpdGl2ZSIgfSB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjcG9zaXRpdmUiIH0gfSwKICAgICAgICAgIFtfdm0uX3YoIiMiKV0KICAgICAgICApLAogICAgICAgIF92bS5fdigiIFBvc2l0aXZlIiksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoInAiLCBbCiAgICAgICAgX3ZtLl92KAogICAgICAgICAgIlRoaXMgYXJjaGl0ZWN0dXJlIGlzIGxhcmdlbHkgcG9zaXRpdmUgcmVsYXRpdmUgdG8gcHJpb3IgZG9jcyBhcnJhbmdlbWVudHMuIgogICAgICAgICksCiAgICAgIF0pLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoImgzIiwgeyBhdHRyczogeyBpZDogIm5lZ2F0aXZlIiB9IH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwgYXR0cnM6IHsgaHJlZjogIiNuZWdhdGl2ZSIgfSB9LAogICAgICAgICAgW192bS5fdigiIyIpXQogICAgICAgICksCiAgICAgICAgX3ZtLl92KCIgTmVnYXRpdmUiKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiQSBzaWduaWZpY2FudCBwb3J0aW9uIG9mIHRoZSBkb2NzIGF1dG9tYXRpb24gLyBidWlsZCBwcm9jZXNzIGlzIGluIHByaXZhdGUgcmVwb3Mgd2l0aCBsaW1pdGVkIGFjY2Vzcy92aXNpYmlsaXR5IHRvIGRldnMuIEhvd2V2ZXIsIHRoZXNlIHRhc2tzIGFyZSBoYW5kbGVkIGJ5IHRoZSBTUkUgdGVhbS4iCiAgICAgICAgKSwKICAgICAgXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiaDMiLCB7IGF0dHJzOiB7IGlkOiAibmV1dHJhbCIgfSB9LCBbCiAgICAgICAgX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsIGF0dHJzOiB7IGhyZWY6ICIjbmV1dHJhbCIgfSB9LCBbCiAgICAgICAgICBfdm0uX3YoIiMiKSwKICAgICAgICBdKSwKICAgICAgICBfdm0uX3YoIiBOZXV0cmFsIiksCiAgICAgIF0pLAogICAgXQogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}