{"remainingRequest":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/@cosmos-ui/vue/src/SectionSearch/SectionResultsEmpty.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/@cosmos-ui/vue/src/SectionSearch/SectionResultsEmpty.vue","mtime":1673296287215},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/cache-loader/dist/cjs.js","mtime":1673296285960},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/babel-loader/lib/index.js","mtime":1673296285980},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/cache-loader/dist/cjs.js","mtime":1673296285960},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/vue-loader/lib/index.js","mtime":1673296285952}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEljb25TZWFyY2ggZnJvbSAiLi9JY29uU2VhcmNoLnZ1ZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBJY29uU2VhcmNoOiBJY29uU2VhcmNoCiAgfSwKICBwcm9wczogewogICAgcXVlcnk6IHsKICAgICAgdHlwZTogU3RyaW5nCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBxdWVyeVNldDogZnVuY3Rpb24gcXVlcnlTZXQoc3RyaW5nKSB7CiAgICAgIHRoaXMuJGVtaXQoInF1ZXJ5Iiwgc3RyaW5nKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["SectionResultsEmpty.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA,OAAA,UAAA,MAAA,kBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA;AADA,GADA;AAIA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA;AADA,GAJA;AASA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,oBACA,MADA,EACA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,MAAA;AACA;AAHA;AATA,CAAA","sourcesContent":["<template>\n  <div>\n    <div class=\"results__noresults__container\">\n      <div class=\"results__noresults\">\n        <div class=\"results__noresults__icon\">\n          <icon-search></icon-search>\n        </div>\n        <div class=\"results__noresults__h1\">No results for <strong>“{{query}}”</strong>\n        </div>\n        <div class=\"results__noresults__p\">\n          <span>Try queries such as <span class=\"results__noresults__a\" @click=\"querySet('auth')\" @keydown.enter=\"querySet('auth')\">auth</span>, <span class=\"results__noresults__a\" @click=\"querySet('slashing')\" @keydown.enter=\"querySet('slashing')\">slashing</span>, or <span class=\"results__noresults__a\" @click=\"querySet('staking')\" @keydown.enter=\"querySet('staking')\">staking</span>.</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.results__noresults__container {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  flex-grow: 1;\n  padding-top: 4rem;\n  padding-bottom: 4rem;\n  padding-left: 2rem;\n  padding-right: 2rem;\n  font-family: var(--ds-font-family, inherit);\n  overflow-x: hidden;\n  word-break: break-all;\n}\n.results__noresults {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n.results__noresults__icon {\n  max-width: 80px;\n  margin-bottom: 2rem;\n  fill: #ccc;\n}\n.results__noresults__h1 {\n  color: rgba(22, 25, 49, 0.65);\n  font-size: 1.5rem;\n  margin-bottom: 1rem;\n  text-align: center;\n}\n.results__noresults__p {\n  color: rgba(22, 25, 49, 0.65);\n}\n.results__noresults__a {\n  cursor: pointer;\n  color: var(--accent-color, black);\n}\n</style>\n\n<script>\nimport IconSearch from \"./IconSearch.vue\";\n\nexport default {\n  components: {\n    IconSearch\n  },\n  props: {\n    query: {\n      type: String\n    }\n  },\n  methods: {\n    querySet(string) {\n      this.$emit(\"query\", string);\n    }\n  }\n};\n</script>"],"sourceRoot":"node_modules/@cosmos-ui/vue/src/SectionSearch"}]}