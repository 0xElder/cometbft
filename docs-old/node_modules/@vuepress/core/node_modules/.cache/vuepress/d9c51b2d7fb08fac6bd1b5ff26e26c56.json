{"remainingRequest":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/architecture/adr-067-mempool-refactor.md?vue&type=template&id=962a0eb2&","dependencies":[{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/architecture/adr-067-mempool-refactor.md","mtime":1673295761175},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/cache-loader/dist/cjs.js","mtime":1673296285960},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1673296286086},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/cache-loader/dist/cjs.js","mtime":1673296285960},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/vue-loader/lib/index.js","mtime":1673296285952},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/@vuepress/markdown-loader/index.js","mtime":1673296286103}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PGgxIGlkPSJhZHItMDY3LW1lbXBvb2wtcmVmYWN0b3IiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjYWRyLTA2Ny1tZW1wb29sLXJlZmFjdG9yIj4jPC9hPiBBRFIgMDY3OiBNZW1wb29sIFJlZmFjdG9yPC9oMT4KPHVsPgo8bGk+PGEgaHJlZj0iI2Fkci0wNjctbWVtcG9vbC1yZWZhY3RvciI+QURSIDA2NzogTWVtcG9vbCBSZWZhY3RvcjwvYT4KPHVsPgo8bGk+PGEgaHJlZj0iI2NoYW5nZWxvZyI+Q2hhbmdlbG9nPC9hPjwvbGk+CjxsaT48YSBocmVmPSIjc3RhdHVzIj5TdGF0dXM8L2E+PC9saT4KPGxpPjxhIGhyZWY9IiNjb250ZXh0Ij5Db250ZXh0PC9hPgo8dWw+CjxsaT48YSBocmVmPSIjY3VycmVudC1kZXNpZ24iPkN1cnJlbnQgRGVzaWduPC9hPjwvbGk+CjwvdWw+CjwvbGk+CjxsaT48YSBocmVmPSIjYWx0ZXJuYXRpdmUtYXBwcm9hY2hlcyI+QWx0ZXJuYXRpdmUgQXBwcm9hY2hlczwvYT48L2xpPgo8bGk+PGEgaHJlZj0iI3ByaW9yLWFydCI+UHJpb3IgQXJ0PC9hPgo8dWw+CjxsaT48YSBocmVmPSIjZXRoZXJldW0iPkV0aGVyZXVtPC9hPjwvbGk+CjxsaT48YSBocmVmPSIjZGllbSI+RGllbTwvYT48L2xpPgo8L3VsPgo8L2xpPgo8bGk+PGEgaHJlZj0iI2RlY2lzaW9uIj5EZWNpc2lvbjwvYT48L2xpPgo8bGk+PGEgaHJlZj0iI2RldGFpbGVkLWRlc2lnbiI+RGV0YWlsZWQgRGVzaWduPC9hPgo8dWw+CjxsaT48YSBocmVmPSIjY2hlY2t0eCI+Q2hlY2tUeDwvYT48L2xpPgo8bGk+PGEgaHJlZj0iI21lbXBvb2wiPk1lbXBvb2w8L2E+PC9saT4KPGxpPjxhIGhyZWY9IiNldmljdGlvbiI+RXZpY3Rpb248L2E+PC9saT4KPGxpPjxhIGhyZWY9IiNnb3NzaXBpbmciPkdvc3NpcGluZzwvYT48L2xpPgo8bGk+PGEgaHJlZj0iI3BlcmZvcm1hbmNlIj5QZXJmb3JtYW5jZTwvYT48L2xpPgo8L3VsPgo8L2xpPgo8bGk+PGEgaHJlZj0iI2Z1dHVyZS1pbXByb3ZlbWVudHMiPkZ1dHVyZSBJbXByb3ZlbWVudHM8L2E+PC9saT4KPGxpPjxhIGhyZWY9IiNjb25zZXF1ZW5jZXMiPkNvbnNlcXVlbmNlczwvYT4KPHVsPgo8bGk+PGEgaHJlZj0iI3Bvc2l0aXZlIj5Qb3NpdGl2ZTwvYT48L2xpPgo8bGk+PGEgaHJlZj0iI25lZ2F0aXZlIj5OZWdhdGl2ZTwvYT48L2xpPgo8bGk+PGEgaHJlZj0iI25ldXRyYWwiPk5ldXRyYWw8L2E+PC9saT4KPC91bD4KPC9saT4KPGxpPjxhIGhyZWY9IiNyZWZlcmVuY2VzIj5SZWZlcmVuY2VzPC9hPjwvbGk+CjwvdWw+CjwvbGk+CjwvdWw+CjxoMiBpZD0iY2hhbmdlbG9nIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2NoYW5nZWxvZyI+IzwvYT4gQ2hhbmdlbG9nPC9oMj4KPHVsPgo8bGk+QXByaWwgMTksIDIwMjE6IEluaXRpYWwgRHJhZnQgKEBhbGV4YW5kZXJiZXopPC9saT4KPC91bD4KPGgyIGlkPSJzdGF0dXMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjc3RhdHVzIj4jPC9hPiBTdGF0dXM8L2gyPgo8cD5BY2NlcHRlZDwvcD4KPGgyIGlkPSJjb250ZXh0Ij48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2NvbnRleHQiPiM8L2E+IENvbnRleHQ8L2gyPgo8cD5UZW5kZXJtaW50IENvcmUgaGFzIGEgcmVhY3RvciBhbmQgZGF0YSBzdHJ1Y3R1cmUsIG1lbXBvb2wsIHRoYXQgZmFjaWxpdGF0ZXMgdGhlCmVwaGVtZXJhbCBzdG9yYWdlIG9mIHVuY29tbWl0dGVkIHRyYW5zYWN0aW9ucy4gSG9uZXN0IG5vZGVzIHBhcnRpY2lwYXRpbmcgaW4gYQpUZW5kZXJtaW50IG5ldHdvcmsgZ29zc2lwIHRoZXNlIHVuY29tbWl0dGVkIHRyYW5zYWN0aW9ucyB0byBlYWNoIG90aGVyIGlmIHRoZXkKcGFzcyB0aGUgYXBwbGljYXRpb24ncyA8Y29kZT5DaGVja1R4PC9jb2RlPi4gSW4gYWRkaXRpb24sIGJsb2NrIHByb3Bvc2VycyBzZWxlY3QgZnJvbSB0aGUKbWVtcG9vbCBhIHN1YnNldCBvZiB1bmNvbW1pdHRlZCB0cmFuc2FjdGlvbnMgdG8gaW5jbHVkZSBpbiB0aGUgbmV4dCBibG9jay48L3A+CjxwPkN1cnJlbnRseSwgdGhlIG1lbXBvb2wgaW4gVGVuZGVybWludCBDb3JlIGlzIGRlc2lnbmVkIGFzIGEgRklGTyBxdWV1ZS4gSW4gb3RoZXIKd29yZHMsIHRyYW5zYWN0aW9ucyBhcmUgaW5jbHVkZWQgaW4gYmxvY2tzIGFzIHRoZXkgYXJlIHJlY2VpdmVkIGJ5IGEgbm9kZS4gVGhlcmUKY3VycmVudGx5IGlzIG5vIGV4cGxpY2l0IGFuZCBwcmlvcml0aXplZCBvcmRlcmluZyBvZiB0aGVzZSB1bmNvbW1pdHRlZCB0cmFuc2FjdGlvbnMuClRoaXMgcHJlc2VudHMgYSBmZXcgdGVjaG5pY2FsIGFuZCBVWCBjaGFsbGVuZ2VzIGZvciBvcGVyYXRvcnMgYW5kIGFwcGxpY2F0aW9ucy48L3A+CjxwPk5hbWVseSwgdmFsaWRhdG9ycyBhcmUgbm90IGFibGUgdG8gcHJpb3JpdGl6ZSB0cmFuc2FjdGlvbnMgYnkgdGhlaXIgZmVlcyBvciBhbnkKaW5jZW50aXZlIGFsaWduZWQgbWVjaGFuaXNtLiBJbiBhZGRpdGlvbiwgdGhlIGxhY2sgb2YgcHJpb3JpdGl6YXRpb24gYWxzbyBsZWFkcwp0byBjYXNjYWRpbmcgZWZmZWN0cyBpbiB0ZXJtcyBvZiBEb1MgYW5kIHZhcmlvdXMgYXR0YWNrIHZlY3RvcnMgb24gbmV0d29ya3MsCmUuZy4gPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL2Rpc2N1c3Npb25zLzgyMjQiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPmNvc21vcy9jb3Ntb3Mtc2RrIzgyMjQ8T3V0Ym91bmRMaW5rLz48L2E+LjwvcD4KPHA+VGh1cywgVGVuZGVybWludCBDb3JlIG5lZWRzIHRoZSBhYmlsaXR5IGZvciBhbiBhcHBsaWNhdGlvbiBhbmQgaXRzIHVzZXJzIHRvCnByaW9yaXRpemUgdHJhbnNhY3Rpb25zIGluIGEgZmxleGlibGUgYW5kIHBlcmZvcm1hbnQgbWFubmVyLiBTcGVjaWZpY2FsbHksIHdlJ3JlCmFpbWluZyB0byBlaXRoZXIgaW1wcm92ZSwgbWFpbnRhaW4gb3IgYWRkIHRoZSBmb2xsb3dpbmcgcHJvcGVydGllcyBpbiB0aGUKVGVuZGVybWludCBtZW1wb29sOjwvcD4KPHVsPgo8bGk+QWxsb3cgYXBwbGljYXRpb24tZGV0ZXJtaW5lZCB0cmFuc2FjdGlvbiBwcmlvcml0eS48L2xpPgo8bGk+QWxsb3cgZWZmaWNpZW50IGNvbmN1cnJlbnQgcmVhZHMgYW5kIHdyaXRlcy48L2xpPgo8bGk+QWxsb3cgYmxvY2sgcHJvcG9zZXJzIHRvIHJlYXAgdHJhbnNhY3Rpb25zIGVmZmljaWVudGx5IGJ5IHByaW9yaXR5LjwvbGk+CjxsaT5NYWludGFpbiBhIGZpeGVkIG1lbXBvb2wgY2FwYWNpdHkgYnkgdHJhbnNhY3Rpb24gc2l6ZSBhbmQgZXZpY3QgbG93ZXIgcHJpb3JpdHkKdHJhbnNhY3Rpb25zIHRvIG1ha2Ugcm9vbSBmb3IgaGlnaGVyIHByaW9yaXR5IHRyYW5zYWN0aW9ucy48L2xpPgo8bGk+QWxsb3cgdHJhbnNhY3Rpb25zIHRvIGJlIGdvc3NpcGVkIGJ5IHByaW9yaXR5IGVmZmljaWVudGx5LjwvbGk+CjxsaT5BbGxvdyBvcGVyYXRvcnMgdG8gc3BlY2lmeSBhIG1heGltdW0gVFRMIGZvciB0cmFuc2FjdGlvbnMgaW4gdGhlIG1lbXBvb2wgYmVmb3JlCnRoZXkncmUgYXV0b21hdGljYWxseSBldmljdGVkIGlmIG5vdCBzZWxlY3RlZCBmb3IgYSBibG9jayBwcm9wb3NhbCBpbiB0aW1lLjwvbGk+CjxsaT5FbnN1cmUgdGhlIGRlc2lnbiBhbGxvd3MgZm9yIGZ1dHVyZSBleHRlbnNpb25zLCBzdWNoIGFzIHJlcGxhY2UtYnktcHJpb3JpdHkgYW5kCmFsbG93aW5nIG11bHRpcGxlIHBlbmRpbmcgdHJhbnNhY3Rpb25zIHBlciBzZW5kZXIsIHRvIGJlIGluY29ycG9yYXRlZCBlYXNpbHkuPC9saT4KPC91bD4KPHA+Tm90ZSwgbm90IGFsbCBvZiB0aGVzZSBwcm9wZXJ0aWVzIHdpbGwgYmUgYWRkcmVzc2VkIGJ5IHRoZSBwcm9wb3NlZCBjaGFuZ2VzIGluCnRoaXMgQURSLiBIb3dldmVyLCB0aGlzIHByb3Bvc2FsIHdpbGwgZW5zdXJlIHRoYXQgYW55IHVuYWRkcmVzc2VkIHByb3BlcnRpZXMKY2FuIGJlIGFkZHJlc3NlZCBpbiBhbiBlYXN5IGFuZCBleHRlbnNpYmxlIG1hbm5lciBpbiB0aGUgZnV0dXJlLjwvcD4KPGgzIGlkPSJjdXJyZW50LWRlc2lnbiI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNjdXJyZW50LWRlc2lnbiI+IzwvYT4gQ3VycmVudCBEZXNpZ248L2gzPgo8cD48aW1nIHNyYz0iLi9pbWcvbWVtcG9vbC12MC5qcGVnIiBhbHQ9Im1lbXBvb2wiPjwvcD4KPHA+QXQgdGhlIGNvcmUgb2YgdGhlIDxjb2RlPnYwPC9jb2RlPiBtZW1wb29sIHJlYWN0b3IgaXMgYSBjb25jdXJyZW50IGxpbmtlZC1saXN0LiBUaGlzIGlzIHRoZQpwcmltYXJ5IGRhdGEgc3RydWN0dXJlIHRoYXQgY29udGFpbnMgPGNvZGU+VHg8L2NvZGU+IG9iamVjdHMgdGhhdCBoYXZlIHBhc3NlZCA8Y29kZT5DaGVja1R4PC9jb2RlPi4KV2hlbiBhIG5vZGUgcmVjZWl2ZXMgYSB0cmFuc2FjdGlvbiBmcm9tIGFub3RoZXIgcGVlciwgaXQgZXhlY3V0ZXMgPGNvZGU+Q2hlY2tUeDwvY29kZT4sIHdoaWNoCm9idGFpbnMgYSByZWFkLWxvY2sgb24gdGhlIDxjb2RlPipDTGlzdE1lbXBvb2w8L2NvZGU+LiBJZiB0aGUgdHJhbnNhY3Rpb24gcGFzc2VzIDxjb2RlPkNoZWNrVHg8L2NvZGU+CmxvY2FsbHkgb24gdGhlIG5vZGUsIGl0IGlzIGFkZGVkIHRvIHRoZSA8Y29kZT4qQ0xpc3Q8L2NvZGU+IGJ5IG9idGFpbmluZyBhIHdyaXRlLWxvY2suIEl0CmlzIGFsc28gYWRkZWQgdG8gdGhlIDxjb2RlPmNhY2hlPC9jb2RlPiBhbmQgPGNvZGU+dHhzTWFwPC9jb2RlPiwgYm90aCBvZiB3aGljaCBvYnRhaW4gdGhlaXIgb3duIHJlc3BlY3RpdmUKd3JpdGUtbG9ja3MgYW5kIG1hcCBhIHJlZmVyZW5jZSBmcm9tIHRoZSB0cmFuc2FjdGlvbiBoYXNoIHRvIHRoZSA8Y29kZT5UeDwvY29kZT4gaXRzZWxmLjwvcD4KPHA+VHJhbnNhY3Rpb25zIGFyZSBjb250aW51b3VzbHkgZ29zc2lwZWQgdG8gcGVlcnMgd2hlbmV2ZXIgYSBuZXcgdHJhbnNhY3Rpb24gaXMgYWRkZWQKdG8gYSBsb2NhbCBub2RlJ3MgPGNvZGU+KkNMaXN0PC9jb2RlPiwgd2hlcmUgdGhlIG5vZGUgYXQgdGhlIGZyb250IG9mIHRoZSA8Y29kZT4qQ0xpc3Q8L2NvZGU+IGlzIHNlbGVjdGVkLgpBbm90aGVyIHRyYW5zYWN0aW9uIHdpbGwgbm90IGJlIGdvc3NpcGVkIHVudGlsIHRoZSA8Y29kZT4qQ0xpc3Q8L2NvZGU+IG5vdGlmaWVzIHRoZSByZWFkZXIKdGhhdCB0aGVyZSBhcmUgbW9yZSB0cmFuc2FjdGlvbnMgdG8gZ29zc2lwLjwvcD4KPHA+V2hlbiBhIHByb3Bvc2VyIGF0dGVtcHRzIHRvIHByb3Bvc2UgYSBibG9jaywgdGhleSB3aWxsIGV4ZWN1dGUgPGNvZGU+UmVhcE1heEJ5dGVzTWF4R2FzPC9jb2RlPgpvbiB0aGUgcmVhY3RvcidzIDxjb2RlPipDTGlzdE1lbXBvb2w8L2NvZGU+LiBUaGlzIGNhbGwgb2J0YWlucyBhIHJlYWQtbG9jayBvbiB0aGUgPGNvZGU+KkNMaXN0TWVtcG9vbDwvY29kZT4KYW5kIHNlbGVjdHMgYXMgbWFueSB0cmFuc2FjdGlvbnMgYXMgcG9zc2libGUgc3RhcnRpbmcgZnJvbSB0aGUgZnJvbnQgb2YgdGhlIDxjb2RlPipDTGlzdDwvY29kZT4KbW92aW5nIHRvIHRoZSBiYWNrIG9mIHRoZSBsaXN0LjwvcD4KPHA+V2hlbiBhIGJsb2NrIGlzIGZpbmFsbHkgY29tbWl0dGVkLCBhIGNhbGxlciBpbnZva2VzIDxjb2RlPlVwZGF0ZTwvY29kZT4gb24gdGhlIHJlYWN0b3Incwo8Y29kZT4qQ0xpc3RNZW1wb29sPC9jb2RlPiB3aXRoIGFsbCB0aGUgc2VsZWN0ZWQgdHJhbnNhY3Rpb25zLiBOb3RlLCB0aGUgY2FsbGVyIG11c3QgYWxzbwpleHBsaWNpdGx5IG9idGFpbiBhIHdyaXRlLWxvY2sgb24gdGhlIHJlYWN0b3IncyA8Y29kZT4qQ0xpc3RNZW1wb29sPC9jb2RlPi4gVGhpcyBjYWxsCndpbGwgcmVtb3ZlIGFsbCB0aGUgc3VwcGxpZWQgdHJhbnNhY3Rpb25zIGZyb20gdGhlIDxjb2RlPnR4c01hcDwvY29kZT4gYW5kIHRoZSA8Y29kZT4qQ0xpc3Q8L2NvZGU+LCBib3RoCm9mIHdoaWNoIG9idGFpbiB0aGVpciBvd24gcmVzcGVjdGl2ZSB3cml0ZS1sb2Nrcy4gSW4gYWRkaXRpb24sIHRoZSB0cmFuc2FjdGlvbgptYXkgYWxzbyBiZSByZW1vdmVkIGZyb20gdGhlIDxjb2RlPmNhY2hlPC9jb2RlPiB3aGljaCBvYnRhaW5zIGl0J3Mgb3duIHdyaXRlLWxvY2suPC9wPgo8aDIgaWQ9ImFsdGVybmF0aXZlLWFwcHJvYWNoZXMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjYWx0ZXJuYXRpdmUtYXBwcm9hY2hlcyI+IzwvYT4gQWx0ZXJuYXRpdmUgQXBwcm9hY2hlczwvaDI+CjxwPldoZW4gY29uc2lkZXJpbmcgd2hpY2ggYXBwcm9hY2ggdG8gdGFrZSBmb3IgYSBwcmlvcml0eS1iYXNlZCBmbGV4aWJsZSBhbmQKcGVyZm9ybWFudCBtZW1wb29sLCB0aGVyZSBhcmUgdHdvIGNvcmUgY2FuZGlkYXRlcy4gVGhlIGZpcnN0IGNhbmRpZGF0ZSBpcyBsZXNzCmludmFzaXZlIGluIHRoZSByZXF1aXJlZCAgc2V0IG9mIHByb3RvY29sIGFuZCBpbXBsZW1lbnRhdGlvbiBjaGFuZ2VzLCB3aGljaApzaW1wbHkgZXh0ZW5kcyB0aGUgZXhpc3RpbmcgPGNvZGU+Q2hlY2tUeDwvY29kZT4gQUJDSSBtZXRob2QuIFRoZSBzZWNvbmQgY2FuZGlkYXRlIGVzc2VudGlhbGx5Cmludm9sdmVzIHRoZSBpbnRyb2R1Y3Rpb24gb2YgbmV3IEFCQ0kgbWV0aG9kKHMpIGFuZCB3b3VsZCByZXF1aXJlIGEgaGlnaGVyIGRlZ3JlZQpvZiBjb21wbGV4aXR5IGluIHByb3RvY29sIGFuZCBpbXBsZW1lbnRhdGlvbiBjaGFuZ2VzLCBzb21lIG9mIHdoaWNoIG1heSBlaXRoZXIKb3ZlcmxhcCBvciBjb25mbGljdCB3aXRoIHRoZSB1cGNvbWluZyBpbnRyb2R1Y3Rpb24gb2YgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3RlbmRlcm1pbnQvdGVuZGVybWludC9ibG9iL21haW4vZG9jcy9yZmMvcmZjLTAxMy1hYmNpJTJCJTJCLm1kIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5BQkNJKys8T3V0Ym91bmRMaW5rLz48L2E+LjwvcD4KPHA+Rm9yIG1vcmUgaW5mb3JtYXRpb24gb24gdGhlIHZhcmlvdXMgYXBwcm9hY2hlcyBhbmQgcHJvcG9zYWxzLCBwbGVhc2Ugc2VlIHRoZQo8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vdGVuZGVybWludC90ZW5kZXJtaW50L2Rpc2N1c3Npb25zLzYyOTUiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPm1lbXBvb2wgZGlzY3Vzc2lvbjxPdXRib3VuZExpbmsvPjwvYT4uPC9wPgo8aDIgaWQ9InByaW9yLWFydCI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNwcmlvci1hcnQiPiM8L2E+IFByaW9yIEFydDwvaDI+CjxoMyBpZD0iZXRoZXJldW0iPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjZXRoZXJldW0iPiM8L2E+IEV0aGVyZXVtPC9oMz4KPHA+VGhlIEV0aGVyZXVtIG1lbXBvb2wsIHNwZWNpZmljYWxseSA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZXRoZXJldW0vZ28tZXRoZXJldW0iIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPkdldGg8T3V0Ym91bmRMaW5rLz48L2E+LApjb250YWlucyBhIG1lbXBvb2wsIDxjb2RlPipUeFBvb2w8L2NvZGU+LCB0aGF0IGNvbnRhaW5zIHZhcmlvdXMgbWFwcGluZ3MgaW5kZXhlZCBieSBhY2NvdW50LApzdWNoIGFzIGEgPGNvZGU+cGVuZGluZzwvY29kZT4gd2hpY2ggY29udGFpbnMgYWxsIHByb2Nlc3NhYmxlIHRyYW5zYWN0aW9ucyBmb3IgYWNjb3VudHMKcHJpb3JpdGl6ZWQgYnkgbm9uY2UuIEl0IGFsc28gY29udGFpbnMgYSA8Y29kZT5xdWV1ZTwvY29kZT4gd2hpY2ggaXMgdGhlIGV4YWN0IHNhbWUgbWFwcGluZwpleGNlcHQgaXQgY29udGFpbnMgbm90IGN1cnJlbnRseSBwcm9jZXNzYWJsZSB0cmFuc2FjdGlvbnMuIFRoZSBtZW1wb29sIGFsc28KY29udGFpbnMgYSA8Y29kZT5wcmljZWQ8L2NvZGU+IGluZGV4IG9mIHR5cGUgPGNvZGU+KnR4UHJpY2VkTGlzdDwvY29kZT4gdGhhdCBpcyBhIHByaW9yaXR5IHF1ZXVlIGJhc2VkCm9uIHRyYW5zYWN0aW9uIHByaWNlLjwvcD4KPGgzIGlkPSJkaWVtIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2RpZW0iPiM8L2E+IERpZW08L2gzPgo8cD5UaGUgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2RpZW0vZGllbS9ibG9iL21hc3Rlci9tZW1wb29sL1JFQURNRS5tZCNpbXBsZW1lbnRhdGlvbi1kZXRhaWxzIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5EaWVtIG1lbXBvb2w8T3V0Ym91bmRMaW5rLz48L2E+CmNvbnRhaW5zIGEgc2ltaWxhciBhcHByb2FjaCB0byB0aGUgb25lIHdlIHByb3Bvc2UuIFNwZWNpZmljYWxseSwgdGhlIERpZW0gbWVtcG9vbApjb250YWlucyBhIG1hcHBpbmcgZnJvbSA8Y29kZT5BY2NvdW50OltdVHg8L2NvZGU+LiBPbiB0b3Agb2YgdGhpcyBwcmltYXJ5IG1hcHBpbmcgZnJvbSBhY2NvdW50CnRvIGEgbGlzdCBvZiB0cmFuc2FjdGlvbnMsIGFyZSB2YXJpb3VzIGluZGV4ZXMgdXNlZCB0byBwZXJmb3JtIGNlcnRhaW4gYWN0aW9ucy48L3A+CjxwPlRoZSBtYWluIGluZGV4LCA8Y29kZT5Qcmlvcml0eUluZGV4PC9jb2RlPi4gaXMgYW4gb3JkZXJlZCBxdWV1ZSBvZiB0cmFuc2FjdGlvbnMgdGhhdCBhcmUK4oCcY29uc2Vuc3VzLXJlYWR54oCdIChpLmUuLCB0aGV5IGhhdmUgYSBzZXF1ZW5jZSBudW1iZXIgd2hpY2ggaXMgc2VxdWVudGlhbCB0byB0aGUKY3VycmVudCBzZXF1ZW5jZSBudW1iZXIgZm9yIHRoZSBhY2NvdW50KS4gVGhpcyBxdWV1ZSBpcyBvcmRlcmVkIGJ5IGdhcyBwcmljZSBzbwp0aGF0IGlmIGEgY2xpZW50IGlzIHdpbGxpbmcgdG8gcGF5IG1vcmUgKHRoYW4gb3RoZXIgY2xpZW50cykgcGVyIHVuaXQgb2YKZXhlY3V0aW9uLCB0aGVuIHRoZXkgY2FuIGVudGVyIGNvbnNlbnN1cyBlYXJsaWVyLjwvcD4KPGgyIGlkPSJkZWNpc2lvbiI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNkZWNpc2lvbiI+IzwvYT4gRGVjaXNpb248L2gyPgo8cD5UbyBpbmNvcnBvcmF0ZSBhIHByaW9yaXR5LWJhc2VkIGZsZXhpYmxlIGFuZCBwZXJmb3JtYW50IG1lbXBvb2wgaW4gVGVuZGVybWludCBDb3JlLAp3ZSB3aWxsIGludHJvZHVjZSBuZXcgZmllbGRzLCA8Y29kZT5wcmlvcml0eTwvY29kZT4gYW5kIDxjb2RlPnNlbmRlcjwvY29kZT4sIGludG8gdGhlIDxjb2RlPlJlc3BvbnNlQ2hlY2tUeDwvY29kZT4KdHlwZS48L3A+CjxwPldlIHdpbGwgaW50cm9kdWNlIGEgbmV3IHZlcnNpb25lZCBtZW1wb29sIHJlYWN0b3IsIDxjb2RlPnYxPC9jb2RlPiBhbmQgYXNzdW1lIGFuIGltcGxpY2l0CnZlcnNpb24gb2YgdGhlIGN1cnJlbnQgbWVtcG9vbCByZWFjdG9yIGFzIDxjb2RlPnYwPC9jb2RlPi4gSW4gdGhlIG5ldyA8Y29kZT52MTwvY29kZT4gbWVtcG9vbCByZWFjdG9yLAp3ZSBsYXJnZWx5IGtlZXAgdGhlIGZ1bmN0aW9uYWxpdHkgdGhlIHNhbWUgYXMgPGNvZGU+djA8L2NvZGU+IGV4Y2VwdCB3ZSBhdWdtZW50IHRoZSB1bmRlcmx5aW5nCmRhdGEgc3RydWN0dXJlcy4gU3BlY2lmaWNhbGx5LCB3ZSBrZWVwIGEgbWFwcGluZyBvZiBzZW5kZXJzIHRvIHRyYW5zYWN0aW9uIG9iamVjdHMuCk9uIHRvcCBvZiB0aGlzIG1hcHBpbmcsIHdlIGluZGV4IHRyYW5zYWN0aW9ucyB0byBwcm92aWRlIHRoZSBhYmlsaXR5IHRvIGVmZmljaWVudGx5Cmdvc3NpcCBhbmQgcmVhcCB0cmFuc2FjdGlvbnMgYnkgcHJpb3JpdHkuPC9wPgo8aDIgaWQ9ImRldGFpbGVkLWRlc2lnbiI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNkZXRhaWxlZC1kZXNpZ24iPiM8L2E+IERldGFpbGVkIERlc2lnbjwvaDI+CjxoMyBpZD0iY2hlY2t0eCI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNjaGVja3R4Ij4jPC9hPiBDaGVja1R4PC9oMz4KPHA+V2UgaW50cm9kdWNlIHRoZSBmb2xsb3dpbmcgbmV3IGZpZWxkcyBpbnRvIHRoZSA8Y29kZT5SZXNwb25zZUNoZWNrVHg8L2NvZGU+IHR5cGU6PC9wPgoKICAgIDx0bS1jb2RlLWJsb2NrIGNsYXNzPSJjb2RlYmxvY2siIGxhbmd1YWdlPSJkaWZmIiBiYXNlNjQ9ImJXVnpjMkZuWlNCU1pYTndiMjV6WlVOb1pXTnJWSGdnZXdvZ0lIVnBiblF6TWlBZ0lDQWdJQ0FnSUdOdlpHVWdJQ0FnSUNBZ1BTQXhPd29nSUdKNWRHVnpJQ0FnSUNBZ0lDQWdJR1JoZEdFZ0lDQWdJQ0FnUFNBeU93b2dJSE4wY21sdVp5QWdJQ0FnSUNBZ0lHeHZaeUFnSUNBZ0lDQWdQU0F6T3lBZ0x5OGdibTl1WkdWMFpYSnRhVzVwYzNScFl3b2dJSE4wY21sdVp5QWdJQ0FnSUNBZ0lHbHVabThnSUNBZ0lDQWdQU0EwT3lBZ0x5OGdibTl1WkdWMFpYSnRhVzVwYzNScFl3b2dJR2x1ZERZMElDQWdJQ0FnSUNBZ0lHZGhjMTkzWVc1MFpXUWdQU0ExSUZ0cWMyOXVYMjVoYldVZ1BTQW1jWFZ2ZER0bllYTmZkMkZ1ZEdWa0puRjFiM1E3WFRzS0lDQnBiblEyTkNBZ0lDQWdJQ0FnSUNCbllYTmZkWE5sWkNBZ0lEMGdOaUJiYW5OdmJsOXVZVzFsSUQwZ0puRjFiM1E3WjJGelgzVnpaV1FtY1hWdmREdGRPd29nSUhKbGNHVmhkR1ZrSUVWMlpXNTBJR1YyWlc1MGN5QWdJQ0FnUFNBM0lGc29aMjluYjNCeWIzUnZMbTUxYkd4aFlteGxLU0E5SUdaaGJITmxMQ0FvWjI5bmIzQnliM1J2TG1wemIyNTBZV2NwSUQwZ0puRjFiM1E3WlhabGJuUnpMRzl0YVhSbGJYQjBlU1p4ZFc5ME8xMDdDaUFnYzNSeWFXNW5JQ0FnSUNBZ0lDQWdZMjlrWlhOd1lXTmxJQ0E5SURnN0Npc2dhVzUwTmpRZ0lDQWdJQ0FnSUNBZ2NISnBiM0pwZEhrZ0lDQTlJRGs3Q2lzZ2MzUnlhVzVuSUNBZ0lDQWdJQ0FnYzJWdVpHVnlJQ0FnSUNBOUlERXdPd3A5Q2c9PSI+PC90bS1jb2RlLWJsb2NrPgogICAgPHA+SXQgaXMgZW50aXJlbHkgdXAgdGhlIGFwcGxpY2F0aW9uIGluIGRldGVybWluaW5nIGhvdyB0aGVzZSBmaWVsZHMgYXJlIHBvcHVsYXRlZAphbmQgd2l0aCB3aGF0IHZhbHVlcywgZS5nLiB0aGUgPGNvZGU+c2VuZGVyPC9jb2RlPiBjb3VsZCBiZSB0aGUgc2lnbmVyIGFuZCBmZWUgcGF5ZXIKb2YgdGhlIHRyYW5zYWN0aW9uLCB0aGUgPGNvZGU+cHJpb3JpdHk8L2NvZGU+IGNvdWxkIGJlIHRoZSBjdW11bGF0aXZlIHN1bSBvZiB0aGUgZmVlKHMpLjwvcD4KPHA+T25seSA8Y29kZT5zZW5kZXI8L2NvZGU+IGlzIHJlcXVpcmVkLCB3aGlsZSA8Y29kZT5wcmlvcml0eTwvY29kZT4gY2FuIGJlIG9taXR0ZWQgd2hpY2ggd291bGQgcmVzdWx0IGluCnVzaW5nIHRoZSBkZWZhdWx0IHZhbHVlIG9mIHplcm8uPC9wPgo8aDMgaWQ9Im1lbXBvb2wiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjbWVtcG9vbCI+IzwvYT4gTWVtcG9vbDwvaDM+CjxwPlRoZSBleGlzdGluZyBjb25jdXJyZW50LXNhZmUgbGlua2VkLWxpc3Qgd2lsbCBiZSByZXBsYWNlZCBieSBhIHRocmVhZC1zYWZlIG1hcApvZiA8Y29kZT4mbHQ7c2VuZGVyOipUeCZndDs8L2NvZGU+LCBpLmUgYSBtYXBwaW5nIGZyb20gPGNvZGU+c2VuZGVyPC9jb2RlPiB0byBhIHNpbmdsZSA8Y29kZT4qVHg8L2NvZGU+IG9iamVjdCwgd2hlcmUKZWFjaCA8Y29kZT4qVHg8L2NvZGU+IGlzIHRoZSBuZXh0IHZhbGlkIGFuZCBwcm9jZXNzYWJsZSB0cmFuc2FjdGlvbiBmcm9tIHRoZSBnaXZlbiA8Y29kZT5zZW5kZXI8L2NvZGU+LjwvcD4KPHA+T24gdG9wIG9mIHRoaXMgbWFwcGluZywgd2UgaW5kZXggYWxsIHRyYW5zYWN0aW9ucyBieSBwcmlvcml0eSB1c2luZyBhIHRocmVhZC1zYWZlCnByaW9yaXR5IHF1ZXVlLCBpLmUuIGEgPGEgaHJlZj0iaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvTWluLW1heF9oZWFwIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5tYXggaGVhcDxPdXRib3VuZExpbmsvPjwvYT4uCldoZW4gYSBwcm9wb3NlciBpcyByZWFkeSB0byBzZWxlY3QgdHJhbnNhY3Rpb25zIGZvciB0aGUgbmV4dCBibG9jayBwcm9wb3NhbCwKdHJhbnNhY3Rpb25zIGFyZSBzZWxlY3RlZCBmcm9tIHRoaXMgcHJpb3JpdHkgaW5kZXggYnkgaGlnaGVzdCBwcmlvcml0eSBvcmRlci4KV2hlbiBhIHRyYW5zYWN0aW9uIGlzIHNlbGVjdGVkIGFuZCByZWFwZWQsIGl0IGlzIHJlbW92ZWQgZnJvbSB0aGlzIGluZGV4IGFuZApmcm9tIHRoZSA8Y29kZT4mbHQ7c2VuZGVyOipUeCZndDs8L2NvZGU+IG1hcHBpbmcuPC9wPgo8cD5XZSBkZWZpbmUgPGNvZGU+VHg8L2NvZGU+IGFzIHRoZSBmb2xsb3dpbmcgZGF0YSBzdHJ1Y3R1cmU6PC9wPgoKICAgIDx0bS1jb2RlLWJsb2NrIGNsYXNzPSJjb2RlYmxvY2siIGxhbmd1YWdlPSJnbyIgYmFzZTY0PSJkSGx3WlNCVWVDQnpkSEoxWTNRZ2V3b2dJQzh2SUZSNElISmxjSEpsYzJWdWRITWdkR2hsSUhKaGR5QmlhVzVoY25rZ2RISmhibk5oWTNScGIyNGdaR0YwWVM0S0lDQlVlQ0JiWFdKNWRHVUtDaUFnTHk4Z1VISnBiM0pwZEhrZ1pHVm1hVzVsY3lCMGFHVWdkSEpoYm5OaFkzUnBiMjRuY3lCd2NtbHZjbWwwZVNCaGN5QnpjR1ZqYVdacFpXUWdZbmtnZEdobElHRndjR3hwWTJGMGFXOXVDaUFnTHk4Z2FXNGdkR2hsSUZKbGMzQnZibk5sUTJobFkydFVlQ0J5WlhOd2IyNXpaUzRLSUNCUWNtbHZjbWwwZVNCcGJuUTJOQW9LSUNBdkx5QlRaVzVrWlhJZ1pHVm1hVzVsY3lCMGFHVWdkSEpoYm5OaFkzUnBiMjRuY3lCelpXNWtaWElnWVhNZ2MzQmxZMmxtYVdWa0lHSjVJSFJvWlNCaGNIQnNhV05oZEdsdmJpQnBiZ29nSUM4dklIUm9aU0JTWlhOd2IyNXpaVU5vWldOclZIZ2djbVZ6Y0c5dWMyVXVDaUFnVTJWdVpHVnlJSE4wY21sdVp3b0tJQ0F2THlCSmJtUmxlQ0JrWldacGJtVnpJSFJvWlNCamRYSnlaVzUwSUdsdVpHVjRJR2x1SUhSb1pTQndjbWx2Y21sMGVTQnhkV1YxWlNCcGJtUmxlQzRnVG05MFpTd2dhV1lLSUNBdkx5QnRkV3gwYVhCc1pTQlVlQ0JwYm1SbGVHVnpJR0Z5WlNCdVpXVmtaV1FzSUhSb2FYTWdabWxsYkdRZ2QybHNiQ0JpWlNCeVpXMXZkbVZrSUdGdVpDQmxZV05vSUZSNENpQWdMeThnYVc1a1pYZ2dkMmxzYkNCb1lYWmxJR2wwY3lCdmQyNGdkM0poY0hCbFpDQlVlQ0IwZVhCbExnb2dJRWx1WkdWNElHbHVkQXA5Q2c9PSI+PC90bS1jb2RlLWJsb2NrPgogICAgPGgzIGlkPSJldmljdGlvbiI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNldmljdGlvbiI+IzwvYT4gRXZpY3Rpb248L2gzPgo8cD5VcG9uIHN1Y2Nlc3NmdWxseSBleGVjdXRpbmcgPGNvZGU+Q2hlY2tUeDwvY29kZT4gZm9yIGEgbmV3IDxjb2RlPlR4PC9jb2RlPiBhbmQgdGhlIG1lbXBvb2wgaXMgY3VycmVudGx5CmZ1bGwsIHdlIG11c3QgY2hlY2sgaWYgdGhlcmUgZXhpc3RzIGEgPGNvZGU+VHg8L2NvZGU+IG9mIGxvd2VyIHByaW9yaXR5IHRoYXQgY2FuIGJlIGV2aWN0ZWQKdG8gbWFrZSByb29tIGZvciB0aGUgbmV3IDxjb2RlPlR4PC9jb2RlPiB3aXRoIGhpZ2hlciBwcmlvcml0eSBhbmQgd2l0aCBzdWZmaWNpZW50IHNpemUKY2FwYWNpdHkgbGVmdC48L3A+CjxwPklmIHN1Y2ggYSA8Y29kZT5UeDwvY29kZT4gZXhpc3RzLCB3ZSBmaW5kIGl0IGJ5IG9idGFpbmluZyBhIHJlYWQgbG9jayBhbmQgc29ydGluZyB0aGUKcHJpb3JpdHkgcXVldWUgaW5kZXguIE9uY2Ugc29ydGVkLCB3ZSBmaW5kIHRoZSBmaXJzdCA8Y29kZT5UeDwvY29kZT4gd2l0aCBsb3dlciBwcmlvcml0eSBhbmQKc2l6ZSBzdWNoIHRoYXQgdGhlIG5ldyA8Y29kZT5UeDwvY29kZT4gd291bGQgZml0IHdpdGhpbiB0aGUgbWVtcG9vbCdzIHNpemUgbGltaXQuIFdlIHRoZW4KcmVtb3ZlIHRoaXMgPGNvZGU+VHg8L2NvZGU+IGZyb20gdGhlIHByaW9yaXR5IHF1ZXVlIGluZGV4IGFzIHdlbGwgYXMgdGhlIDxjb2RlPiZsdDtzZW5kZXI6KlR4Jmd0OzwvY29kZT4KbWFwcGluZy48L3A+CjxwPlRoaXMgd2lsbCByZXF1aXJlIGFkZGl0aW9uYWwgPGNvZGU+TyhuKTwvY29kZT4gc3BhY2UgYW5kIDxjb2RlPk8obipsb2cobikpPC9jb2RlPiBydW50aW1lIGNvbXBsZXhpdHkuIE5vdGUgdGhhdCB0aGUgc3BhY2UgY29tcGxleGl0eSBkb2VzIG5vdCBkZXBlbmQgb24gdGhlIHNpemUgb2YgdGhlIHR4LjwvcD4KPGgzIGlkPSJnb3NzaXBpbmciPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjZ29zc2lwaW5nIj4jPC9hPiBHb3NzaXBpbmc8L2gzPgo8cD5XZSBrZWVwIHRoZSBleGlzdGluZyB0aHJlYWQtc2FmZSBsaW5rZWQgbGlzdCBhcyBhbiBhZGRpdGlvbmFsIGluZGV4LiBVc2luZyB0aGlzCmluZGV4LCB3ZSBjYW4gZWZmaWNpZW50bHkgZ29zc2lwIHRyYW5zYWN0aW9ucyBpbiB0aGUgc2FtZSBtYW5uZXIgYXMgdGhleSBhcmUKZ29zc2lwZWQgbm93IChGSUZPKS48L3A+CjxwPkdvc3NpcGluZyB0cmFuc2FjdGlvbnMgd2lsbCBub3QgcmVxdWlyZSBsb2NraW5nIGFueSBvdGhlciBpbmRleGVzLjwvcD4KPGgzIGlkPSJwZXJmb3JtYW5jZSI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNwZXJmb3JtYW5jZSI+IzwvYT4gUGVyZm9ybWFuY2U8L2gzPgo8cD5QZXJmb3JtYW5jZSBzaG91bGQgbGFyZ2VseSByZW1haW4gdW5hZmZlY3RlZCBhcGFydCBmcm9tIHRoZSBzcGFjZSBvdmVyaGVhZCBvZgprZWVwaW5nIGFuIGFkZGl0aW9uYWwgcHJpb3JpdHkgcXVldWUgaW5kZXggYW5kIHRoZSBjYXNlIHdoZXJlIHdlIG5lZWQgdG8gZXZpY3QKdHJhbnNhY3Rpb25zIGZyb20gdGhlIHByaW9yaXR5IHF1ZXVlIGluZGV4LiBUaGVyZSBzaG91bGQgYmUgbm8gcmVhZHMgd2hpY2gKYmxvY2sgd3JpdGVzIG9uIGFueSBpbmRleDwvcD4KPGgyIGlkPSJmdXR1cmUtaW1wcm92ZW1lbnRzIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2Z1dHVyZS1pbXByb3ZlbWVudHMiPiM8L2E+IEZ1dHVyZSBJbXByb3ZlbWVudHM8L2gyPgo8cD5UaGVyZSBhcmUgYSBmZXcgY29uc2lkZXJhYmxlIHdheXMgaW4gd2hpY2ggdGhlIHByb3Bvc2VkIGRlc2lnbiBjYW4gYmUgaW1wcm92ZWQgb3IKZXhwYW5kZWQgdXBvbi4gTmFtZWx5LCB0cmFuc2FjdGlvbiBnb3NzaXBpbmcgYW5kIGZvciB0aGUgYWJpbGl0eSB0byBzdXBwb3J0Cm11bHRpcGxlIHRyYW5zYWN0aW9ucyBmcm9tIHRoZSBzYW1lIDxjb2RlPnNlbmRlcjwvY29kZT4uPC9wPgo8cD5XaXRoIHJlZ2FyZHMgdG8gdHJhbnNhY3Rpb24gZ29zc2lwaW5nLCB3ZSBuZWVkIGVtcGlyaWNhbGx5IHZhbGlkYXRlIHdoZXRoZXIgd2UKbmVlZCB0byBnb3NzaXAgYnkgcHJpb3JpdHkuIEluIGFkZGl0aW9uLCB0aGUgY3VycmVudCBtZXRob2Qgb2YgZ29zc2lwaW5nIG1heSBub3QKYmUgdGhlIG1vc3QgZWZmaWNpZW50LiBTcGVjaWZpY2FsbHksIGJyb2FkY2FzdGluZyBhbGwgdGhlIHRyYW5zYWN0aW9ucyBhIG5vZGUKaGFzIGluIGl0J3MgbWVtcG9vbCB0byBpdCdzIHBlZXJzLiBSYXRoZXIsIHdlIHNob3VsZCBleHBsb3JlIGZvciB0aGUgYWJpbGl0eSB0bwpnb3NzaXAgdHJhbnNhY3Rpb25zIG9uIGEgcmVxdWVzdC9yZXNwb25zZSBiYXNpcyBzaW1pbGFyIHRvIEV0aGVyZXVtIGFuZCBvdGhlcgpwcm90b2NvbHMuIE5vdCBvbmx5IGRvZXMgdGhpcyByZWR1Y2UgYmFuZHdpZHRoIGFuZCBjb21wbGV4aXR5LCBidXQgYWxzbyBhbGxvd3MKZm9yIHVzIHRvIGV4cGxvcmUgZ29zc2lwaW5nIGJ5IHByaW9yaXR5IG9yIG90aGVyIGRpbWVuc2lvbnMgbW9yZSBlZmZpY2llbnRseS48L3A+CjxwPkFsbG93aW5nIGZvciBtdWx0aXBsZSB0cmFuc2FjdGlvbnMgZnJvbSB0aGUgc2FtZSA8Y29kZT5zZW5kZXI8L2NvZGU+IGlzIGltcG9ydGFudCBhbmQgd2lsbAptb3N0IGxpa2VseSBiZSBhIG5lZWRlZCBmZWF0dXJlIGluIHRoZSBmdXR1cmUgZGV2ZWxvcG1lbnQgb2YgdGhlIG1lbXBvb2wsIGJ1dCBmb3IKbm93IGl0IHN1ZmZpY2VzIHRvIGhhdmUgdGhlIHByZWxpbWluYXJ5IGRlc2lnbiBhZ3JlZWQgdXBvbi4gSGF2aW5nIHRoZSBhYmlsaXR5CnRvIHN1cHBvcnQgbXVsdGlwbGUgdHJhbnNhY3Rpb25zIHBlciA8Y29kZT5zZW5kZXI8L2NvZGU+IHdpbGwgcmVxdWlyZSBjYXJlZnVsIHRob3VnaHQgd2l0aApyZWdhcmRzIHRvIHRoZSBpbnRlcnBsYXkgb2YgdGhlIGNvcnJlc3BvbmRpbmcgQUJDSSBhcHBsaWNhdGlvbi4gUmVnYXJkbGVzcywgdGhlCnByb3Bvc2VkIGRlc2lnbiBzaG91bGQgYWxsb3cgZm9yIGFkYXB0YXRpb25zIHRvIHN1cHBvcnQgdGhpcyBmZWF0dXJlIGluIGEKbm9uLWNvbnRlbnRpb3VzIGFuZCBiYWNrd2FyZHMgY29tcGF0aWJsZSBtYW5uZXIuPC9wPgo8aDIgaWQ9ImNvbnNlcXVlbmNlcyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNjb25zZXF1ZW5jZXMiPiM8L2E+IENvbnNlcXVlbmNlczwvaDI+CjxoMyBpZD0icG9zaXRpdmUiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjcG9zaXRpdmUiPiM8L2E+IFBvc2l0aXZlPC9oMz4KPHVsPgo8bGk+VHJhbnNhY3Rpb25zIGFyZSBhbGxvd2VkIHRvIGJlIHByaW9yaXRpemVkIGJ5IHRoZSBhcHBsaWNhdGlvbi48L2xpPgo8L3VsPgo8aDMgaWQ9Im5lZ2F0aXZlIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI25lZ2F0aXZlIj4jPC9hPiBOZWdhdGl2ZTwvaDM+Cjx1bD4KPGxpPkluY3JlYXNlZCBzaXplIG9mIHRoZSA8Y29kZT5SZXNwb25zZUNoZWNrVHg8L2NvZGU+IFByb3RvY29sIEJ1ZmZlciB0eXBlLjwvbGk+CjxsaT5DYXVzYWwgb3JkZXJpbmcgaXMgTk9UIG1haW50YWluZWQuCjx1bD4KPGxpPkl0IGlzIHBvc3NpYmxlIHRoYXQgY2VydGFpbiB0cmFuc2FjdGlvbnMgYnJvYWRjYXN0ZWQgaW4gYSBwYXJ0aWN1bGFyIG9yZGVyIG1heQpwYXNzIDxjb2RlPkNoZWNrVHg8L2NvZGU+IGJ1dCBub3QgZW5kIHVwIGJlaW5nIGNvbW1pdHRlZCBpbiBhIGJsb2NrIGJlY2F1c2UgdGhleSBmYWlsCjxjb2RlPkNoZWNrVHg8L2NvZGU+IGxhdGVyLiBlLmcuIENvbnNpZGVyIFR4PHN1Yj4xPC9zdWI+IHRoYXQgc2VuZHMgZnVuZHMgZnJvbSBleGlzdGluZwphY2NvdW50IEFsaWNlIHRvIGEgPGVtPm5ldzwvZW0+IGFjY291bnQgQm9iIHdpdGggcHJpb3JpdHkgUDxzdWI+MTwvc3ViPiBhbmQgdGhlbiBsYXRlcgpCb2IncyA8ZW0+bmV3PC9lbT4gYWNjb3VudCBzZW5kcyBmdW5kcyBiYWNrIHRvIEFsaWNlIGluIFR4PHN1Yj4yPC9zdWI+IHdpdGggUDxzdWI+Mjwvc3ViPiwKc3VjaCB0aGF0IFA8c3ViPjI8L3N1Yj4gJmd0OyBQPHN1Yj4xPC9zdWI+LiBJZiBleGVjdXRlZCBpbiB0aGlzIG9yZGVyLCBib3RoCnRyYW5zYWN0aW9ucyB3aWxsIHBhc3MgPGNvZGU+Q2hlY2tUeDwvY29kZT4uIEhvd2V2ZXIsIHdoZW4gYSBwcm9wb3NlciBpcyByZWFkeSB0byBzZWxlY3QKdHJhbnNhY3Rpb25zIGZvciB0aGUgbmV4dCBibG9jayBwcm9wb3NhbCwgdGhleSB3aWxsIHNlbGVjdCBUeDxzdWI+Mjwvc3ViPiBiZWZvcmUKVHg8c3ViPjE8L3N1Yj4gYW5kIHRodXMgVHg8c3ViPjI8L3N1Yj4gd2lsbCA8ZW0+ZmFpbDwvZW0+IGJlY2F1c2UgVHg8c3ViPjE8L3N1Yj4gbXVzdApiZSBleGVjdXRlZCBmaXJzdC4gVGhpcyBpcyBiZWNhdXNlIHRoZXJlIGlzIGEgPGVtPmNhdXNhbCBvcmRlcmluZzwvZW0+LApUeDxzdWI+MTwvc3ViPiDinp0gVHg8c3ViPjI8L3N1Yj4uIFRoZXNlIHR5cGVzIG9mIHNpdHVhdGlvbnMgc2hvdWxkIGJlIHJhcmUgYXMKbW9zdCB0cmFuc2FjdGlvbnMgYXJlIG5vdCBjYXVzYWxseSBvcmRlcmVkIGFuZCBjYW4gYmUgY2lyY3VtdmVudGVkIGJ5IHNpbXBseQp0cnlpbmcgYWdhaW4gYXQgYSBsYXRlciBwb2ludCBpbiB0aW1lIG9yIGJ5IGVuc3VyaW5nIHRoZSAmcXVvdDtjaGlsZCZxdW90OyBwcmlvcml0eSBpcwpsb3dlciB0aGFuIHRoZSAmcXVvdDtwYXJlbnQmcXVvdDsgcHJpb3JpdHkuIEluIG90aGVyIHdvcmRzLCBpZiBwYXJlbnRzIGFsd2F5cyBoYXZlCnByaW9yaWVzIHRoYXQgYXJlIGhpZ2hlciB0aGFuIHRoZWlyIGNoaWxkcmVuLCB0aGVuIHRoZSBuZXcgbWVtcG9vbCBkZXNpZ24gd2lsbAptYWludGFpbiBjYXVzYWwgb3JkZXJpbmcuPC9saT4KPC91bD4KPC9saT4KPC91bD4KPGgzIGlkPSJuZXV0cmFsIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI25ldXRyYWwiPiM8L2E+IE5ldXRyYWw8L2gzPgo8dWw+CjxsaT5BIHRyYW5zYWN0aW9uIHRoYXQgcGFzc2VkIDxjb2RlPkNoZWNrVHg8L2NvZGU+IGFuZCBlbnRlcmVkIHRoZSBtZW1wb29sIGNhbiBsYXRlciBiZSBldmljdGVkCmF0IGEgZnV0dXJlIHBvaW50IGluIHRpbWUgaWYgYSBoaWdoZXIgcHJpb3JpdHkgdHJhbnNhY3Rpb24gZW50ZXJlZCB3aGlsZSB0aGUKbWVtcG9vbCB3YXMgZnVsbC48L2xpPgo8L3VsPgo8aDIgaWQ9InJlZmVyZW5jZXMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjcmVmZXJlbmNlcyI+IzwvYT4gUmVmZXJlbmNlczwvaDI+Cjx1bD4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS90ZW5kZXJtaW50L3RlbmRlcm1pbnQvYmxvYi9tYWluL2RvY3MvcmZjL3JmYy0wMTMtYWJjaSUyQiUyQi5tZCIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+QUJDSSsrPE91dGJvdW5kTGluay8+PC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vdGVuZGVybWludC90ZW5kZXJtaW50L2Rpc2N1c3Npb25zLzYyOTUiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPk1lbXBvb2wgRGlzY3Vzc2lvbjxPdXRib3VuZExpbmsvPjwvYT48L2xpPgo8L3VsPgo8L0NvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yPgo="},null]}