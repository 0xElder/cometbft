{"remainingRequest":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/architecture/adr-059-evidence-composition-and-lifecycle.md?vue&type=template&id=162a65a6&","dependencies":[{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/architecture/adr-059-evidence-composition-and-lifecycle.md","mtime":1673295761174},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/cache-loader/dist/cjs.js","mtime":1673296285960},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1673296286086},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/cache-loader/dist/cjs.js","mtime":1673296285960},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/vue-loader/lib/index.js","mtime":1673296285952},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/@vuepress/markdown-loader/index.js","mtime":1673296286103}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PGgxIGlkPSJhZHItMDU5LWV2aWRlbmNlLWNvbXBvc2l0aW9uLWFuZC1saWZlY3ljbGUiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjYWRyLTA1OS1ldmlkZW5jZS1jb21wb3NpdGlvbi1hbmQtbGlmZWN5Y2xlIj4jPC9hPiBBRFIgMDU5OiBFdmlkZW5jZSBDb21wb3NpdGlvbiBhbmQgTGlmZWN5Y2xlPC9oMT4KPGgyIGlkPSJjaGFuZ2Vsb2ciPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjY2hhbmdlbG9nIj4jPC9hPiBDaGFuZ2Vsb2c8L2gyPgo8dWw+CjxsaT4wNC8wOS8yMDIwOiBJbml0aWFsIERyYWZ0IChVbmFicmlkZ2VkKTwvbGk+CjxsaT4wNy8wOS8yMDIwOiBGaXJzdCBWZXJzaW9uPC9saT4KPGxpPjEzLzAzLzIwMjE6IEFtbWVuZG1lbnQgdG8gYWNjb21vZGF0ZSBmb3J3YXJkIGx1bmF0aWMgYXR0YWNrPC9saT4KPGxpPjI5LzA2LzIwMjE6IEFkZCBpbmZvcm1hdGlvbiBhYm91dCBBQkNJIHNwZWNpZmljIGZpZWxkczwvbGk+CjwvdWw+CjxoMiBpZD0ic2NvcGUiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjc2NvcGUiPiM8L2E+IFNjb3BlPC9oMj4KPHA+VGhpcyBkb2N1bWVudCBpcyBkZXNpZ25lZCB0byBjb2xsYXRlIHRvZ2V0aGVyIGFuZCBzdXJmYWNlIHNvbWUgcHJlZGljYW1lbnRzIGludm9sdmluZyBldmlkZW5jZSBpbiBUZW5kZXJtaW50OiBib3RoIGl0cyBjb21wb3NpdGlvbiBhbmQgbGlmZWN5Y2xlLiBJdCB0aGVuIGFpbXMgdG8gZmluZCBhIHNvbHV0aW9uIHRvIHRoZXNlLiBUaGUgc2NvcGUgZG9lcyBub3QgZXh0ZW5kIHRvIHRoZSB2ZXJpZmljYXRpb24gbm9yIGRldGVjdGlvbiBvZiBjZXJ0YWluIHR5cGVzIG9mIGV2aWRlbmNlIGJ1dCBjb25jZXJucyBpdHNlbGYgbWFpbmx5IHdpdGggdGhlIGdlbmVyYWwgZm9ybSBvZiBldmlkZW5jZSBhbmQgaG93IGl0IG1vdmVzIGZyb20gaW5jZXB0aW9uIHRvIGFwcGxpY2F0aW9uLjwvcD4KPGgyIGlkPSJiYWNrZ3JvdW5kIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2JhY2tncm91bmQiPiM8L2E+IEJhY2tncm91bmQ8L2gyPgo8cD5Gb3IgYSBsb25nIHRpbWUgPGNvZGU+RHVwbGljYXRlVm90ZUV2aWRlbmNlPC9jb2RlPiwgZm9ybWVkIGluIHRoZSBjb25zZW5zdXMgcmVhY3Rvciwgd2FzIHRoZSBvbmx5IGV2aWRlbmNlIFRlbmRlcm1pbnQgaGFkLiBJdCB3YXMgcHJvZHVjZWQgd2hlbmV2ZXIgdHdvIHZvdGVzIGZyb20gdGhlIHNhbWUgdmFsaWRhdG9yIGluIHRoZSBzYW1lIHJvdW5kCndhcyBvYnNlcnZlZCBhbmQgdGh1cyBpdCB3YXMgZGVzaWduZWQgdGhhdCBlYWNoIGV2aWRlbmNlIHdhcyBmb3IgYSBzaW5nbGUgdmFsaWRhdG9yLiBJdCB3YXMgcHJlZGljdGVkIHRoYXQgdGhlcmUgbWF5IGNvbWUgbW9yZSBmb3JtcyBvZiBldmlkZW5jZSBhbmQgdGh1cyA8Y29kZT5EdXBsaWNhdGVWb3RlRXZpZGVuY2U8L2NvZGU+IHdhcyB1c2VkIGFzIHRoZSBtb2RlbCBmb3IgdGhlIDxjb2RlPkV2aWRlbmNlPC9jb2RlPiBpbnRlcmZhY2UgYW5kIGFsc28gZm9yIHRoZSBmb3JtIG9mIHRoZSBldmlkZW5jZSBkYXRhIHNlbnQgdG8gdGhlIGFwcGxpY2F0aW9uLiBJdCBpcyBpbXBvcnRhbnQgdG8gbm90ZSB0aGF0IFRlbmRlcm1pbnQgY29uY2VybnMgaXRzZWxmIGp1c3Qgd2l0aCB0aGUgZGV0ZWN0aW9uIGFuZCByZXBvcnRpbmcgb2YgZXZpZGVuY2UgYW5kIGl0IGlzIHRoZSByZXNwb25zaWJpbGl0eSBvZiB0aGUgYXBwbGljYXRpb24gdG8gZXhlcmNpc2UgcHVuaXNobWVudC48L3A+CgogICAgPHRtLWNvZGUtYmxvY2sgY2xhc3M9ImNvZGVibG9jayIgbGFuZ3VhZ2U9ImdvIiBiYXNlNjQ9ImRIbHdaU0JGZG1sa1pXNWpaU0JwYm5SbGNtWmhZMlVnZXlBdkwyVjRhWE4wYVc1bkNpQWdTR1ZwWjJoMEtDa2dhVzUwTmpRZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0x5OGdhR1ZwWjJoMElHOW1JSFJvWlNCdlptWmxibk5sQ2lBZ1ZHbHRaU2dwSUhScGJXVXVWR2x0WlNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTHk4Z2RHbHRaU0J2WmlCMGFHVWdiMlptWlc1elpRb2dJRUZrWkhKbGMzTW9LU0JiWFdKNWRHVWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDOHZJR0ZrWkhKbGMzTWdiMllnZEdobElHOW1abVZ1WkdsdVp5QjJZV3hwWkdGMGIzSUtJQ0JDZVhSbGN5Z3BJRnRkWW5sMFpTQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXZMeUJpZVhSbGN5QjNhR2xqYUNCamIyMXdjbWx6WlNCMGFHVWdaWFpwWkdWdVkyVUtJQ0JJWVhOb0tDa2dXMTFpZVhSbElDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXZMeUJvWVhOb0lHOW1JSFJvWlNCbGRtbGtaVzVqWlFvZ0lGWmxjbWxtZVNoamFHRnBia2xFSUhOMGNtbHVaeXdnY0hWaVMyVjVJR055ZVhCMGJ5NVFkV0pMWlhrcElHVnljbTl5SUM4dklIWmxjbWxtZVNCMGFHVWdaWFpwWkdWdVkyVUtJQ0JGY1hWaGJDaEZkbWxrWlc1alpTa2dZbTl2YkNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXZMeUJqYUdWamF5QmxjWFZoYkdsMGVTQnZaaUJsZG1sa1pXNWpaUW9LSUNCV1lXeHBaR0YwWlVKaGMybGpLQ2tnWlhKeWIzSUtJQ0JUZEhKcGJtY29LU0J6ZEhKcGJtY0tmUW89Ij48L3RtLWNvZGUtYmxvY2s+CiAgICAKICAgIDx0bS1jb2RlLWJsb2NrIGNsYXNzPSJjb2RlYmxvY2siIGxhbmd1YWdlPSJnbyIgYmFzZTY0PSJkSGx3WlNCRWRYQnNhV05oZEdWV2IzUmxSWFpwWkdWdVkyVWdjM1J5ZFdOMElIc0tJQ0JXYjNSbFFTQXFWbTkwWlFvZ0lGWnZkR1ZDSUNwV2IzUmxDZ29nSUhScGJXVnpkR0Z0Y0NCMGFXMWxMbFJwYldVZ0x5OGdkR0ZyWlc0Z1puSnZiU0IwYUdVZ1lteHZZMnNnZEdsdFpRcDlDZz09Ij48L3RtLWNvZGUtYmxvY2s+CiAgICA8cD5UZW5kZXJtaW50IGhhcyBub3cgaW50cm9kdWNlZCBhIG5ldyB0eXBlIG9mIGV2aWRlbmNlIHRvIHByb3RlY3QgbGlnaHQgY2xpZW50cyBmcm9tIGJlaW5nIGF0dGFja2VkLiBUaGlzIDxjb2RlPkxpZ2h0Q2xpZW50QXR0YWNrRXZpZGVuY2U8L2NvZGU+IChzZWUgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2luZm9ybWFsc3lzdGVtcy90ZW5kZXJtaW50LXJzL2Jsb2IvMzFjYTNlNjRjZTkwNzg2YzE3MzRjYWYxODZlMzA1OTU4MzIyOTdhNC9kb2NzL3NwZWMvbGlnaHRjbGllbnQvYXR0YWNrcy9ldmlkZW5jZS1oYW5kbGluZy5tZCIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+aGVyZTxPdXRib3VuZExpbmsvPjwvYT4gZm9yIG1vcmUgaW5mb3JtYXRpb24pIGlzIHZhc3RseSBkaWZmZXJlbnQgdG8gPGNvZGU+RHVwbGljYXRlVm90ZUV2aWRlbmNlPC9jb2RlPiBpbiB0aGF0IGl0IGlzIHBoeXNpY2FsbHkgYSBtdWNoIGRpZmZlcmVudCBzaXplIGNvbnRhaW5pbmcgYSBjb21wbGV0ZSBzaWduZWQgaGVhZGVyIGFuZCB2YWxpZGF0b3Igc2V0LiBJdCBpcyBmb3JtZWQgd2l0aGluIHRoZSBsaWdodCBjbGllbnQsIG5vdCB0aGUgY29uc2Vuc3VzIHJlYWN0b3IgYW5kIHJlcXVpcmVzIGEgbG90IG1vcmUgaW5mb3JtYXRpb24gZnJvbSBzdGF0ZSB0byB2ZXJpZnkgKDxjb2RlPlZlcmlmeUxpZ2h0Q2xpZW50QXR0YWNrKGNvbW1vbkhlYWRlciwgdHJ1c3RlZEhlYWRlciAqU2lnbmVkSGVhZGVyLCBjb21tb25WYWxzICpWYWxpZGF0b3JTZXQpPC9jb2RlPiAgdnMgPGNvZGU+VmVyaWZ5RHVwbGljYXRlVm90ZShjaGFpbklEIHN0cmluZywgcHViS2V5IFB1YktleSk8L2NvZGU+KS4gRmluYWxseSBpdCBiYXRjaGVzIHZhbGlkYXRvcnMgdG9nZXRoZXIgKGEgc2luZ2xlIHBpZWNlIG9mIGV2aWRlbmNlIHRoYXQgaW1wbGljYXRlcyBtdWx0aXBsZSBtYWxpY2lvdXMgdmFsaWRhdG9ycyBhdCBhIGhlaWdodCkgYXMgb3Bwb3NlZCB0byBoYXZpbmcgaW5kaXZpZHVhbCBldmlkZW5jZSAoZWFjaCBwaWVjZSBvZiBldmlkZW5jZSBpcyBwZXIgdmFsaWRhdG9yIHBlciBoZWlnaHQpLiBUaGlzIGV2aWRlbmNlIHN0cmV0Y2hlcyB0aGUgZXhpc3RpbmcgbW91bGQgdGhhdCB3YXMgdXNlZCB0byBhY2NvbW1vZGF0ZSBuZXcgdHlwZXMgb2YgZXZpZGVuY2UgYW5kIGhhcyB0aHVzIGNhdXNlZCB1cyB0byByZWNvbnNpZGVyIGhvdyBldmlkZW5jZSBzaG91bGQgYmUgZm9ybWF0dGVkIGFuZCBwcm9jZXNzZWQuPC9wPgoKICAgIDx0bS1jb2RlLWJsb2NrIGNsYXNzPSJjb2RlYmxvY2siIGxhbmd1YWdlPSJnbyIgYmFzZTY0PSJkSGx3WlNCTWFXZG9kRU5zYVdWdWRFRjBkR0ZqYTBWMmFXUmxibU5sSUhOMGNuVmpkQ0I3SUM4dklIQnliM0J2YzJWa0lITjBjblZqZENCcGJpQnpjR1ZqQ2lBZ1EyOXVabXhwWTNScGJtZENiRzlqYXlBcVRHbG5hSFJDYkc5amF3b2dJRU52YlcxdmJraGxhV2RvZENCcGJuUTJOQW9nSUZSNWNHVWdJRUYwZEdGamExUjVjR1VnSUNBZ0lDOHZJR1Z1ZFcwNklIdE1kVzVoZEdsamZFVnhkV2wyYjJOaGRHbHZibnhCYlc1bGMybGhmUW9LSUNCMGFXMWxjM1JoYlhBZ2RHbHRaUzVVYVcxbElDOHZJSFJoYTJWdUlHWnliMjBnZEdobElHSnNiMk5ySUhScGJXVWdZWFFnZEdobElHTnZiVzF2YmlCb1pXbG5hSFFLZlFvPSI+PC90bS1jb2RlLWJsb2NrPgogICAgPHA+PGVtPk5vdGU6IFRoZXNlIHRocmVlIGF0dGFjayB0eXBlcyBoYXZlIGJlZW4gcHJvdmVuIGJ5IHRoZSByZXNlYXJjaCB0ZWFtIHRvIGJlIGV4aGF1c3RpdmU8L2VtPjwvcD4KPGgyIGlkPSJwb3NzaWJsZS1hcHByb2FjaGVzLWZvci1ldmlkZW5jZS1jb21wb3NpdGlvbiI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNwb3NzaWJsZS1hcHByb2FjaGVzLWZvci1ldmlkZW5jZS1jb21wb3NpdGlvbiI+IzwvYT4gUG9zc2libGUgQXBwcm9hY2hlcyBmb3IgRXZpZGVuY2UgQ29tcG9zaXRpb248L2gyPgo8aDMgaWQ9ImluZGl2aWR1YWwtZnJhbWV3b3JrIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2luZGl2aWR1YWwtZnJhbWV3b3JrIj4jPC9hPiBJbmRpdmlkdWFsIGZyYW1ld29yazwvaDM+CjxwPkV2aWRlbmNlIHJlbWFpbnMgb24gYSBwZXIgdmFsaWRhdG9yIGJhc2lzLiBUaGlzIGNhdXNlcyB0aGUgbGVhc3QgZGlzcnVwdGlvbiB0byB0aGUgY3VycmVudCBwcm9jZXNzZXMgYnV0IHJlcXVpcmVzIHRoYXQgd2UgYnJlYWsgPGNvZGU+TGlnaHRDbGllbnRBdHRhY2tFdmlkZW5jZTwvY29kZT4gaW50byBzZXZlcmFsIHBpZWNlcyBvZiBldmlkZW5jZSBmb3IgZWFjaCBtYWxpY2lvdXMgdmFsaWRhdG9yLiBUaGlzIG5vdCBvbmx5IGhhcyBwZXJmb3JtYW5jZSBjb25zZXF1ZW5jZXMgaW4gdGhhdCB0aGVyZSBhcmUgbiB0aW1lcyBhcyBtYW55IGRhdGFiYXNlIG9wZXJhdGlvbnMgYW5kIHRoYXQgdGhlIGdvc3NpcGluZyBvZiBldmlkZW5jZSB3aWxsIHJlcXVpcmUgbW9yZSBiYW5kd2lkdGggdGhlbiBuZWNlc3NhcnkgKGJ5IHJlcXVpcmluZyBhIGhlYWRlciBmb3IgZWFjaCBwaWVjZSkgYnV0IGl0IHBvdGVudGlhbGx5IGltcGFjdHMgb3VyIGFiaWxpdHkgdG8gdmFsaWRhdGUgaXQuIEluIGJhdGNoIGZvcm0sIHRoZSBmdWxsIG5vZGUgY2FuIHJ1biB0aGUgc2FtZSBwcm9jZXNzIHRoZSBsaWdodCBjbGllbnQgZGlkIHRvIHNlZSB0aGF0IDEvMyB2YWxpZGF0aW5nIHBvd2VyIHdhcyBwcmVzZW50IGluIGJvdGggdGhlIGNvbW1vbiBibG9jayBhbmQgdGhlIGNvbmZsaWN0aW5nIGJsb2NrIHdoZXJlYXMgdGhpcyBiZWNvbWVzIG1vcmUgZGlmZmljdWx0IHRvIHZlcmlmeSBpbmRpdmlkdWFsbHkgd2l0aG91dCBvcGVuaW5nIHRoZSBwb3NzaWJpbGl0eSB0aGF0IG1hbGljaW91cyB2YWxpZGF0b3JzIGZvcmdlIGV2aWRlbmNlIGFnYWluc3QgaW5ub2NlbnQgLiBOb3Qgb25seSB0aGF0LCBidXQgPGNvZGU+TGlnaHRDbGllbnRBdHRhY2tFdmlkZW5jZTwvY29kZT4gYWxzbyBkZWFscyB3aXRoIGFtbmVzaWEgYXR0YWNrcyB3aGljaCB1bmZvcnR1bmF0ZWx5IGhhdmUgdGhlIGNoYXJhY3RlcmlzdGljIHdoZXJlIHdlIGtub3cgdGhlIHNldCBvZiB2YWxpZGF0b3JzIGludm9sdmVkIGJ1dCBub3QgdGhlIHN1YnNldCB0aGF0IHdlcmUgYWN0dWFsbHkgbWFsaWNpb3VzIChtb3JlIHRvIGJlIHNhaWQgYWJvdXQgdGhpcyBsYXRlcikuIEFuZCBmaW5hbGx5IHNwbGl0dGluZyB0aGUgZXZpZGVuY2UgaW50byBpbmRpdmlkdWFsIHBpZWNlcyBtYWtlcyBpdCBkaWZmaWN1bHQgdG8gdW5kZXJzdGFuZCB0aGUgc2V2ZXJpdHkgb2YgdGhlIGF0dGFjayAoaS5lLiB0aGUgdG90YWwgdm90aW5nIHBvd2VyIGludm9sdmVkIGluIHRoZSBhdHRhY2spPC9wPgo8aDQgaWQ9ImFuLWV4YW1wbGUtb2YtYS1wb3NzaWJsZS1pbXBsZW1lbnRhdGlvbi1wYXRoIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2FuLWV4YW1wbGUtb2YtYS1wb3NzaWJsZS1pbXBsZW1lbnRhdGlvbi1wYXRoIj4jPC9hPiBBbiBleGFtcGxlIG9mIGEgcG9zc2libGUgaW1wbGVtZW50YXRpb24gcGF0aDwvaDQ+CjxwPldlIHdvdWxkIGlnbm9yZSBhbW5lc2lhIGV2aWRlbmNlIChhcyBpbmRpdmlkdWFsbHkgaXQncyBoYXJkIHRvIG1ha2UpIGFuZCByZXZlcnQgdG8gdGhlIGluaXRpYWwgc3BsaXQgd2UgaGFkIGJlZm9yZSB3aGVyZSA8Y29kZT5EdXBsaWNhdGVWb3RlRXZpZGVuY2U8L2NvZGU+IGlzIGFsc28gdXNlZCBmb3IgbGlnaHQgY2xpZW50IGVxdWl2b2NhdGlvbiBhdHRhY2tzIGFuZCB0aHVzIHdlIG9ubHkgbmVlZCA8Y29kZT5MdW5hdGljRXZpZGVuY2U8L2NvZGU+LiBXZSB3b3VsZCBhbHNvIG1vc3QgbGlrZWx5IG5lZWQgdG8gcmVtb3ZlIDxjb2RlPlZlcmlmeTwvY29kZT4gZnJvbSB0aGUgaW50ZXJmYWNlIGFzIHRoaXMgaXNuJ3QgcmVhbGx5IHNvbWV0aGluZyB0aGF0IGNhbiBiZSB1c2VkLjwvcD4KCiAgICA8dG0tY29kZS1ibG9jayBjbGFzcz0iY29kZWJsb2NrIiBsYW5ndWFnZT0iIGdvIiBiYXNlNjQ9ImRIbHdaU0JNZFc1aGRHbGpSWFpwWkdWdVkyVWdjM1J5ZFdOMElIc2dMeThnYVc1a2FYWnBaSFZoYkNCc2RXNWhkR2xqSUdGMGRHRmphd29nSUdobFlXUmxjaUFxU0dWaFpHVnlDaUFnWTI5dGJXOXVTR1ZwWjJoMElHbHVkRFkwQ2lBZ2RtOTBaU0FxVm05MFpRb0tJQ0IwYVcxbGMzUmhiWEFnZEdsdFpTNVVhVzFsSUM4dklHOXVZMlVnWVdkaGFXNGdkR0ZyWlc0Z1puSnZiU0IwYUdVZ1lteHZZMnNnZEdsdFpTQmhkQ0IwYUdVZ2FHVnBaMmgwSUc5bUlIUm9aU0JqYjIxdGIyNGdhR1ZoWkdWeUNuMEsiPjwvdG0tY29kZS1ibG9jaz4KICAgIDxoMyBpZD0iYmF0Y2gtZnJhbWV3b3JrIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2JhdGNoLWZyYW1ld29yayI+IzwvYT4gQmF0Y2ggRnJhbWV3b3JrPC9oMz4KPHA+VGhlIGxhc3QgYXBwcm9hY2ggb2YgdGhpcyBjYXRlZ29yeSB3b3VsZCBiZSB0byBjb25zaWRlciBiYXRjaCBvbmx5IGV2aWRlbmNlLiBUaGlzIHdvcmtzIGZpbmUgd2l0aCA8Y29kZT5MaWdodENsaWVudEF0dGFja0V2aWRlbmNlPC9jb2RlPiBidXQgd291bGQgcmVxdWlyZSBhbHRlcmF0aW9ucyB0byA8Y29kZT5EdXBsaWNhdGVWb3RlRXZpZGVuY2U8L2NvZGU+IHdoaWNoIHdvdWxkIG1vc3QgbGlrZWx5IG1lYW4gdGhhdCB0aGUgY29uc2Vuc3VzIHdvdWxkIHNlbmQgY29uZmxpY3Rpbmcgdm90ZXMgdG8gYSBidWZmZXIgaW4gdGhlIGV2aWRlbmNlIG1vZHVsZSB3aGljaCB3b3VsZCB0aGVuIHdyYXAgYWxsIHRoZSB2b3RlcyB0b2dldGhlciBwZXIgaGVpZ2h0IGJlZm9yZSBnb3NzaXBpbmcgdGhlbSB0byBvdGhlciBub2RlcyBhbmQgdHJ5aW5nIHRvIGNvbW1pdCBpdCBvbiBjaGFpbi4gQXQgYSBnbGFuY2UgdGhpcyBtYXkgaW1wcm92ZSBJTyBhbmQgdmVyaWZpY2F0aW9uIHNwZWVkIGFuZCBwZXJoYXBzIG1vcmUgaW1wb3J0YW50bHkgZ3JvdXBpbmcgdmFsaWRhdG9ycyBnaXZlcyB0aGUgYXBwbGljYXRpb24gYW5kIFRlbmRlcm1pbnQgYSBiZXR0ZXIgb3ZlcnZpZXcgb2YgdGhlIHNldmVyaXR5IG9mIHRoZSBhdHRhY2suPC9wPgo8cD5Ib3dldmVyIGluZGl2aWR1YWwgZXZpZGVuY2UgaGFzIHRoZSBhZHZhbnRhZ2UgdGhhdCBpdCBpcyBlYXN5IHRvIGNoZWNrIGlmIGEgbm9kZSBhbHJlYWR5IGhhcyB0aGF0IGV2aWRlbmNlIG1lYW5pbmcgd2UganVzdCBuZWVkIHRvIGNoZWNrIGhhc2hlcyB0byBrbm93IHRoYXQgd2UndmUgYWxyZWFkeSB2ZXJpZmllZCB0aGlzIGV2aWRlbmNlIGJlZm9yZS4gQmF0Y2hpbmcgZXZpZGVuY2Ugd291bGQgaW1wbHkgdGhhdCBlYWNoIG5vZGUgbWF5IGhhdmUgYSBkaWZmZXJlbnQgY29tYmluYXRpb24gb2YgZHVwbGljYXRlIHZvdGVzIHdoaWNoIG1heSBjb21wbGljYXRlIHRoaW5ncy48L3A+CjxoNCBpZD0iYW4tZXhhbXBsZS1vZi1hLXBvc3NpYmxlLWltcGxlbWVudGF0aW9uLXBhdGgtMiI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNhbi1leGFtcGxlLW9mLWEtcG9zc2libGUtaW1wbGVtZW50YXRpb24tcGF0aC0yIj4jPC9hPiBBbiBleGFtcGxlIG9mIGEgcG9zc2libGUgaW1wbGVtZW50YXRpb24gcGF0aDwvaDQ+CjxwPjxjb2RlPkxpZ2h0Q2xpZW50QXR0YWNrRXZpZGVuY2U8L2NvZGU+IHdvbid0IGNoYW5nZSBidXQgdGhlIGV2aWRlbmNlIGludGVyZmFjZSB3aWxsIG5lZWQgdG8gbG9vayBsaWtlIHRoZSBwcm9wb3NlZCBvbmUgYWJvdmUgYW5kIDxjb2RlPkR1cGxpY2F0ZVZvdGVFdmlkZW5jZTwvY29kZT4gd2lsbCBuZWVkIHRvIGNoYW5nZSB0byBlbmNvbXBhc3MgbXVsdGlwbGUgZG91YmxlIHZvdGVzLiBBIHByb2JsZW0gd2l0aCBiYXRjaCBldmlkZW5jZSBpcyB0aGF0IGl0IG5lZWRzIHRvIGJlIHVuaXF1ZSB0byBhdm9pZCBwZW9wbGUgZnJvbSBzdWJtaXR0aW5nIGRpZmZlcmVudCBwZXJtdXRhdGlvbnMuPC9wPgo8aDIgaWQ9ImRlY2lzaW9uIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2RlY2lzaW9uIj4jPC9hPiBEZWNpc2lvbjwvaDI+CjxwPlRoZSBkZWNpc2lvbiBpcyB0byBhZG9wdCBhIGh5YnJpZCBkZXNpZ24uPC9wPgo8cD5XZSBhbGxvdyBpbmRpdmlkdWFsIGFuZCBiYXRjaCBldmlkZW5jZSB0byBjb2V4aXN0IHRvZ2V0aGVyLCBtZWFuaW5nIHRoYXQgdmVyaWZpY2F0aW9uIGlzIGRvbmUgZGVwZW5kaW5nIG9uIHRoZSBldmlkZW5jZSB0eXBlIGFuZCB0aGF0ICB0aGUgYnVsayBvZiB0aGUgd29yayBpcyBkb25lIGluIHRoZSBldmlkZW5jZSBwb29sIGl0c2VsZiAoaW5jbHVkaW5nIGZvcm1pbmcgdGhlIGV2aWRlbmNlIHRvIGJlIHNlbnQgdG8gdGhlIGFwcGxpY2F0aW9uKS48L3A+CjxoMiBpZD0iZGV0YWlsZWQtZGVzaWduIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2RldGFpbGVkLWRlc2lnbiI+IzwvYT4gRGV0YWlsZWQgRGVzaWduPC9oMj4KPHA+RXZpZGVuY2UgaGFzIHRoZSBmb2xsb3dpbmcgc2ltcGxlIGludGVyZmFjZTo8L3A+CgogICAgPHRtLWNvZGUtYmxvY2sgY2xhc3M9ImNvZGVibG9jayIgbGFuZ3VhZ2U9ImdvIiBiYXNlNjQ9ImRIbHdaU0JGZG1sa1pXNWpaU0JwYm5SbGNtWmhZMlVnZXlBZ0x5OXdjbTl3YjNObFpBb2dJRWhsYVdkb2RDZ3BJR2x1ZERZMElDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDOHZJR2hsYVdkb2RDQnZaaUIwYUdVZ2IyWm1aVzV6WlFvZ0lFSjVkR1Z6S0NrZ1cxMWllWFJsSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM4dklHSjVkR1Z6SUhkb2FXTm9JR052YlhCeWFYTmxJSFJvWlNCbGRtbGtaVzVqWlFvZ0lFaGhjMmdvS1NCYlhXSjVkR1VnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM4dklHaGhjMmdnYjJZZ2RHaGxJR1YyYVdSbGJtTmxDaUFnVm1Gc2FXUmhkR1ZDWVhOcFl5Z3BJR1Z5Y205eUNpQWdVM1J5YVc1bktDa2djM1J5YVc1bkNuMEsiPjwvdG0tY29kZS1ibG9jaz4KICAgIDxwPlRoZSBjaGFuZ2luZyBvZiB0aGUgaW50ZXJmYWNlIGlzIGJhY2t3YXJkcyBjb21wYXRpYmxlIGFzIHRoZXNlIG1ldGhvZHMgYXJlIGFsbCBwcmVzZW50IGluIHRoZSBwcmV2aW91cyB2ZXJzaW9uIG9mIHRoZSBpbnRlcmZhY2UuIEhvd2V2ZXIsIG5ldHdvcmtzIHdpbGwgbmVlZCB0byB1cGdyYWRlIHRvIGJlIGFibGUgdG8gcHJvY2VzcyB0aGUgbmV3IGV2aWRlbmNlIGFzIHZlcmlmaWNhdGlvbiBoYXMgY2hhbmdlZC48L3A+CjxwPldlIGhhdmUgdHdvIGNvbmNyZXRlIHR5cGVzIG9mIGV2aWRlbmNlIHRoYXQgZnVsZmlsIHRoaXMgaW50ZXJmYWNlPC9wPgoKICAgIDx0bS1jb2RlLWJsb2NrIGNsYXNzPSJjb2RlYmxvY2siIGxhbmd1YWdlPSJnbyIgYmFzZTY0PSJkSGx3WlNCTWFXZG9kRU5zYVdWdWRFRjBkR0ZqYTBWMmFXUmxibU5sSUhOMGNuVmpkQ0I3Q2lBZ1EyOXVabXhwWTNScGJtZENiRzlqYXlBcVRHbG5hSFJDYkc5amF3b2dJRU52YlcxdmJraGxhV2RvZENCcGJuUTJOQ0F2THlCMGFHVWdiR0Z6ZENCb1pXbG5hSFFnWVhRZ2QyaHBZMmdnZEdobElIQnlhVzFoY25rZ2NISnZkbWxrWlhJZ1lXNWtJSGRwZEc1bGMzTWdjSEp2ZG1sa1pYSWdhR0ZrSUhSb1pTQnpZVzFsSUdobFlXUmxjZ29LSUNBdkx5QmhZbU5wSUhOd1pXTnBabWxqSUdsdVptOXliV0YwYVc5dUNnbENlWHBoYm5ScGJtVldZV3hwWkdGMGIzSnpJRnRkS2xaaGJHbGtZWFJ2Y2lBdkx5QjJZV3hwWkdGMGIzSnpJR2x1SUhSb1pTQjJZV3hwWkdGMGIzSWdjMlYwSUhSb1lYUWdiV2x6WW1Wb1lYWmxaQ0JwYmlCamNtVmhkR2x1WnlCMGFHVWdZMjl1Wm14cFkzUnBibWNnWW14dlkyc0tDVlJ2ZEdGc1ZtOTBhVzVuVUc5M1pYSWdJQ0FnYVc1ME5qUWdJQ0FnSUNBZ0lDOHZJSFJ2ZEdGc0lIWnZkR2x1WnlCd2IzZGxjaUJ2WmlCMGFHVWdkbUZzYVdSaGRHOXlJSE5sZENCaGRDQjBhR1VnWTI5dGJXOXVJR2hsYVdkb2RBb0pWR2x0WlhOMFlXMXdJQ0FnSUNBZ0lDQWdJQ0IwYVcxbExsUnBiV1VnSUNBZ0x5OGdkR2x0WlhOMFlXMXdJRzltSUhSb1pTQmliRzlqYXlCaGRDQjBhR1VnWTI5dGJXOXVJR2hsYVdkb2RBcDlDZz09Ij48L3RtLWNvZGUtYmxvY2s+CiAgICA8cD53aGVyZSB0aGUgPGNvZGU+SGFzaCgpPC9jb2RlPiBpcyB0aGUgaGFzaCBvZiB0aGUgaGVhZGVyIGFuZCBjb21tb25IZWlnaHQuPC9wPgo8cD5Ob3RlOiBJdCB3YXMgYWxzbyBkaXNjdXNzZWQgd2hldGhlciB0byBpbmNsdWRlIHRoZSBjb21taXQgaGFzaCB3aGljaCBjYXB0dXJlcyB0aGUgdmFsaWRhdG9ycyB0aGF0IHNpZ25lZCB0aGUgaGVhZGVyLiBIb3dldmVyIHRoaXMgd291bGQgb3BlbiB0aGUgb3Bwb3J0dW5pdHkgZm9yIHNvbWVvbmUgdG8gcHJvcG9zZSBtdWx0aXBsZSBwZXJtdXRhdGlvbnMgb2YgdGhlIHNhbWUgZXZpZGVuY2UgKHRocm91Z2ggZGlmZmVyZW50IGNvbW1pdCBzaWduYXR1cmVzKSBoZW5jZSBpdCB3YXMgb21pdHRlZC4gQ29uc2VxdWVudGlhbGx5LCB3aGVuIGl0IGNvbWVzIHRvIHZlcmlmeWluZyBldmlkZW5jZSBpbiBhIGJsb2NrLCBmb3IgPGNvZGU+TGlnaHRDbGllbnRBdHRhY2tFdmlkZW5jZTwvY29kZT4gd2UgY2FuJ3QganVzdCBjaGVjayB0aGUgaGFzaGVzIGJlY2F1c2Ugc29tZW9uZSBjb3VsZCBoYXZlIHRoZSBzYW1lIGhhc2ggYXMgdXMgYnV0IGEgZGlmZmVyZW50IGNvbW1pdCB3aGVyZSBsZXNzIHRoYW4gMS8zIHZhbGlkYXRvcnMgdm90ZWQgd2hpY2ggd291bGQgYmUgYW4gaW52YWxpZCB2ZXJzaW9uIG9mIHRoZSBldmlkZW5jZS4gKHNlZSA8Y29kZT5mYXN0Q2hlY2s8L2NvZGU+IGZvciBtb3JlIGRldGFpbHMpPC9wPgoKICAgIDx0bS1jb2RlLWJsb2NrIGNsYXNzPSJjb2RlYmxvY2siIGxhbmd1YWdlPSJnbyIgYmFzZTY0PSJkSGx3WlNCRWRYQnNhV05oZEdWV2IzUmxSWFpwWkdWdVkyVWdld29nSUZadmRHVkJJQ3BXYjNSbENpQWdWbTkwWlVJZ0tsWnZkR1VLQ2lBZ0x5OGdZV0pqYVNCemNHVmphV1pwWXlCcGJtWnZjbTFoZEdsdmJnb0pWRzkwWVd4V2IzUnBibWRRYjNkbGNpQnBiblEyTkFvSlZtRnNhV1JoZEc5eVVHOTNaWElnSUNCcGJuUTJOQW9KVkdsdFpYTjBZVzF3SUNBZ0lDQWdJQ0IwYVcxbExsUnBiV1VLZlFvPSI+PC90bS1jb2RlLWJsb2NrPgogICAgPHA+d2hlcmUgdGhlIDxjb2RlPkhhc2goKTwvY29kZT4gaXMgdGhlIGhhc2ggb2YgdGhlIHR3byB2b3RlczwvcD4KPHA+Rm9yIGJvdGggb2YgdGhlc2UgdHlwZXMgb2YgZXZpZGVuY2UsIDxjb2RlPkJ5dGVzKCk8L2NvZGU+IHJlcHJlc2VudHMgdGhlIHByb3RvLWVuY29kZWQgYnl0ZSBhcnJheSBmb3JtYXQgb2YgdGhlIGV2aWRlbmNlIGFuZCA8Y29kZT5WYWxpZGF0ZUJhc2ljPC9jb2RlPiBpcwphbiBpbml0aWFsIGNvbnNpc3RlbmN5IGNoZWNrIHRvIG1ha2Ugc3VyZSB0aGUgZXZpZGVuY2UgaGFzIGEgdmFsaWQgc3RydWN0dXJlLjwvcD4KPGgzIGlkPSJ0aGUtZXZpZGVuY2UtcG9vbCI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiN0aGUtZXZpZGVuY2UtcG9vbCI+IzwvYT4gVGhlIEV2aWRlbmNlIFBvb2w8L2gzPgo8cD48Y29kZT5MaWdodENsaWVudEF0dGFja0V2aWRlbmNlPC9jb2RlPiBpcyBnZW5lcmF0ZWQgaW4gdGhlIGxpZ2h0IGNsaWVudCBhbmQgPGNvZGU+RHVwbGljYXRlVm90ZUV2aWRlbmNlPC9jb2RlPiBpbiBjb25zZW5zdXMuIEJvdGggYXJlIHNlbnQgdG8gdGhlIGV2aWRlbmNlIHBvb2wgdGhyb3VnaCA8Y29kZT5BZGRFdmlkZW5jZShldiBFdmlkZW5jZSkgZXJyb3I8L2NvZGU+LiBUaGUgZXZpZGVuY2UgcG9vbCdzIHByaW1hcnkgcHVycG9zZSBpcyB0byB2ZXJpZnkgZXZpZGVuY2UuIEl0IGFsc28gZ29zc2lwcyBldmlkZW5jZSB0byBvdGhlciBwZWVycycgZXZpZGVuY2UgcG9vbCBhbmQgc2VydmVzIGl0IHRvIGNvbnNlbnN1cyBzbyBpdCBjYW4gYmUgY29tbWl0dGVkIG9uIGNoYWluIGFuZCB0aGUgcmVsZXZhbnQgaW5mb3JtYXRpb24gY2FuIGJlIHNlbnQgdG8gdGhlIGFwcGxpY2F0aW9uIGluIG9yZGVyIHRvIGV4ZXJjaXNlIHB1bmlzaG1lbnQuIFdoZW4gZXZpZGVuY2UgaXMgYWRkZWQsIHRoZSBwb29sIGZpcnN0IHJ1bnMgPGNvZGU+SGFzKGV2IEV2aWRlbmNlKTwvY29kZT4gdG8gY2hlY2sgaWYgaXQgaGFzIGFscmVhZHkgcmVjZWl2ZWQgaXQgKGJ5IGNvbXBhcmluZyBoYXNoZXMpIGFuZCB0aGVuICA8Y29kZT5WZXJpZnkoZXYgRXZpZGVuY2UpIGVycm9yPC9jb2RlPi4gIE9uY2UgdmVyaWZpZWQgdGhlIGV2aWRlbmNlIHBvb2wgc3RvcmVzIGl0IGl0J3MgcGVuZGluZyBkYXRhYmFzZS4gVGhlcmUgYXJlIHR3byBkYXRhYmFzZXM6IG9uZSBmb3IgcGVuZGluZyBldmlkZW5jZSB0aGF0IGlzIG5vdCB5ZXQgY29tbWl0dGVkIGFuZCBhbm90aGVyIG9mIHRoZSBjb21taXR0ZWQgZXZpZGVuY2UgKHRvIGF2b2lkIGNvbW1pdHRpbmcgZXZpZGVuY2UgdHdpY2UpPC9wPgo8aDQgaWQ9InZlcmlmaWNhdGlvbiI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiN2ZXJpZmljYXRpb24iPiM8L2E+IFZlcmlmaWNhdGlvbjwvaDQ+CjxwPjxjb2RlPlZlcmlmeSgpPC9jb2RlPiBkb2VzIHRoZSBmb2xsb3dpbmc6PC9wPgo8dWw+CjxsaT4KPHA+VXNlIHRoZSBoYXNoIHRvIHNlZSBpZiB3ZSBhbHJlYWR5IGhhdmUgdGhpcyBldmlkZW5jZSBpbiBvdXIgY29tbWl0dGVkIGRhdGFiYXNlLjwvcD4KPC9saT4KPGxpPgo8cD5Vc2UgdGhlIGhlaWdodCB0byBjaGVjayBpZiB0aGUgZXZpZGVuY2UgaGFzbid0IGV4cGlyZWQuPC9wPgo8L2xpPgo8bGk+CjxwPklmIGl0IGhhcyBleHBpcmVkIHRoZW4gdXNlIHRoZSBoZWlnaHQgdG8gZmluZCB0aGUgYmxvY2sgaGVhZGVyIGFuZCBjaGVjayBpZiB0aGUgdGltZSBoYXMgYWxzbyBleHBpcmVkIGluIHdoaWNoIGNhc2Ugd2UgZHJvcCB0aGUgZXZpZGVuY2U8L3A+CjwvbGk+CjxsaT4KPHA+VGhlbiBwcm9jZWVkIHdpdGggc3dpdGNoIHN0YXRlbWVudCBmb3IgZWFjaCBvZiB0aGUgdHdvIGV2aWRlbmNlOjwvcD4KPC9saT4KPC91bD4KPHA+Rm9yIDxjb2RlPkR1cGxpY2F0ZVZvdGU8L2NvZGU+OjwvcD4KPHVsPgo8bGk+CjxwPkNoZWNrIHRoYXQgaGVpZ2h0LCByb3VuZCwgdHlwZSBhbmQgdmFsaWRhdG9yIGFkZHJlc3MgYXJlIHRoZSBzYW1lPC9wPgo8L2xpPgo8bGk+CjxwPkNoZWNrIHRoYXQgdGhlIEJsb2NrIElEIGlzIGRpZmZlcmVudDwvcD4KPC9saT4KPGxpPgo8cD5DaGVjayB0aGUgbG9vayB1cCB0YWJsZSBmb3IgYWRkcmVzc2VzIHRvIG1ha2Ugc3VyZSB0aGVyZSBhbHJlYWR5IGlzbid0IGV2aWRlbmNlIGFnYWluc3QgdGhpcyB2YWxpZGF0b3I8L3A+CjwvbGk+CjxsaT4KPHA+RmV0Y2ggdGhlIHZhbGlkYXRvciBzZXQgYW5kIGNvbmZpcm0gdGhhdCB0aGUgYWRkcmVzcyBpcyBpbiB0aGUgc2V0IGF0IHRoZSBoZWlnaHQgb2YgdGhlIGF0dGFjazwvcD4KPC9saT4KPGxpPgo8cD5DaGVjayB0aGF0IHRoZSBjaGFpbiBJRCBhbmQgc2lnbmF0dXJlIGlzIHZhbGlkLjwvcD4KPC9saT4KPC91bD4KPHA+Rm9yIDxjb2RlPkxpZ2h0Q2xpZW50QXR0YWNrPC9jb2RlPjwvcD4KPHVsPgo8bGk+CjxwPkZldGNoIHRoZSBjb21tb24gc2lnbmVkIGhlYWRlciBhbmQgdmFsIHNldCBmcm9tIHRoZSBjb21tb24gaGVpZ2h0IGFuZCB1c2Ugc2tpcHBpbmcgdmVyaWZpY2F0aW9uIHRvIHZlcmlmeSB0aGUgY29uZmxpY3RpbmcgaGVhZGVyPC9wPgo8L2xpPgo8bGk+CjxwPkZldGNoIHRoZSB0cnVzdGVkIHNpZ25lZCBoZWFkZXIgYXQgdGhlIHNhbWUgaGVpZ2h0IGFzIHRoZSBjb25mbGljdGluZyBoZWFkZXIgYW5kIGNvbXBhcmUgd2l0aCB0aGUgY29uZmxpY3RpbmcgaGVhZGVyIHRvIHdvcmsgb3V0IHdoaWNoIHR5cGUgb2YgYXR0YWNrIGl0IGlzIGFuZCBpbiBkb2luZyBzbyByZXR1cm4gdGhlIG1hbGljaW91cyB2YWxpZGF0b3JzLiBOT1RFOiBJZiB0aGUgbm9kZSBkb2Vzbid0IGhhdmUgdGhlIHNpZ25lZCBoZWFkZXIgYXQgdGhlIGhlaWdodCBvZiB0aGUgY29uZmxpY3RpbmcgaGVhZGVyLCBpdCBpbnN0ZWFkIGZldGNoZXMgdGhlIGxhdGVzdCBoZWFkZXIgaXQgaGFzIGFuZCBjaGVja3MgdG8gc2VlIGlmIGl0IGNhbiBwcm92ZSB0aGUgZXZpZGVuY2UgYmFzZWQgb24gYSB2aW9sYXRpb24gb2YgaGVhZGVyIHRpbWUuIFRoaXMgaXMga25vd24gYXMgZm9yd2FyZCBsdW5hdGljIGF0dGFjay48L3A+Cjx1bD4KPGxpPgo8cD5JZiBlcXVpdm9jYXRpb24sIHJldHVybiB0aGUgdmFsaWRhdG9ycyB0aGF0IHNpZ25lZCBmb3IgdGhlIGNvbW1pdHMgb2YgYm90aCB0aGUgdHJ1c3RlZCBhbmQgc2lnbmVkIGhlYWRlcjwvcD4KPC9saT4KPGxpPgo8cD5JZiBsdW5hdGljLCByZXR1cm4gdGhlIHZhbGlkYXRvcnMgZnJvbSB0aGUgY29tbW9uIHZhbCBzZXQgdGhhdCBzaWduZWQgaW4gdGhlIGNvbmZsaWN0aW5nIGJsb2NrPC9wPgo8L2xpPgo8bGk+CjxwPklmIGFtbmVzaWEsIHJldHVybiBubyB2YWxpZGF0b3JzIChzaW5jZSB3ZSBjYW4ndCBrbm93IHdoaWNoIHZhbGlkYXRvcnMgYXJlIG1hbGljaW91cykuIFRoaXMgYWxzbyBtZWFucyB0aGF0IHdlIGRvbid0IGN1cnJlbnRseSBzZW5kIGFtbmVzaWEgZXZpZGVuY2UgdG8gdGhlIGFwcGxpY2F0aW9uLCBhbHRob3VnaCB3ZSB3aWxsIGludHJvZHVjZSBtb3JlIHJvYnVzdCBhbW5lc2lhIGV2aWRlbmNlIGhhbmRsaW5nIGluIGZ1dHVyZSBUZW5kZXJtaW50IENvcmUgcmVsZWFzZXM8L3A+CjwvbGk+CjwvdWw+CjwvbGk+CjxsaT4KPHA+Q2hlY2sgdGhhdCB0aGUgaGFzaGVzIG9mIHRoZSBjb25mbGljdGluZyBoZWFkZXIgYW5kIHRoZSB0cnVzdGVkIGhlYWRlciBhcmUgZGlmZmVyZW50PC9wPgo8L2xpPgo8bGk+CjxwPkluIHRoZSBjYXNlIG9mIGEgZm9yd2FyZCBsdW5hdGljIGF0dGFjaywgd2hlcmUgdGhlIHRydXN0ZWQgaGVhZGVyIGhlaWdodCBpcyBsZXNzIHRoYW4gdGhlIGNvbmZsaWN0aW5nIGhlYWRlciBoZWlnaHQsIHRoZSBub2RlIGNoZWNrcyB0aGF0IHRoZSB0aW1lIG9mIHRoZSB0cnVzdGVkIGhlYWRlciBpcyBsYXRlciB0aGFuIHRoZSB0aW1lIG9mIGNvbmZsaWN0aW5nIGhlYWRlci4gVGhpcyBwcm92ZXMgdGhhdCB0aGUgY29uZmxpY3RpbmcgaGVhZGVyIGJyZWFrcyBtb25vdG9uaWNhbGx5IGluY3JlYXNpbmcgdGltZS4gSWYgdGhlIG5vZGUgZG9lc24ndCBoYXZlIGEgdHJ1c3RlZCBoZWFkZXIgd2l0aCBhIGxhdGVyIHRpbWUgdGhlbiBpdCBpcyB1bmFibGUgdG8gdmFsaWRhdGUgdGhlIGV2aWRlbmNlIGZvciBub3cuPC9wPgo8L2xpPgo8bGk+CjxwPkxhc3RseSwgZm9yIGVhY2ggdmFsaWRhdG9yLCBjaGVjayB0aGUgbG9vayB1cCB0YWJsZSB0byBtYWtlIHN1cmUgdGhlcmUgYWxyZWFkeSBpc24ndCBldmlkZW5jZSBhZ2FpbnN0IHRoaXMgdmFsaWRhdG9yPC9wPgo8L2xpPgo8L3VsPgo8cD5BZnRlciB2ZXJpZmljYXRpb24gd2UgcGVyc2lzdCB0aGUgZXZpZGVuY2Ugd2l0aCB0aGUga2V5IDxjb2RlPmhlaWdodC9oYXNoPC9jb2RlPiB0byB0aGUgcGVuZGluZyBldmlkZW5jZSBkYXRhYmFzZSBpbiB0aGUgZXZpZGVuY2UgcG9vbC48L3A+CjxoNCBpZD0iYWJjaS1ldmlkZW5jZSI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNhYmNpLWV2aWRlbmNlIj4jPC9hPiBBQkNJIEV2aWRlbmNlPC9oND4KPHA+Qm90aCBldmlkZW5jZSBzdHJ1Y3R1cmVzIGNvbnRhaW4gZGF0YSAoc3VjaCBhcyB0aW1lc3RhbXApIHRoYXQgYXJlIG5lY2Vzc2FyeSB0byBiZSBwYXNzZWQgdG8gdGhlIGFwcGxpY2F0aW9uIGJ1dCBkbyBub3Qgc3RyaWN0bHkgY29uc3RpdHV0ZSBldmlkZW5jZSBvZiBtaXNiZWhhdmlvci4gQXMgc3VjaCwgdGhlc2UgZmllbGRzIGFyZSB2ZXJpZmllZCBsYXN0LiBJZiBhbnkgb2YgdGhlc2UgZmllbGRzIGFyZSBpbnZhbGlkIHRvIGEgbm9kZSBpLmUuIHRoZXkgZG9uJ3QgY29ycmVzcG9uZCB3aXRoIHRoZWlyIHN0YXRlLCBub2RlcyB3aWxsIHJlY29uc3RydWN0IGEgbmV3IGV2aWRlbmNlIHN0cnVjdCBmcm9tIHRoZSBleGlzdGluZyBmaWVsZHMgYW5kIHJlcG9wdWxhdGUgdGhlIGFiY2kgc3BlY2lmaWMgZmllbGRzIHdpdGggdGhlaXIgb3duIHN0YXRlIGRhdGEuPC9wPgo8aDQgaWQ9ImJyb2FkY2FzdGluZy1hbmQtcmVjZWl2aW5nLWV2aWRlbmNlIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2Jyb2FkY2FzdGluZy1hbmQtcmVjZWl2aW5nLWV2aWRlbmNlIj4jPC9hPiBCcm9hZGNhc3RpbmcgYW5kIHJlY2VpdmluZyBldmlkZW5jZTwvaDQ+CjxwPlRoZSBldmlkZW5jZSBwb29sIGFsc28gcnVucyBhIHJlYWN0b3IgdGhhdCBicm9hZGNhc3RzIHRoZSBuZXdseSB2YWxpZGF0ZWQKZXZpZGVuY2UgdG8gYWxsIGNvbm5lY3RlZCBwZWVycy48L3A+CjxwPlJlY2VpdmluZyBldmlkZW5jZSBmcm9tIG90aGVyIGV2aWRlbmNlIHJlYWN0b3JzIHdvcmtzIGluIHRoZSBzYW1lIG1hbm5lciBhcyByZWNlaXZpbmcgZXZpZGVuY2UgZnJvbSB0aGUgY29uc2Vuc3VzIHJlYWN0b3Igb3IgYSBsaWdodCBjbGllbnQuPC9wPgo8aDQgaWQ9InByb3Bvc2luZy1ldmlkZW5jZS1vbi10aGUtYmxvY2siPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjcHJvcG9zaW5nLWV2aWRlbmNlLW9uLXRoZS1ibG9jayI+IzwvYT4gUHJvcG9zaW5nIGV2aWRlbmNlIG9uIHRoZSBibG9jazwvaDQ+CjxwPldoZW4gaXQgY29tZXMgdG8gcHJldm90aW5nIGFuZCBwcmVjb21pdHRpbmcgYSBwcm9wb3NhbCB0aGF0IGNvbnRhaW5zIGV2aWRlbmNlLCB0aGUgZnVsbCBub2RlIHdpbGwgb25jZSBhZ2FpbgpjYWxsIHVwb24gdGhlIGV2aWRlbmNlIHBvb2wgdG8gdmVyaWZ5IHRoZSBldmlkZW5jZSB1c2luZyA8Y29kZT5DaGVja0V2aWRlbmNlKGV2IFtdRXZpZGVuY2UpPC9jb2RlPjo8L3A+CjxwPlRoaXMgcGVyZm9ybXMgdGhlIGZvbGxvd2luZyBhY3Rpb25zOjwvcD4KPG9sPgo8bGk+CjxwPkxvb3BzIHRocm91Z2ggYWxsIHRoZSBldmlkZW5jZSB0byBjaGVjayB0aGF0IG5vdGhpbmcgaGFzIGJlZW4gZHVwbGljYXRlZDwvcD4KPC9saT4KPGxpPgo8cD5Gb3IgZWFjaCBldmlkZW5jZSwgcnVuIDxjb2RlPmZhc3RDaGVjayhldiBldmlkZW5jZSk8L2NvZGU+IHdoaWNoIHdvcmtzIHNpbWlsYXIgdG8gPGNvZGU+SGFzPC9jb2RlPiBidXQgaW5zdGVhZCBmb3IgPGNvZGU+TGlnaHRDbGllbnRBdHRhY2tFdmlkZW5jZTwvY29kZT4gaWYgaXQgaGFzIHRoZQpzYW1lIGhhc2ggaXQgdGhlbiBnb2VzIG9uIHRvIGNoZWNrIHRoYXQgdGhlIHZhbGlkYXRvcnMgaXQgaGFzIGFyZSBhbGwgc2lnbmVycyBpbiB0aGUgY29tbWl0IG9mIHRoZSBjb25mbGljdGluZyBoZWFkZXIuIElmIGl0IGRvZXNuJ3QgcGFzcyBmYXN0IGNoZWNrIChiZWNhdXNlIGl0IGhhc24ndCBzZWVuIHRoZSBldmlkZW5jZSBiZWZvcmUpIHRoZW4gaXQgd2lsbCBoYXZlIHRvIHZlcmlmeSB0aGUgZXZpZGVuY2UuPC9wPgo8L2xpPgo8bGk+CjxwPnJ1bnMgPGNvZGU+VmVyaWZ5KGV2IEV2aWRlbmNlKTwvY29kZT4gLSBOb3RlOiB0aGlzIGFsc28gc2F2ZXMgdGhlIGV2aWRlbmNlIHRvIHRoZSBkYiBhcyBtZW50aW9uZWQgYmVmb3JlLjwvcD4KPC9saT4KPC9vbD4KPGg0IGlkPSJ1cGRhdGluZy1hcHBsaWNhdGlvbi1hbmQtcG9vbCI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiN1cGRhdGluZy1hcHBsaWNhdGlvbi1hbmQtcG9vbCI+IzwvYT4gVXBkYXRpbmcgYXBwbGljYXRpb24gYW5kIHBvb2w8L2g0Pgo8cD5UaGUgZmluYWwgcGFydCBvZiB0aGUgbGlmZWN5Y2xlIGlzIHdoZW4gdGhlIGJsb2NrIGlzIGNvbW1pdHRlZCBhbmQgdGhlIDxjb2RlPkJsb2NrRXhlY3V0b3I8L2NvZGU+IHRoZW4gdXBkYXRlcyBzdGF0ZS4gQXMgcGFydCBvZiB0aGlzIHByb2Nlc3MsIHRoZSA8Y29kZT5CbG9ja0V4ZWN1dG9yPC9jb2RlPiBnZXRzIHRoZSBldmlkZW5jZSBwb29sIHRvIGNyZWF0ZSBhIHNpbXBsaWZpZWQgZm9ybWF0IGZvciB0aGUgZXZpZGVuY2UgdG8gYmUgc2VudCB0byB0aGUgYXBwbGljYXRpb24uIFRoaXMgaGFwcGVucyBpbiA8Y29kZT5BcHBseUJsb2NrPC9jb2RlPiB3aGVyZSB0aGUgZXhlY3V0b3IgY2FsbHMgPGNvZGU+VXBkYXRlKEJsb2NrLCBTdGF0ZSkgW11hYmNpLkV2aWRlbmNlPC9jb2RlPi48L3A+CgogICAgPHRtLWNvZGUtYmxvY2sgY2xhc3M9ImNvZGVibG9jayIgbGFuZ3VhZ2U9ImdvIiBiYXNlNjQ9IllXSmphVkpsYzNCdmJuTmxjeTVDWldkcGJrSnNiMk5yTGtKNWVtRnVkR2x1WlZaaGJHbGtZWFJ2Y25NZ1BTQmxkbkJ2YjJ3dVZYQmtZWFJsS0dKc2IyTnJMQ0J6ZEdGMFpTa0siPjwvdG0tY29kZS1ibG9jaz4KICAgIDxwPkhlcmUgaXMgdGhlIGZvcm1hdCBvZiB0aGUgZXZpZGVuY2UgdGhhdCB0aGUgYXBwbGljYXRpb24gd2lsbCByZWNlaXZlLiBBcyBzZWVuIGFib3ZlLCB0aGlzIGlzIHN0b3JlZCBhcyBhbiBhcnJheSB3aXRoaW4gPGNvZGU+QmVnaW5CbG9jazwvY29kZT4uClRoZSBjaGFuZ2VzIHRvIHRoZSBhcHBsaWNhdGlvbiBhcmUgbWluaW1hbCAoaXQgaXMgc3RpbGwgZm9ybWVkIG9uZSBmb3IgZWFjaCBtYWxpY2lvdXMgdmFsaWRhdG9yKSB3aXRoIHRoZSBleGNlcHRpb24gb2YgdXNpbmcgYW4gZW51bSBpbnN0ZWFkIG9mIGEgc3RyaW5nIGZvciB0aGUgZXZpZGVuY2UgdHlwZS48L3A+CgogICAgPHRtLWNvZGUtYmxvY2sgY2xhc3M9ImNvZGVibG9jayIgbGFuZ3VhZ2U9ImdvIiBiYXNlNjQ9ImRIbHdaU0JGZG1sa1pXNWpaU0J6ZEhKMVkzUWdld29nSUM4dklHVnBkR2hsY2lCTWFXZG9kRU5zYVdWdWRFRjBkR0ZqYTBWMmFXUmxibU5sSUc5eUlFUjFjR3hwWTJGMFpWWnZkR1ZGZG1sa1pXNWpaU0JoY3lCaGJpQmxiblZ0SUNoaFltTnBMa1YyYVdSbGJtTmxWSGx3WlNrS0NWUjVjR1VnUlhacFpHVnVZMlZVZVhCbElHQndjbTkwYjJKMVpqb21jWFZ2ZER0MllYSnBiblFzTVN4dmNIUXNibUZ0WlQxMGVYQmxMSEJ5YjNSdk15eGxiblZ0UFhSbGJtUmxjbTFwYm5RdVlXSmphUzVGZG1sa1pXNWpaVlI1Y0dVbWNYVnZkRHNnYW5OdmJqb21jWFZ2ZER0MGVYQmxMRzl0YVhSbGJYQjBlU1p4ZFc5ME8yQUtDUzh2SUZSb1pTQnZabVpsYm1ScGJtY2dkbUZzYVdSaGRHOXlDZ2xXWVd4cFpHRjBiM0lnVm1Gc2FXUmhkRzl5SUdCd2NtOTBiMkoxWmpvbWNYVnZkRHRpZVhSbGN5d3lMRzl3ZEN4dVlXMWxQWFpoYkdsa1lYUnZjaXh3Y205MGJ6TW1jWFZ2ZERzZ2FuTnZiam9tY1hWdmREdDJZV3hwWkdGMGIzSW1jWFZ2ZER0Z0Nna3ZMeUJVYUdVZ2FHVnBaMmgwSUhkb1pXNGdkR2hsSUc5bVptVnVjMlVnYjJOamRYSnlaV1FLQ1VobGFXZG9kQ0JwYm5RMk5DQmdjSEp2ZEc5aWRXWTZKbkYxYjNRN2RtRnlhVzUwTERNc2IzQjBMRzVoYldVOWFHVnBaMmgwTEhCeWIzUnZNeVp4ZFc5ME95QnFjMjl1T2laeGRXOTBPMmhsYVdkb2RDeHZiV2wwWlcxd2RIa21jWFZ2ZER0Z0Nna3ZMeUJVYUdVZ1kyOXljbVZ6Y0c5dVpHbHVaeUIwYVcxbElIZG9aWEpsSUhSb1pTQnZabVpsYm5ObElHOWpZM1Z5Y21Wa0NnbFVhVzFsSUhScGJXVXVWR2x0WlNCZ2NISnZkRzlpZFdZNkpuRjFiM1E3WW5sMFpYTXNOQ3h2Y0hRc2JtRnRaVDEwYVcxbExIQnliM1J2TXl4emRHUjBhVzFsSm5GMWIzUTdJR3B6YjI0NkpuRjFiM1E3ZEdsdFpTWnhkVzkwTzJBS0NTOHZJRlJ2ZEdGc0lIWnZkR2x1WnlCd2IzZGxjaUJ2WmlCMGFHVWdkbUZzYVdSaGRHOXlJSE5sZENCcGJpQmpZWE5sSUhSb1pTQkJRa05KSUdGd2NHeHBZMkYwYVc5dUlHUnZaWE1LQ1M4dklHNXZkQ0J6ZEc5eVpTQm9hWE4wYjNKcFkyRnNJSFpoYkdsa1lYUnZjbk11Q2drdkx5Qm9kSFJ3Y3pvdkwyZHBkR2gxWWk1amIyMHZkR1Z1WkdWeWJXbHVkQzkwWlc1a1pYSnRhVzUwTDJsemMzVmxjeTgwTlRneENnbFViM1JoYkZadmRHbHVaMUJ2ZDJWeUlHbHVkRFkwSUdCd2NtOTBiMkoxWmpvbWNYVnZkRHQyWVhKcGJuUXNOU3h2Y0hRc2JtRnRaVDEwYjNSaGJGOTJiM1JwYm1kZmNHOTNaWElzYW5OdmJqMTBiM1JoYkZadmRHbHVaMUJ2ZDJWeUxIQnliM1J2TXlaeGRXOTBPeUJxYzI5dU9pWnhkVzkwTzNSdmRHRnNYM1p2ZEdsdVoxOXdiM2RsY2l4dmJXbDBaVzF3ZEhrbWNYVnZkRHRnQ24wSyI+PC90bS1jb2RlLWJsb2NrPgogICAgPHA+VGhpcyA8Y29kZT5VcGRhdGUoKTwvY29kZT4gZnVuY3Rpb24gZG9lcyB0aGUgZm9sbG93aW5nOjwvcD4KPHVsPgo8bGk+CjxwPkluY3JlbWVudHMgc3RhdGUgd2hpY2gga2VlcHMgdHJhY2sgb2YgYm90aCB0aGUgY3VycmVudCB0aW1lIGFuZCBoZWlnaHQgdXNlZCBmb3IgbWVhc3VyaW5nIGV4cGlyeTwvcD4KPC9saT4KPGxpPgo8cD5NYXJrcyBldmlkZW5jZSBhcyBjb21taXR0ZWQgYW5kIHNhdmVzIHRvIGRiLiBUaGlzIHByZXZlbnRzIHZhbGlkYXRvcnMgZnJvbSBwcm9wb3NpbmcgY29tbWl0dGVkIGV2aWRlbmNlIGluIHRoZSBmdXR1cmUKTm90ZTogdGhlIGRiIGp1c3Qgc2F2ZXMgdGhlIGhlaWdodCBhbmQgdGhlIGhhc2guIFRoZXJlIGlzIG5vIG5lZWQgdG8gc2F2ZSB0aGUgZW50aXJlIGNvbW1pdHRlZCBldmlkZW5jZTwvcD4KPC9saT4KPGxpPgo8cD5Gb3JtcyBBQkNJIGV2aWRlbmNlIGFzIHN1Y2g6ICAobm90ZSBmb3IgPGNvZGU+RHVwbGljYXRlVm90ZUV2aWRlbmNlPC9jb2RlPiB0aGUgdmFsaWRhdG9ycyBhcnJheSBzaXplIGlzIDEpPC9wPgoKICAgIDx0bS1jb2RlLWJsb2NrIGNsYXNzPSJjb2RlYmxvY2siIGxhbmd1YWdlPSJnbyIgYmFzZTY0PSJabTl5SUY4c0lIWmhiQ0E2UFNCeVlXNW5aU0JsZGtsdVptOHVWbUZzYVdSaGRHOXljeUI3Q2lBZ1lXSmphVVYySUQwZ1lYQndaVzVrS0dGaVkybEZkaXdnSm1GdGNEdGhZbU5wTGtWMmFXUmxibU5sZXdvZ0lDQWdWSGx3WlRvZ1pYWlVlWEJsTENBZ0lDOHZJR1ZwZEdobGNpQkVkWEJzYVdOaGRHVldiM1JsSUc5eUlFeHBaMmgwUTJ4cFpXNTBRWFIwWVdOckNpQWdJQ0JXWVd4cFpHRjBiM0k2SUhaaGJDd2dJQ0F2THlCMGFHVWdiMlptWlc1a2FXNW5JSFpoYkdsa1lYUnZjaUFvZDJocFkyZ2dhVzVqYkhWa1pYTWdkR2hsSUdGa1pISmxjM01zSUhCMVltdGxlU0JoYm1RZ2NHOTNaWElwQ2lBZ0lDQklaV2xuYUhRNklHVjJTVzVtYnk1bGRpNUlaV2xuYUhRb0tTd2dJQ0FnTHk4Z2RHaGxJR2hsYVdkb2RDQjNhR1Z1SUhSb1pTQnZabVpsYm5ObElHaGhjSEJsYm1Wa0NpQWdJQ0JVYVcxbE9pQmxka2x1Wm04dWRHbHRaU3dnSUNBZ0lDQXZMeUIwYUdVZ2RHbHRaU0IzYUdWdUlIUm9aU0J2Wm1abGJuTmxJR2hoY0hCbGJtVmtDaUFnSUNCVWIzUmhiRlp2ZEdsdVoxQnZkMlZ5T2lCbGRrbHVabTh1ZEc5MFlXeFdiM1JwYm1kUWIzZGxjaUFnSUM4dklIUm9aU0IwYjNSaGJDQjJiM1JwYm1jZ2NHOTNaWElnYjJZZ2RHaGxJSFpoYkdsa1lYUnZjaUJ6WlhRS0lDQjlLUXA5Q2c9PSI+PC90bS1jb2RlLWJsb2NrPgogICAgPC9saT4KPGxpPgo8cD5SZW1vdmVzIGV4cGlyZWQgZXZpZGVuY2UgZnJvbSBib3RoIHBlbmRpbmcgYW5kIGNvbW1pdHRlZCBkYXRhYmFzZXM8L3A+CjwvbGk+CjwvdWw+CjxwPlRoZSBBQkNJIGV2aWRlbmNlIGlzIHRoZW4gc2VudCB2aWEgdGhlIDxjb2RlPkJsb2NrRXhlY3V0b3I8L2NvZGU+IHRvIHRoZSBhcHBsaWNhdGlvbi48L3A+CjxoNCBpZD0ic3VtbWFyeSI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNzdW1tYXJ5Ij4jPC9hPiBTdW1tYXJ5PC9oND4KPHA+VG8gc3VtbWFyaXplLCB3ZSBjYW4gc2VlIHRoZSBsaWZlY3ljbGUgb2YgZXZpZGVuY2UgYXMgc3VjaDo8L3A+CjxwPjxpbWcgc3JjPSIuLi9pbWdzL2V2aWRlbmNlX2xpZmVjeWNsZS5wbmciIGFsdD0iZXZpZGVuY2VfbGlmZWN5Y2xlIj48L3A+CjxwPkV2aWRlbmNlIGlzIGZpcnN0IGRldGVjdGVkIGFuZCBjcmVhdGVkIGluIHRoZSBsaWdodCBjbGllbnQgYW5kIGNvbnNlbnN1cyByZWFjdG9yLiBJdCBpcyB2ZXJpZmllZCBhbmQgc3RvcmVkIGFzIDxjb2RlPkV2aWRlbmNlSW5mbzwvY29kZT4gYW5kIGdvc3NpcGVkIHRvIHRoZSBldmlkZW5jZSBwb29scyBpbiBvdGhlciBub2Rlcy4gVGhlIGNvbnNlbnN1cyByZWFjdG9yIGxhdGVyIGNvbW11bmljYXRlcyB3aXRoIHRoZSBldmlkZW5jZSBwb29sIHRvIGVpdGhlciByZXRyaWV2ZSBldmlkZW5jZSB0byBiZSBwdXQgaW50byBhIGJsb2NrLCBvciB2ZXJpZnkgdGhlIGV2aWRlbmNlIHRoZSBjb25zZW5zdXMgcmVhY3RvciBoYXMgcmV0cmlldmVkIGluIGEgYmxvY2suIExhc3RseSB3aGVuIGEgYmxvY2sgaXMgYWRkZWQgdG8gdGhlIGNoYWluLCB0aGUgYmxvY2sgZXhlY3V0b3Igc2VuZHMgdGhlIGNvbW1pdHRlZCBldmlkZW5jZSBiYWNrIHRvIHRoZSBldmlkZW5jZSBwb29sIHNvIGEgcG9pbnRlciB0byB0aGUgZXZpZGVuY2UgY2FuIGJlIHN0b3JlZCBpbiB0aGUgZXZpZGVuY2UgcG9vbCBhbmQgaXQgY2FuIHVwZGF0ZSBpdCdzIGhlaWdodCBhbmQgdGltZS4gRmluYWxseSwgaXQgdHVybnMgdGhlIGNvbW1pdHRlZCBldmlkZW5jZSBpbnRvIEFCQ0kgZXZpZGVuY2UgYW5kIHRocm91Z2ggdGhlIGJsb2NrIGV4ZWN1dG9yIHBhc3NlcyB0aGUgZXZpZGVuY2UgdG8gdGhlIGFwcGxpY2F0aW9uIHNvIHRoZSBhcHBsaWNhdGlvbiBjYW4gaGFuZGxlIGl0LjwvcD4KPGgyIGlkPSJzdGF0dXMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjc3RhdHVzIj4jPC9hPiBTdGF0dXM8L2gyPgo8cD5JbXBsZW1lbnRlZDwvcD4KPGgyIGlkPSJjb25zZXF1ZW5jZXMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjY29uc2VxdWVuY2VzIj4jPC9hPiBDb25zZXF1ZW5jZXM8L2gyPgo8IS0tID4gVGhpcyBzZWN0aW9uIGRlc2NyaWJlcyB0aGUgY29uc2VxdWVuY2VzLCBhZnRlciBhcHBseWluZyB0aGUgZGVjaXNpb24uIEFsbCBjb25zZXF1ZW5jZXMgc2hvdWxkIGJlIHN1bW1hcml6ZWQgaGVyZSwgbm90IGp1c3QgdGhlICJwb3NpdGl2ZSIgb25lcy4gLS0+CjxoMyBpZD0icG9zaXRpdmUiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjcG9zaXRpdmUiPiM8L2E+IFBvc2l0aXZlPC9oMz4KPHVsPgo8bGk+RXZpZGVuY2UgaXMgYmV0dGVyIGNvbnRhaW5lZCB0byB0aGUgZXZpZGVuY2UgcG9vbCAvIG1vZHVsZTwvbGk+CjxsaT5MaWdodENsaWVudEF0dGFjayBpcyBrZXB0IHRvZ2V0aGVyIChlYXNpZXIgZm9yIHZlcmlmaWNhdGlvbiBhbmQgYmFuZHdpZHRoKTwvbGk+CjxsaT5WYXJpYXRpb25zIG9uIGNvbW1pdCBzaWdzIGluIExpZ2h0Q2xpZW50QXR0YWNrIGRvZXNuJ3QgbGVhZCB0byBtdWx0aXBsZSBwZXJtdXRhdGlvbnMgYW5kIG11bHRpcGxlIGV2aWRlbmNlPC9saT4KPGxpPkFkZHJlc3MgdG8gZXZpZGVuY2UgbWFwIHByZXZlbnRzIERPUyBhdHRhY2tzLCB3aGVyZSBhIHNpbmdsZSB2YWxpZGF0b3IgY291bGQgRE9TIHRoZSBuZXR3b3JrIGJ5IGZsb29kaW5nIGl0IHdpdGggZXZpZGVuY2Ugc3VibWlzc2lvbnM8L2xpPgo8L3VsPgo8aDMgaWQ9Im5lZ2F0aXZlIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI25lZ2F0aXZlIj4jPC9hPiBOZWdhdGl2ZTwvaDM+Cjx1bD4KPGxpPkNoYW5nZXMgdGhlIDxjb2RlPkV2aWRlbmNlPC9jb2RlPiBpbnRlcmZhY2UgYW5kIHRodXMgaXMgYSBibG9jayBicmVha2luZyBjaGFuZ2U8L2xpPgo8bGk+Q2hhbmdlcyB0aGUgQUJDSSA8Y29kZT5FdmlkZW5jZTwvY29kZT4gYW5kIGlzIHRodXMgYSBBQkNJIGJyZWFraW5nIGNoYW5nZTwvbGk+CjxsaT5VbmFibGUgdG8gcXVlcnkgZXZpZGVuY2UgZm9yIGFkZHJlc3MgLyB0aW1lIHdpdGhvdXQgZXZpZGVuY2UgcG9vbDwvbGk+CjwvdWw+CjxoMyBpZD0ibmV1dHJhbCI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNuZXV0cmFsIj4jPC9hPiBOZXV0cmFsPC9oMz4KPGgyIGlkPSJyZWZlcmVuY2VzIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3JlZmVyZW5jZXMiPiM8L2E+IFJlZmVyZW5jZXM8L2gyPgo8IS0tID4gQXJlIHRoZXJlIGFueSByZWxldmFudCBQUiBjb21tZW50cywgaXNzdWVzIHRoYXQgbGVkIHVwIHRvIHRoaXMsIG9yIGFydGljbGVzIHJlZmVyZW5jZWQgZm9yIHdoeSB3ZSBtYWRlIHRoZSBnaXZlbiBkZXNpZ24gY2hvaWNlPyBJZiBzbyBsaW5rIHRoZW0gaGVyZSEgLS0+Cjx1bD4KPGxpPjxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9pbmZvcm1hbHN5c3RlbXMvdGVuZGVybWludC1ycy9ibG9iLzMxY2EzZTY0Y2U5MDc4NmMxNzM0Y2FmMTg2ZTMwNTk1ODMyMjk3YTQvZG9jcy9zcGVjL2xpZ2h0Y2xpZW50L2F0dGFja3MvZXZpZGVuY2UtaGFuZGxpbmcubWQiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPkxpZ2h0Q2xpZW50QXR0YWNrRXZpZGVuY2U8T3V0Ym91bmRMaW5rLz48L2E+PC9saT4KPC91bD4KPC9Db250ZW50U2xvdHNEaXN0cmlidXRvcj4K"},null]}