{"remainingRequest":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/architecture/adr-060-go-api-stability.md?vue&type=template&id=5da251cd&","dependencies":[{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/architecture/adr-060-go-api-stability.md","mtime":1673295761174},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/cache-loader/dist/cjs.js","mtime":1673296285960},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1673296286086},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/cache-loader/dist/cjs.js","mtime":1673296285960},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/vue-loader/lib/index.js","mtime":1673296285952},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/@vuepress/markdown-loader/index.js","mtime":1673296286103}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PGgxIGlkPSJhZHItMDYwLWdvLWFwaS1zdGFiaWxpdHkiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjYWRyLTA2MC1nby1hcGktc3RhYmlsaXR5Ij4jPC9hPiBBRFIgMDYwOiBHbyBBUEkgU3RhYmlsaXR5PC9oMT4KPGgyIGlkPSJjaGFuZ2Vsb2ciPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjY2hhbmdlbG9nIj4jPC9hPiBDaGFuZ2Vsb2c8L2gyPgo8dWw+CjxsaT4KPHA+MjAyMC0wOS0wODogSW5pdGlhbCB2ZXJzaW9uLiAoQGVyaWtncmluYWtlcik8L3A+CjwvbGk+CjxsaT4KPHA+MjAyMC0wOS0wOTogVHdlYWsgYWNjZXB0ZWQgY2hhbmdlcywgYWRkIGluaXRpYWwgcHVibGljIEFQSSBwYWNrYWdlcywgYWRkIGNvbnNlcXVlbmNlcy4gKEBlcmlrZ3JpbmFrZXIpPC9wPgo8L2xpPgo8bGk+CjxwPjIwMjAtMDktMTc6IENsYXJpZnkgaW5pdGlhbCBwdWJsaWMgQVBJLiAoQGVyaWtncmluYWtlcik8L3A+CjwvbGk+CjwvdWw+CjxoMiBpZD0iY29udGV4dCI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNjb250ZXh0Ij4jPC9hPiBDb250ZXh0PC9oMj4KPHA+V2l0aCB0aGUgcmVsZWFzZSBvZiBUZW5kZXJtaW50IDEuMCB3ZSB3aWxsIGFkb3B0IDxhIGhyZWY9Imh0dHBzOi8vc2VtdmVyLm9yZyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+c2VtYW50aWMgdmVyc2lvbmluZzxPdXRib3VuZExpbmsvPjwvYT4uIE9uZSBtYWpvciBpbXBsaWNhdGlvbiBpcyBhIGd1YXJhbnRlZSB0aGF0IHdlIHdpbGwgbm90IG1ha2UgYmFja3dhcmRzLWluY29tcGF0aWJsZSBjaGFuZ2VzIHVudGlsIFRlbmRlcm1pbnQgMi4wIChleGNlcHQgaW4gcHJlLXJlbGVhc2UgdmVyc2lvbnMpLiBJbiBvcmRlciB0byBwcm92aWRlIHRoaXMgZ3VhcmFudGVlIGZvciBvdXIgR28gQVBJLCB3ZSBtdXN0IGNsZWFybHkgZGVmaW5lIHdoaWNoIG9mIG91ciBBUElzIGFyZSBwdWJsaWMsIGFuZCB3aGF0IGNoYW5nZXMgYXJlIGNvbnNpZGVyZWQgYmFja3dhcmRzLWNvbXBhdGlibGUuPC9wPgo8cD5DdXJyZW50bHksIHdlIGxpc3QgcGFja2FnZXMgdGhhdCB3ZSBjb25zaWRlciBwdWJsaWMgaW4gb3VyIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS90ZW5kZXJtaW50L3RlbmRlcm1pbnQjdmVyc2lvbmluZyIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+UkVBRE1FPE91dGJvdW5kTGluay8+PC9hPiwgYnV0IHNpbmNlIHdlIGFyZSBzdGlsbCBhdCB2ZXJzaW9uIDAueCB3ZSBkbyBub3QgcHJvdmlkZSBhbnkgYmFja3dhcmRzIGNvbXBhdGlibGl0eSBndWFyYW50ZWVzIGF0IGFsbC48L3A+CjxoMyBpZD0iZ2xvc3NhcnkiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjZ2xvc3NhcnkiPiM8L2E+IEdsb3NzYXJ5PC9oMz4KPHVsPgo8bGk+CjxwPjxzdHJvbmc+RXh0ZXJuYWwgcHJvamVjdDo8L3N0cm9uZz4gYSBkaWZmZXJlbnQgR2l0L1ZDUyByZXBvc2l0b3J5IG9yIGNvZGUgYmFzZS48L3A+CjwvbGk+CjxsaT4KPHA+PHN0cm9uZz5FeHRlcm5hbCBwYWNrYWdlOjwvc3Ryb25nPiBhIGRpZmZlcmVudCBHbyBwYWNrYWdlLCBjYW4gYmUgYSBjaGlsZCBvciBzaWJsaW5nIHBhY2thZ2UgaW4gdGhlIHNhbWUgcHJvamVjdC48L3A+CjwvbGk+CjxsaT4KPHA+PHN0cm9uZz5JbnRlcm5hbCBjb2RlOjwvc3Ryb25nPiBjb2RlIG5vdCBpbnRlbmRlZCBmb3IgdXNlIGluIGV4dGVybmFsIHByb2plY3RzLjwvcD4KPC9saT4KPGxpPgo8cD48c3Ryb25nPkludGVybmFsIGRpcmVjdG9yeTo8L3N0cm9uZz4gY29kZSB1bmRlciA8Y29kZT5pbnRlcm5hbC88L2NvZGU+IHdoaWNoIGNhbm5vdCBiZSBpbXBvcnRlZCBpbiBleHRlcm5hbCBwcm9qZWN0cy48L3A+CjwvbGk+CjxsaT4KPHA+PHN0cm9uZz5FeHBvcnRlZDo8L3N0cm9uZz4gYSBHbyBpZGVudGlmaWVyIHN0YXJ0aW5nIHdpdGggYW4gdXBwZXJjYXNlIGxldHRlciwgd2hpY2ggY2FuIHRoZXJlZm9yZSBiZSBhY2Nlc3NlZCBieSBhbiBleHRlcm5hbCBwYWNrYWdlLjwvcD4KPC9saT4KPGxpPgo8cD48c3Ryb25nPlByaXZhdGU6PC9zdHJvbmc+IGEgR28gaWRlbnRpZmllciBzdGFydGluZyB3aXRoIGEgbG93ZXJjYXNlIGxldHRlciwgd2hpY2ggdGhlcmVmb3JlIGNhbm5vdCBiZSBhY2Nlc3NlZCBieSBhbiBleHRlcm5hbCBwYWNrYWdlIHVubGVzcyB2aWEgYW4gZXhwb3J0ZWQgZmllbGQsIHZhcmlhYmxlLCBvciBmdW5jdGlvbi9tZXRob2QgcmV0dXJuIHZhbHVlLjwvcD4KPC9saT4KPGxpPgo8cD48c3Ryb25nPlB1YmxpYyBBUEk6PC9zdHJvbmc+IGFueSBHbyBpZGVudGlmaWVyIHRoYXQgY2FuIGJlIGltcG9ydGVkIG9yIGFjY2Vzc2VkIGJ5IGFuIGV4dGVybmFsIHByb2plY3QsIGV4Y2VwdCB0ZXN0IGNvZGUgaW4gPGNvZGU+X3Rlc3QuZ288L2NvZGU+IGZpbGVzLjwvcD4KPC9saT4KPGxpPgo8cD48c3Ryb25nPlByaXZhdGUgQVBJOjwvc3Ryb25nPiBhbnkgR28gaWRlbnRpZmllciB0aGF0IGlzIG5vdCBhY2Nlc3NpYmxlIHZpYSBhIHB1YmxpYyBBUEksIGluY2x1ZGluZyBhbGwgY29kZSBpbiB0aGUgaW50ZXJuYWwgZGlyZWN0b3J5LjwvcD4KPC9saT4KPC91bD4KPGgyIGlkPSJhbHRlcm5hdGl2ZS1hcHByb2FjaGVzIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2FsdGVybmF0aXZlLWFwcHJvYWNoZXMiPiM8L2E+IEFsdGVybmF0aXZlIEFwcHJvYWNoZXM8L2gyPgo8dWw+CjxsaT4KPHA+U3BsaXQgYWxsIHB1YmxpYyBBUElzIG91dCB0byBzZXBhcmF0ZSBHbyBtb2R1bGVzIGluIHNlcGFyYXRlIEdpdCByZXBvc2l0b3JpZXMsIGFuZCBjb25zaWRlciBhbGwgVGVuZGVybWludCBjb2RlIGludGVybmFsIGFuZCBub3Qgc3ViamVjdCB0byBBUEkgYmFja3dhcmRzIGNvbXBhdGliaWxpdHkgYXQgYWxsLiBUaGlzIHdhcyByZWplY3RlZCwgc2luY2UgaXQgaGFzIGJlZW4gYXR0ZW1wdGVkIGJ5IHRoZSBUZW5kZXJtaW50IHByb2plY3QgZWFybGllciwgcmVzdWx0aW5nIGluIHRvbyBtdWNoIGRlcGVuZGVuY3kgbWFuYWdlbWVudCBvdmVyaGVhZC48L3A+CjwvbGk+CjxsaT4KPHA+U2ltcGx5IGRvY3VtZW50IHdoaWNoIEFQSXMgYXJlIHB1YmxpYyBhbmQgd2hpY2ggYXJlIHByaXZhdGUuIFRoaXMgaXMgdGhlIGN1cnJlbnQgYXBwcm9hY2gsIGJ1dCB1c2VycyBzaG91bGQgbm90IGJlIGV4cGVjdGVkIHRvIHNlbGYtZW5mb3JjZSB0aGlzLCB0aGUgZG9jdW1lbnRhdGlvbiBpcyBub3QgYWx3YXlzIHVwLXRvLWRhdGUsIGFuZCBleHRlcm5hbCBwcm9qZWN0cyB3aWxsIG9mdGVuIGVuZCB1cCBkZXBlbmRpbmcgb24gaW50ZXJuYWwgY29kZSBhbnl3YXkuPC9wPgo8L2xpPgo8L3VsPgo8aDIgaWQ9ImRlY2lzaW9uIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2RlY2lzaW9uIj4jPC9hPiBEZWNpc2lvbjwvaDI+CjxwPkZyb20gVGVuZGVybWludCAxLjAsIGFsbCBpbnRlcm5hbCBjb2RlIChleGNlcHQgcHJpdmF0ZSBBUElzKSB3aWxsIGJlIHBsYWNlZCBpbiBhIHJvb3QtbGV2ZWwgPGEgaHJlZj0iaHR0cHM6Ly9nb2xhbmcub3JnL2NtZC9nby8jaGRyLUludGVybmFsX0RpcmVjdG9yaWVzIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj48Y29kZT5pbnRlcm5hbDwvY29kZT4gZGlyZWN0b3J5PE91dGJvdW5kTGluay8+PC9hPiwgd2hpY2ggdGhlIEdvIGNvbXBpbGVyIHdpbGwgYmxvY2sgZm9yIHVzZSBieSBleHRlcm5hbCBwcm9qZWN0cy4gQWxsIGV4cG9ydGVkIGl0ZW1zIG91dHNpZGUgb2YgdGhlIDxjb2RlPmludGVybmFsPC9jb2RlPiBkaXJlY3RvcnkgYXJlIGNvbnNpZGVyZWQgYSBwdWJsaWMgQVBJIGFuZCBzdWJqZWN0IHRvIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5IGd1YXJhbnRlZXMsIGV4Y2VwdCBmaWxlcyBlbmRpbmcgaW4gPGNvZGU+X3Rlc3QuZ288L2NvZGU+LjwvcD4KPHA+VGhlIDxjb2RlPmNyeXB0bzwvY29kZT4gcGFja2FnZSBtYXkgYmUgc3BsaXQgb3V0IHRvIGEgc2VwYXJhdGUgbW9kdWxlIGluIGEgc2VwYXJhdGUgcmVwby4gVGhpcyBpcyB0aGUgbWFpbiBnZW5lcmFsLXB1cnBvc2UgcGFja2FnZSB1c2VkIGJ5IGV4dGVybmFsIHByb2plY3RzLCBhbmQgaXMgdGhlIG9ubHkgVGVuZGVybWludCBkZXBlbmRlbmN5IGluIGUuZy4gSUFWTCB3aGljaCBjYW4gY2F1c2Ugc29tZSBwcm9ibGVtcyBmb3IgcHJvamVjdHMgZGVwZW5kaW5nIG9uIGJvdGggSUFWTCBhbmQgVGVuZGVybWludC4gVGhpcyB3aWxsIGJlIGRlY2lkZWQgYWZ0ZXIgZnVydGhlciBkaXNjdXNzaW9uLjwvcD4KPHA+VGhlIDxjb2RlPnRtLWRiPC9jb2RlPiBwYWNrYWdlIHdpbGwgcmVtYWluIGEgc2VwYXJhdGUgbW9kdWxlIGluIGEgc2VwYXJhdGUgcmVwby4gVGhlIDxjb2RlPmNyeXB0bzwvY29kZT4gcGFja2FnZSBtYXkgcG9zc2libHkgYmUgc3BsaXQgb3V0LCBwZW5kaW5nIGZ1cnRoZXIgZGlzY3Vzc2lvbiwgYXMgdGhpcyBpcyB0aGUgbWFpbiBnZW5lcmFsLXB1cnBvc2UgcGFja2FnZSB1c2VkIGJ5IG90aGVyIHByb2plY3RzLjwvcD4KPGgyIGlkPSJkZXRhaWxlZC1kZXNpZ24iPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjZGV0YWlsZWQtZGVzaWduIj4jPC9hPiBEZXRhaWxlZCBEZXNpZ248L2gyPgo8aDMgaWQ9InB1YmxpYy1hcGkiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjcHVibGljLWFwaSI+IzwvYT4gUHVibGljIEFQSTwvaDM+CjxwPldoZW4gcHJlcGFyaW5nIG91ciBwdWJsaWMgQVBJIGZvciAxLjAsIHdlIHNob3VsZCBrZWVwIHRoZXNlIHByaW5jaXBsZXMgaW4gbWluZDo8L3A+Cjx1bD4KPGxpPgo8cD5MaW1pdCB0aGUgbnVtYmVyIG9mIHB1YmxpYyBBUElzIHRoYXQgd2Ugc3RhcnQgb3V0IHdpdGggLSB3ZSBjYW4gYWx3YXlzIGFkZCBuZXcgQVBJcyBsYXRlciwgYnV0IHdlIGNhbid0IGNoYW5nZSBvciByZW1vdmUgQVBJcyBvbmNlIHRoZXkncmUgbWFkZSBwdWJsaWMuPC9wPgo8L2xpPgo8bGk+CjxwPkJlZm9yZSBhbiBBUEkgaXMgbWFkZSBwdWJsaWMsIGRvIGEgdGhvcm91Z2ggcmV2aWV3IG9mIHRoZSBBUEkgdG8gbWFrZSBzdXJlIGl0IGNvdmVycyBhbnkgZnV0dXJlIG5lZWRzLCBjYW4gYWNjb21vZGF0ZSBleHBlY3RlZCBjaGFuZ2VzLCBhbmQgZm9sbG93cyBnb29kIEFQSSBkZXNpZ24gcHJhY3RpY2VzLjwvcD4KPC9saT4KPC91bD4KPHA+VGhlIGZvbGxvd2luZyBpcyB0aGUgbWluaW11bSBzZXQgb2YgcHVibGljIEFQSXMgdGhhdCB3aWxsIGJlIGluY2x1ZGVkIGluIDEuMCwgaW4gc29tZSBmb3JtOjwvcD4KPHVsPgo8bGk+PGNvZGU+YWJjaTwvY29kZT48L2xpPgo8bGk+cGFja2FnZXMgdXNlZCBmb3IgY29uc3RydWN0aW5nIG5vZGVzIDxjb2RlPmNvbmZpZzwvY29kZT4sIDxjb2RlPmxpYnMvbG9nPC9jb2RlPiwgYW5kIDxjb2RlPnZlcnNpb248L2NvZGU+PC9saT4KPGxpPkNsaWVudCBBUElzLCBpLmUuIDxjb2RlPnJwYy9jbGllbnQ8L2NvZGU+LCA8Y29kZT5saWdodDwvY29kZT4sIGFuZCA8Y29kZT5wcml2dmFsPC9jb2RlPi48L2xpPgo8bGk+PGNvZGU+Y3J5cHRvPC9jb2RlPiAocG9zc2libHkgYXMgYSBzZXBhcmF0ZSByZXBvKTwvbGk+CjwvdWw+CjxwPldlIG1heSBvZmZlciBhZGRpdGlvbmFsIEFQSXMgYXMgd2VsbCwgZm9sbG93aW5nIGZ1cnRoZXIgZGlzY3Vzc2lvbnMgaW50ZXJuYWxseSBhbmQgd2l0aCBvdGhlciBzdGFrZWhvbGRlcnMuIEhvd2V2ZXIsIHB1YmxpYyBBUElzIGZvciBwcm92aWRpbmcgY3VzdG9tIGNvbXBvbmVudHMgKGUuZy4gcmVhY3RvcnMgYW5kIG1lbXBvb2xzKSBhcmUgbm90IHBsYW5uZWQgZm9yIDEuMCwgYnV0IG1heSBiZSBhZGRlZCBpbiBhIGxhdGVyIDEueCB2ZXJzaW9uIGlmIHRoaXMgaXMgc29tZXRoaW5nIHdlIHdhbnQgdG8gb2ZmZXIuPC9wPgo8cD5Gb3IgY29tcGFyaXNvbiwgdGhlIGZvbGxvd2luZyBhcmUgdGhlIG51bWJlciBvZiBUZW5kZXJtaW50IGltcG9ydHMgaW4gdGhlIENvc21vcyBTREsgKGV4Y2x1ZGluZyB0ZXN0cyksIHdoaWNoIHNob3VsZCBiZSBtb3N0bHkgc2F0aXNmaWVkIGJ5IHRoZSBwbGFubmVkIEFQSXMuPC9wPgoKICAgIDx0bS1jb2RlLWJsb2NrIGNsYXNzPSJjb2RlYmxvY2siIGxhbmd1YWdlPSIiIGJhc2U2ND0iSUNBZ0lDQWdNU0JuYVhSb2RXSXVZMjl0TDNSbGJtUmxjbTFwYm5RdmRHVnVaR1Z5YldsdWRDOWhZbU5wTDNObGNuWmxjZ29nSUNBZ0lEY3pJR2RwZEdoMVlpNWpiMjB2ZEdWdVpHVnliV2x1ZEM5MFpXNWtaWEp0YVc1MEwyRmlZMmt2ZEhsd1pYTUtJQ0FnSUNBZ01pQm5hWFJvZFdJdVkyOXRMM1JsYm1SbGNtMXBiblF2ZEdWdVpHVnliV2x1ZEM5amJXUXZkR1Z1WkdWeWJXbHVkQzlqYjIxdFlXNWtjd29nSUNBZ0lDQTNJR2RwZEdoMVlpNWpiMjB2ZEdWdVpHVnliV2x1ZEM5MFpXNWtaWEp0YVc1MEwyTnZibVpwWndvZ0lDQWdJRFk0SUdkcGRHaDFZaTVqYjIwdmRHVnVaR1Z5YldsdWRDOTBaVzVrWlhKdGFXNTBMMk55ZVhCMGJ3b2dJQ0FnSUNBeElHZHBkR2gxWWk1amIyMHZkR1Z1WkdWeWJXbHVkQzkwWlc1a1pYSnRhVzUwTDJOeWVYQjBieTloY20xdmNnb2dJQ0FnSURFd0lHZHBkR2gxWWk1amIyMHZkR1Z1WkdWeWJXbHVkQzkwWlc1a1pYSnRhVzUwTDJOeWVYQjBieTlsWkRJMU5URTVDaUFnSUNBZ0lESWdaMmwwYUhWaUxtTnZiUzkwWlc1a1pYSnRhVzUwTDNSbGJtUmxjbTFwYm5RdlkzSjVjSFJ2TDJWdVkyOWthVzVuQ2lBZ0lDQWdJRE1nWjJsMGFIVmlMbU52YlM5MFpXNWtaWEp0YVc1MEwzUmxibVJsY20xcGJuUXZZM0o1Y0hSdkwyMWxjbXRzWlFvZ0lDQWdJQ0F6SUdkcGRHaDFZaTVqYjIwdmRHVnVaR1Z5YldsdWRDOTBaVzVrWlhKdGFXNTBMMk55ZVhCMGJ5OXpjakkxTlRFNUNpQWdJQ0FnSURnZ1oybDBhSFZpTG1OdmJTOTBaVzVrWlhKdGFXNTBMM1JsYm1SbGNtMXBiblF2WTNKNWNIUnZMM1J0YUdGemFBb2dJQ0FnSUNBeElHZHBkR2gxWWk1amIyMHZkR1Z1WkdWeWJXbHVkQzkwWlc1a1pYSnRhVzUwTDJOeWVYQjBieTk0YzJGc2MyRXlNSE41YlcxbGRISnBZd29nSUNBZ0lERXhJR2RwZEdoMVlpNWpiMjB2ZEdWdVpHVnliV2x1ZEM5MFpXNWtaWEp0YVc1MEwyeHBZbk12WW5sMFpYTUtJQ0FnSUNBZ01pQm5hWFJvZFdJdVkyOXRMM1JsYm1SbGNtMXBiblF2ZEdWdVpHVnliV2x1ZEM5c2FXSnpMMko1ZEdWekxraGxlRUo1ZEdWekNpQWdJQ0FnTVRVZ1oybDBhSFZpTG1OdmJTOTBaVzVrWlhKdGFXNTBMM1JsYm1SbGNtMXBiblF2YkdsaWN5OWpiR2tLSUNBZ0lDQWdNaUJuYVhSb2RXSXVZMjl0TDNSbGJtUmxjbTFwYm5RdmRHVnVaR1Z5YldsdWRDOXNhV0p6TDJOc2FTOW1iR0ZuY3dvZ0lDQWdJQ0F5SUdkcGRHaDFZaTVqYjIwdmRHVnVaR1Z5YldsdWRDOTBaVzVrWlhKdGFXNTBMMnhwWW5NdmFuTnZiZ29nSUNBZ0lETXdJR2RwZEdoMVlpNWpiMjB2ZEdWdVpHVnliV2x1ZEM5MFpXNWtaWEp0YVc1MEwyeHBZbk12Ykc5bkNpQWdJQ0FnSURFZ1oybDBhSFZpTG1OdmJTOTBaVzVrWlhKdGFXNTBMM1JsYm1SbGNtMXBiblF2YkdsaWN5OXRZWFJvQ2lBZ0lDQWdNVEVnWjJsMGFIVmlMbU52YlM5MFpXNWtaWEp0YVc1MEwzUmxibVJsY20xcGJuUXZiR2xpY3k5dmN3b2dJQ0FnSUNBMElHZHBkR2gxWWk1amIyMHZkR1Z1WkdWeWJXbHVkQzkwWlc1a1pYSnRhVzUwTDJ4cFluTXZjbUZ1WkFvZ0lDQWdJQ0F4SUdkcGRHaDFZaTVqYjIwdmRHVnVaR1Z5YldsdWRDOTBaVzVrWlhKdGFXNTBMMnhwWW5NdmMzUnlhVzVuY3dvZ0lDQWdJQ0ExSUdkcGRHaDFZaTVqYjIwdmRHVnVaR1Z5YldsdWRDOTBaVzVrWlhKdGFXNTBMMnhwWjJoMENpQWdJQ0FnSURFZ1oybDBhSFZpTG1OdmJTOTBaVzVrWlhKdGFXNTBMM1JsYm1SbGNtMXBiblF2YVc1MFpYSnVZV3d2YldWdGNHOXZiQW9nSUNBZ0lDQXpJR2RwZEdoMVlpNWpiMjB2ZEdWdVpHVnliV2x1ZEM5MFpXNWtaWEp0YVc1MEwyNXZaR1VLSUNBZ0lDQWdOU0JuYVhSb2RXSXVZMjl0TDNSbGJtUmxjbTFwYm5RdmRHVnVaR1Z5YldsdWRDOXBiblJsY201aGJDOXdNbkFLSUNBZ0lDQWdOQ0JuYVhSb2RXSXVZMjl0TDNSbGJtUmxjbTFwYm5RdmRHVnVaR1Z5YldsdWRDOXdjbWwyZG1Gc0NpQWdJQ0FnTVRBZ1oybDBhSFZpTG1OdmJTOTBaVzVrWlhKdGFXNTBMM1JsYm1SbGNtMXBiblF2Y0hKdmRHOHZkR1Z1WkdWeWJXbHVkQzlqY25sd2RHOEtJQ0FnSUNBZ01TQm5hWFJvZFdJdVkyOXRMM1JsYm1SbGNtMXBiblF2ZEdWdVpHVnliV2x1ZEM5d2NtOTBieTkwWlc1a1pYSnRhVzUwTDJ4cFluTXZZbWwwY3dvZ0lDQWdJREkwSUdkcGRHaDFZaTVqYjIwdmRHVnVaR1Z5YldsdWRDOTBaVzVrWlhKdGFXNTBMM0J5YjNSdkwzUmxibVJsY20xcGJuUXZkSGx3WlhNS0lDQWdJQ0FnTXlCbmFYUm9kV0l1WTI5dEwzUmxibVJsY20xcGJuUXZkR1Z1WkdWeWJXbHVkQzl3Y205MGJ5OTBaVzVrWlhKdGFXNTBMM1psY25OcGIyNEtJQ0FnSUNBZ01pQm5hWFJvZFdJdVkyOXRMM1JsYm1SbGNtMXBiblF2ZEdWdVpHVnliV2x1ZEM5d2NtOTRlUW9nSUNBZ0lDQXpJR2RwZEdoMVlpNWpiMjB2ZEdWdVpHVnliV2x1ZEM5MFpXNWtaWEp0YVc1MEwzSndZeTlqYkdsbGJuUUtJQ0FnSUNBZ01TQm5hWFJvZFdJdVkyOXRMM1JsYm1SbGNtMXBiblF2ZEdWdVpHVnliV2x1ZEM5eWNHTXZZMnhwWlc1MEwyaDBkSEFLSUNBZ0lDQWdNaUJuYVhSb2RXSXVZMjl0TDNSbGJtUmxjbTFwYm5RdmRHVnVaR1Z5YldsdWRDOXljR012WTJ4cFpXNTBMMnh2WTJGc0NpQWdJQ0FnSURNZ1oybDBhSFZpTG1OdmJTOTBaVzVrWlhKdGFXNTBMM1JsYm1SbGNtMXBiblF2Y25CakwyTnZjbVV2ZEhsd1pYTUtJQ0FnSUNBZ01TQm5hWFJvZFdJdVkyOXRMM1JsYm1SbGNtMXBiblF2ZEdWdVpHVnliV2x1ZEM5eWNHTXZhbk52Ym5Kd1l5OXpaWEoyWlhJS0lDQWdJQ0F6TXlCbmFYUm9kV0l1WTI5dEwzUmxibVJsY20xcGJuUXZkR1Z1WkdWeWJXbHVkQzkwZVhCbGN3b2dJQ0FnSUNBeUlHZHBkR2gxWWk1amIyMHZkR1Z1WkdWeWJXbHVkQzkwWlc1a1pYSnRhVzUwTDNSNWNHVnpMM1JwYldVS0lDQWdJQ0FnTVNCbmFYUm9kV0l1WTI5dEwzUmxibVJsY20xcGJuUXZkR1Z1WkdWeWJXbHVkQzkyWlhKemFXOXVDZz09Ij48L3RtLWNvZGUtYmxvY2s+CiAgICA8aDMgaWQ9ImJhY2t3YXJkcy1jb21wYXRpYmxlLWNoYW5nZXMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjYmFja3dhcmRzLWNvbXBhdGlibGUtY2hhbmdlcyI+IzwvYT4gQmFja3dhcmRzLUNvbXBhdGlibGUgQ2hhbmdlczwvaDM+CjxwPkluIEdvLCA8YSBocmVmPSJodHRwczovL2Jsb2cuZ29sYW5nLm9yZy9tb2R1bGUtY29tcGF0aWJpbGl0eSIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+YWxtb3N0IGFsbCBBUEkgY2hhbmdlcyBhcmUgYmFja3dhcmRzLWluY29tcGF0aWJsZTxPdXRib3VuZExpbmsvPjwvYT4gYW5kIHRodXMgZXhwb3J0ZWQgaXRlbXMgaW4gcHVibGljIEFQSXMgZ2VuZXJhbGx5IGNhbm5vdCBiZSBjaGFuZ2VkIHVudGlsIFRlbmRlcm1pbnQgMi4wLiBUaGUgb25seSBiYWNrd2FyZHMtY29tcGF0aWJsZSBjaGFuZ2VzIHdlIGNhbiBtYWtlIHRvIHB1YmxpYyBBUElzIGFyZTo8L3A+Cjx1bD4KPGxpPgo8cD5BZGRpbmcgYSBwYWNrYWdlLjwvcD4KPC9saT4KPGxpPgo8cD5BZGRpbmcgYSBuZXcgaWRlbnRpZmllciB0byB0aGUgcGFja2FnZSBzY29wZSAoZS5nLiBjb25zdCwgdmFyLCBmdW5jLCBzdHJ1Y3QsIGludGVyZmFjZSwgZXRjLikuPC9wPgo8L2xpPgo8bGk+CjxwPkFkZGluZyBhIG5ldyBtZXRob2QgdG8gYSBzdHJ1Y3QuPC9wPgo8L2xpPgo8bGk+CjxwPkFkZGluZyBhIG5ldyBmaWVsZCB0byBhIHN0cnVjdCwgaWYgdGhlIHplcm8tdmFsdWUgcHJlc2VydmVzIGFueSBvbGQgYmVoYXZpb3IuPC9wPgo8L2xpPgo8bGk+CjxwPkNoYW5naW5nIHRoZSBvcmRlciBvZiBmaWVsZHMgaW4gYSBzdHJ1Y3QuPC9wPgo8L2xpPgo8bGk+CjxwPkFkZGluZyBhIHZhcmlhZGljIHBhcmFtZXRlciB0byBhIG5hbWVkIGZ1bmN0aW9uIG9yIHN0cnVjdCBtZXRob2QsIGlmIHRoZSBmdW5jdGlvbiB0eXBlIGl0c2VsZiBpcyBub3QgYXNzaWduYWJsZSBpbiBhbnkgcHVibGljIEFQSXMgKGUuZy4gYSBjYWxsYmFjaykuPC9wPgo8L2xpPgo8bGk+CjxwPkFkZGluZyBhIG5ldyBtZXRob2QgdG8gYW4gaW50ZXJmYWNlLCBvciBhIHZhcmlhZGljIHBhcmFtZXRlciB0byBhbiBpbnRlcmZhY2UgbWV0aG9kLCA8ZW0+aWYgdGhlIGludGVyZmFjZSBhbHJlYWR5IGhhcyBhIHByaXZhdGUgbWV0aG9kPC9lbT4gKHdoaWNoIHByZXZlbnRzIGV4dGVybmFsIHBhY2thZ2VzIGZyb20gaW1wbGVtZW50aW5nIGl0KS48L3A+CjwvbGk+CjxsaT4KPHA+V2lkZW5pbmcgYSBudW1lcmljIHR5cGUgYXMgbG9uZyBhcyBpdCBpcyBhIG5hbWVkIHR5cGUgKGUuZy4gPGNvZGU+dHlwZSBOdW1iZXIgaW50MzI8L2NvZGU+IGNhbiBjaGFuZ2UgdG8gPGNvZGU+aW50NjQ8L2NvZGU+LCBidXQgbm90IDxjb2RlPmludDg8L2NvZGU+IG9yIDxjb2RlPnVpbnQzMjwvY29kZT4pLjwvcD4KPC9saT4KPC91bD4KPHA+Tm90ZSB0aGF0IHB1YmxpYyBBUElzIGNhbiBleHBvc2UgcHJpdmF0ZSB0eXBlcyAoZS5nLiB2aWEgYW4gZXhwb3J0ZWQgdmFyaWFibGUsIGZpZWxkLCBvciBmdW5jdGlvbi9tZXRob2QgcmV0dXJuIHZhbHVlKSwgaW4gd2hpY2ggY2FzZSB0aGUgZXhwb3J0ZWQgZmllbGRzIGFuZCBtZXRob2RzIG9uIHRoZXNlIHByaXZhdGUgdHlwZXMgYXJlIGFsc28gcGFydCBvZiB0aGUgcHVibGljIEFQSSBhbmQgY292ZXJlZCBieSBpdHMgYmFja3dhcmRzIGNvbXBhdGlibGl0eSBndWFyYW50ZWVzLiBJbiBnZW5lcmFsLCBwcml2YXRlIHR5cGVzIHNob3VsZCBuZXZlciBiZSBhY2Nlc3NpYmxlIHZpYSBwdWJsaWMgQVBJcyB1bmxlc3Mgd3JhcHBlZCBpbiBhbiBleHBvcnRlZCBpbnRlcmZhY2UuPC9wPgo8cD5BbHNvIG5vdGUgdGhhdCBpZiB3ZSBhY2NlcHQsIHJldHVybiwgZXhwb3J0LCBvciBlbWJlZCB0eXBlcyBmcm9tIGEgZGVwZW5kZW5jeSwgd2UgYXNzdW1lIHRoZSBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eSByZXNwb25zaWJpbGl0eSBmb3IgdGhhdCBkZXBlbmRlbmN5LCBhbmQgbXVzdCBtYWtlIHN1cmUgYW55IGRlcGVuZGVuY3kgdXBncmFkZXMgY29tcGx5IHdpdGggdGhlIGFib3ZlIGNvbnN0cmFpbnRzLjwvcD4KPHA+V2Ugc2hvdWxkIHJ1biBDSSBsaW50ZXJzIGZvciBtaW5vciB2ZXJzaW9uIGJyYW5jaGVzIHRvIGVuZm9yY2UgdGhpcywgZS5nLiA8YSBocmVmPSJodHRwczovL2dvLmdvb2dsZXNvdXJjZS5jb20vZXhwLysvcmVmcy9oZWFkcy9tYXN0ZXIvYXBpZGlmZi9SRUFETUUubWQiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiPmFwaWRpZmY8T3V0Ym91bmRMaW5rLz48L2E+LCA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vZ2Jici9icmVha2NoZWNrIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5icmVha2NoZWNrPE91dGJvdW5kTGluay8+PC9hPiwgYW5kIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9icmFkbGV5ZmFsem9uL2FwaWNvbXBhdCIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+YXBpY29tYmF0PE91dGJvdW5kTGluay8+PC9hPi48L3A+CjxoNCBpZD0iYWNjZXB0ZWQtYnJlYWthZ2UiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjYWNjZXB0ZWQtYnJlYWthZ2UiPiM8L2E+IEFjY2VwdGVkIEJyZWFrYWdlPC9oND4KPHA+VGhlIGFib3ZlIGNoYW5nZXMgY2FuIHN0aWxsIGJyZWFrIHByb2dyYW1zIGluIGEgZmV3IHdheXMgLSB0aGVzZSBhcmUgPGVtPm5vdDwvZW0+IGNvbnNpZGVyZWQgYmFja3dhcmRzLWluY29tcGF0aWJsZSBjaGFuZ2VzLCBhbmQgdXNlcnMgYXJlIGFkdmlzZWQgdG8gYXZvaWQgdGhpcyB1c2FnZTo8L3A+Cjx1bD4KPGxpPgo8cD5JZiBhIHByb2dyYW0gdXNlcyB1bmtleWVkIHN0cnVjdCBsaXRlcmFscyAoZS5nLiA8Y29kZT5Gb297JnF1b3Q7YmFyJnF1b3Q7LCAmcXVvdDtiYXomcXVvdDt9PC9jb2RlPikgYW5kIHdlIGFkZCBmaWVsZHMgb3IgY2hhbmdlIHRoZSBmaWVsZCBvcmRlciwgdGhlIHByb2dyYW0gd2lsbCBubyBsb25nZXIgY29tcGlsZSBvciBtYXkgaGF2ZSBsb2dpYyBlcnJvcnMuPC9wPgo8L2xpPgo8bGk+CjxwPklmIGEgcHJvZ3JhbSBlbWJlZHMgdHdvIHN0cnVjdHMgaW4gYSBzdHJ1Y3QsIGFuZCB3ZSBhZGQgYSBuZXcgZmllbGQgb3IgbWV0aG9kIHRvIGFuIGVtYmVkZGVkIFRlbmRlcm1pbnQgc3RydWN0IHdoaWNoIGFsc28gZXhpc3RzIGluIHRoZSBvdGhlciBlbWJlZGRlZCBzdHJ1Y3QsIHRoZSBwcm9ncmFtIHdpbGwgbm8gbG9uZ2VyIGNvbXBpbGUuPC9wPgo8L2xpPgo8bGk+CjxwPklmIGEgcHJvZ3JhbSBjb21wYXJlcyB0d28gc3RydWN0cyAoZS5nLiB3aXRoIDxjb2RlPj09PC9jb2RlPiksIGFuZCB3ZSBhZGQgYSBuZXcgZmllbGQgb2YgYW4gaW5jb21wYXJhYmxlIHR5cGUgKHNsaWNlLCBtYXAsIGZ1bmMsIG9yIHN0cnVjdCB0aGF0IGNvbnRhaW5zIHRoZXNlKSB0byBhIFRlbmRlcm1pbnQgc3RydWN0IHdoaWNoIGlzIGNvbXBhcmVkLCB0aGUgcHJvZ3JhbSB3aWxsIG5vIGxvbmdlciBjb21waWxlLjwvcD4KPC9saT4KPGxpPgo8cD5JZiBhIHByb2dyYW0gYXNzaWducyBhIFRlbmRlcm1pbnQgZnVuY3Rpb24gdG8gYW4gaWRlbnRpZmllciwgYW5kIHdlIGFkZCBhIHZhcmlhZGljIHBhcmFtZXRlciB0byB0aGUgZnVuY3Rpb24gc2lnbmF0dXJlLCB0aGUgcHJvZ3JhbSB3aWxsIG5vIGxvbmdlciBjb21waWxlLjwvcD4KPC9saT4KPC91bD4KPGgzIGlkPSJzdHJhdGVnaWVzLWZvci1hcGktZXZvbHV0aW9uIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3N0cmF0ZWdpZXMtZm9yLWFwaS1ldm9sdXRpb24iPiM8L2E+IFN0cmF0ZWdpZXMgZm9yIEFQSSBFdm9sdXRpb248L2gzPgo8cD5UaGUgQVBJIGd1YXJhbnRlZXMgYWJvdmUgY2FuIGJlIGZhaXJseSBjb25zdHJhaW5pbmcsIGJ1dCBhcmUgdW5hdm9pZGFibGUgZ2l2ZW4gdGhlIEdvIGxhbmd1YWdlIGRlc2lnbi4gVGhlIGZvbGxvd2luZyB0cmlja3MgY2FuIGJlIGVtcGxveWVkIHdoZXJlIGFwcHJvcHJpYXRlIHRvIGFsbG93IHVzIHRvIG1ha2UgY2hhbmdlcyB0byB0aGUgQVBJOjwvcD4KPHVsPgo8bGk+CjxwPldlIGNhbiBhZGQgYSBuZXcgZnVuY3Rpb24gb3IgbWV0aG9kIHdpdGggYSBkaWZmZXJlbnQgbmFtZSB0aGF0IHRha2VzIGFkZGl0aW9uYWwgcGFyYW1ldGVycywgYW5kIGhhdmUgdGhlIG9sZCBmdW5jdGlvbiBjYWxsIHRoZSBuZXcgb25lLjwvcD4KPC9saT4KPGxpPgo8cD5GdW5jdGlvbnMgYW5kIG1ldGhvZHMgY2FuIHRha2UgYW4gb3B0aW9ucyBzdHJ1Y3QgaW5zdGVhZCBvZiBzZXBhcmF0ZSBwYXJhbWV0ZXJzLCB0byBhbGxvdyBhZGRpbmcgbmV3IG9wdGlvbnMgLSB0aGlzIGlzIHBhcnRpY3VsYXJseSBzdWl0YWJsZSBmb3IgZnVuY3Rpb25zIHRoYXQgdGFrZSBtYW55IHBhcmFtZXRlcnMgYW5kIGFyZSBleHBlY3RlZCB0byBiZSBleHRlbmRlZCwgYW5kIGVzcGVjaWFsbHkgZm9yIGludGVyZmFjZXMgd2hlcmUgd2UgY2Fubm90IGFkZCBuZXcgbWV0aG9kcyB3aXRoIGRpZmZlcmVudCBwYXJhbWV0ZXJzIGF0IGFsbC48L3A+CjwvbGk+CjxsaT4KPHA+SW50ZXJmYWNlcyBjYW4gaW5jbHVkZSBhIHByaXZhdGUgbWV0aG9kLCBlLmcuIDxjb2RlPmludGVyZmFjZSB7IHByaXZhdGUoKSB9PC9jb2RlPiwgdG8gbWFrZSB0aGVtIHVuaW1wbGVtZW50YWJsZSBieSBleHRlcm5hbCBwYWNrYWdlcyBhbmQgdGh1cyBhbGxvdyB1cyB0byBhZGQgbmV3IG1ldGhvZHMgdG8gdGhlIGludGVyZmFjZSB3aXRob3V0IGJyZWFraW5nIG90aGVyIHByb2dyYW1zLiBPZiBjb3Vyc2UsIHRoaXMgY2FuJ3QgYmUgdXNlZCBmb3IgaW50ZXJmYWNlcyB0aGF0IHNob3VsZCBiZSBpbXBsZW1lbnRhYmxlIGV4dGVybmFsbHkuPC9wPgo8L2xpPgo8bGk+CjxwPldlIGNhbiB1c2UgPGEgaHJlZj0iaHR0cHM6Ly9hdnRvay5jb20vMjAxNC8xMS8wNS9pbnRlcmZhY2UtdXBncmFkZXMuaHRtbCIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+aW50ZXJmYWNlIHVwZ3JhZGVzPE91dGJvdW5kTGluay8+PC9hPiB0byBhbGxvdyBpbXBsZW1lbnRlcnMgb2YgYW4gZXhpc3RpbmcgaW50ZXJmYWNlIHRvIGFsc28gaW1wbGVtZW50IGEgbmV3IGludGVyZmFjZSwgYXMgbG9uZyBhcyB0aGUgb2xkIGludGVyZmFjZSBjYW4gc3RpbGwgYmUgdXNlZCAtIGUuZy4gdGhlIG5ldyBpbnRlcmZhY2UgPGNvZGU+QmV0dGVyUmVhZGVyPC9jb2RlPiBtYXkgaGF2ZSBhIG1ldGhvZCA8Y29kZT5SZWFkQmV0dGVyKCk8L2NvZGU+LCBhbmQgYSBmdW5jdGlvbiB0aGF0IHRha2VzIGEgPGNvZGU+UmVhZGVyPC9jb2RlPiBpbnRlcmZhY2UgYXMgYW4gaW5wdXQgY2FuIGNoZWNrIGlmIHRoZSBpbXBsZW1lbnRlciBhbHNvIGltcGxlbWVudHMgPGNvZGU+QmV0dGVyUmVhZGVyPC9jb2RlPiBhbmQgaW4gdGhhdCBjYXNlIGNhbGwgPGNvZGU+UmVhZEJldHRlcigpPC9jb2RlPiBpbnN0ZWFkIG9mIDxjb2RlPlJlYWQoKTwvY29kZT4uPC9wPgo8L2xpPgo8L3VsPgo8aDIgaWQ9InN0YXR1cyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNzdGF0dXMiPiM8L2E+IFN0YXR1czwvaDI+CjxwPlByb3Bvc2VkPC9wPgo8aDIgaWQ9ImNvbnNlcXVlbmNlcyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNjb25zZXF1ZW5jZXMiPiM8L2E+IENvbnNlcXVlbmNlczwvaDI+CjxoMyBpZD0icG9zaXRpdmUiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjcG9zaXRpdmUiPiM8L2E+IFBvc2l0aXZlPC9oMz4KPHVsPgo8bGk+CjxwPlVzZXJzIGNhbiBzYWZlbHkgdXBncmFkZSB3aXRoIGxlc3MgZmVhciBvZiBhcHBsaWNhdGlvbnMgYnJlYWtpbmcsIGFuZCBrbm93IHdoZXRoZXIgYW4gdXBncmFkZSBvbmx5IGluY2x1ZGVzIGJ1ZyBmaXhlcyBvciBhbHNvIGZ1bmN0aW9uYWwgZW5oYW5jZW1lbnRzPC9wPgo8L2xpPgo8bGk+CjxwPkV4dGVybmFsIGRldmVsb3BlcnMgaGF2ZSBhIHByZWRpY3RhYmxlIGFuZCB3ZWxsLWRlZmluZWQgQVBJIHRvIGJ1aWxkIG9uIHRoYXQgd2lsbCBiZSBzdXBwb3J0ZWQgZm9yIHNvbWUgdGltZTwvcD4KPC9saT4KPGxpPgo8cD5MZXNzIHN5bmNocm9uaXphdGlvbiBiZXR3ZWVuIHRlYW1zLCBzaW5jZSB0aGVyZSBpcyBhIGNsZWFyZXIgY29udHJhY3QgYW5kIHRpbWVsaW5lIGZvciBjaGFuZ2VzIGFuZCB0aGV5IGhhcHBlbiBsZXNzIGZyZXF1ZW50bHk8L3A+CjwvbGk+CjxsaT4KPHA+TW9yZSBkb2N1bWVudGF0aW9uIHdpbGwgcmVtYWluIGFjY3VyYXRlLCBzaW5jZSBpdCdzIG5vdCBjaGFzaW5nIGEgbW92aW5nIHRhcmdldDwvcD4KPC9saT4KPGxpPgo8cD5MZXNzIHRpbWUgd2lsbCBiZSBzcGVudCBvbiBjb2RlIGNodXJuIGFuZCBtb3JlIHRpbWUgc3BlbnQgb24gZnVuY3Rpb25hbCBpbXByb3ZlbWVudHMsIGJvdGggZm9yIHRoZSBjb21tdW5pdHkgYW5kIGZvciBvdXIgdGVhbXM8L3A+CjwvbGk+CjwvdWw+CjxoMyBpZD0ibmVnYXRpdmUiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjbmVnYXRpdmUiPiM8L2E+IE5lZ2F0aXZlPC9oMz4KPHVsPgo8bGk+CjxwPk1hbnkgaW1wcm92ZW1lbnRzLCBjaGFuZ2VzLCBhbmQgYnVnIGZpeGVzIHdpbGwgaGF2ZSB0byBiZSBwb3N0cG9uZWQgdW50aWwgdGhlIG5leHQgbWFqb3IgdmVyc2lvbiwgcG9zc2libHkgZm9yIGEgeWVhciBvciBtb3JlPC9wPgo8L2xpPgo8bGk+CjxwPlRoZSBwYWNlIG9mIGRldmVsb3BtZW50IHdpbGwgc2xvdyBkb3duLCBzaW5jZSB3ZSBtdXN0IHdvcmsgd2l0aGluIHRoZSBleGlzdGluZyBBUEkgY29uc3RyYWludHMsIGFuZCBzcGVuZCBtb3JlIHRpbWUgcGxhbm5pbmcgcHVibGljIEFQSXM8L3A+CjwvbGk+CjxsaT4KPHA+RXh0ZXJuYWwgZGV2ZWxvcGVycyBtYXkgbG9zZSBhY2Nlc3MgdG8gc29tZSBjdXJyZW50bHkgZXhwb3J0ZWQgQVBJcyBhbmQgZnVuY3Rpb25hbGl0eTwvcD4KPC9saT4KPC91bD4KPGgyIGlkPSJyZWZlcmVuY2VzIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3JlZmVyZW5jZXMiPiM8L2E+IFJlZmVyZW5jZXM8L2gyPgo8dWw+CjxsaT4KPHA+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL3RlbmRlcm1pbnQvdGVuZGVybWludC9pc3N1ZXMvNDQ1MSIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciI+IzQ0NTE6IFBsYWNlIGludGVybmFsIEFQSXMgdW5kZXIgaW50ZXJuYWwgcGFja2FnZTxPdXRib3VuZExpbmsvPjwvYT48L3A+CjwvbGk+CjxsaT4KPHA+PGEgaHJlZj0iaHR0cHM6Ly9kb2NzLmdvb2dsZS5jb20vZG9jdW1lbnQvZC8xRzA4TG53U3liNkJBdUNWU01GM0VLbjQ3Q0dkaFo1d1BaWUpRcjQtYnc1OC9lZGl0P3RzPTVmNjA5ZjExIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5PbiBQbHVnZ2FiaWxpdHk8T3V0Ym91bmRMaW5rLz48L2E+PC9wPgo8L2xpPgo8L3VsPgo8L0NvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yPgo="},null]}