{"remainingRequest":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/rfc/rfc-013-abci++.md?vue&type=template&id=90bbc9e2&","dependencies":[{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/rfc/rfc-013-abci++.md","mtime":1673295761289},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/cache-loader/dist/cjs.js","mtime":1673296285960},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1673296286086},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/cache-loader/dist/cjs.js","mtime":1673296285960},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/vue-loader/lib/index.js","mtime":1673296285952},{"path":"/Users/aaronwright/Dev/comet-bft-tendermint/docs-old/node_modules/@vuepress/markdown-loader/index.js","mtime":1673296286103}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxDb250ZW50U2xvdHNEaXN0cmlidXRvciA6c2xvdC1rZXk9IiRwYXJlbnQuc2xvdEtleSI+PGgxIGlkPSJyZmMtMDEzLWFiY2kiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjcmZjLTAxMy1hYmNpIj4jPC9hPiBSRkMgMDEzOiBBQkNJKys8L2gxPgo8aDIgaWQ9ImNoYW5nZWxvZyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNjaGFuZ2Vsb2ciPiM8L2E+IENoYW5nZWxvZzwvaDI+Cjx1bD4KPGxpPjIwMjAtMDEtMTE6IGluaXRpYWxpemVkPC9saT4KPGxpPjIwMjItMDItMTE6IE1pZ3JhdGUgUkZDIHRvIHRlbmRlcm1pbnQgcmVwbyAoT3JpZ2luYWxseSA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vdGVuZGVybWludC9zcGVjL3B1bGwvMjU0IiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5SRkMgMDA0PE91dGJvdW5kTGluay8+PC9hPik8L2xpPgo8L3VsPgo8aDIgaWQ9ImF1dGhvci1zIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2F1dGhvci1zIj4jPC9hPiBBdXRob3Iocyk8L2gyPgo8dWw+CjxsaT5EZXYgKEB2YWxhcmRyYWdvbik8L2xpPgo8bGk+U3VubnkgKEBzdW5ueWE5Nyk8L2xpPgo8L3VsPgo8aDIgaWQ9ImNvbnRleHQiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjY29udGV4dCI+IzwvYT4gQ29udGV4dDwvaDI+CjxwPkFCQ0kgaXMgdGhlIGludGVyZmFjZSBiZXR3ZWVuIHRoZSBjb25zZW5zdXMgZW5naW5lIGFuZCB0aGUgYXBwbGljYXRpb24uCkl0IGRlZmluZXMgd2hlbiB0aGUgYXBwbGljYXRpb24gY2FuIHRhbGsgdG8gY29uc2Vuc3VzIGR1cmluZyB0aGUgZXhlY3V0aW9uIG9mIGEgYmxvY2tjaGFpbi4KQXQgdGhlIG1vbWVudCwgdGhlIGFwcGxpY2F0aW9uIGNhbiBvbmx5IGFjdCBhdCBvbmUgcGhhc2UgaW4gY29uc2Vuc3VzLCBpbW1lZGlhdGVseSBhZnRlciBhIGJsb2NrIGhhcyBiZWVuIGZpbmFsaXplZC48L3A+CjxwPlRoaXMgcmVzdHJpY3Rpb24gb24gdGhlIGFwcGxpY2F0aW9uIHByb2hpYml0cyBudW1lcm91cyBmZWF0dXJlcyBmb3IgdGhlIGFwcGxpY2F0aW9uLCBpbmNsdWRpbmcgbWFueSBzY2FsYWJpbGl0eSBpbXByb3ZlbWVudHMgdGhhdCBhcmUgbm93IGJldHRlciB1bmRlcnN0b29kIHRoYW4gd2hlbiBBQkNJIHdhcyBmaXJzdCB3cml0dGVuLgpGb3IgZXhhbXBsZSwgbWFueSBvZiB0aGUgc2NhbGFiaWxpdHkgcHJvcG9zYWxzIGNhbiBiZSBib2lsZWQgZG93biB0byAmcXVvdDtNYWtlIHRoZSBtaW5lciAvIGJsb2NrIHByb3Bvc2VycyAvIHZhbGlkYXRvcnMgZG8gd29yaywgc28gdGhlIG5ldHdvcmsgZG9lcyBub3QgaGF2ZSB0byZxdW90Oy4KVGhpcyBpbmNsdWRlcyBvcHRpbWl6YXRpb25zIHN1Y2ggYXMgdHgtbGV2ZWwgc2lnbmF0dXJlIGFnZ3JlZ2F0aW9uLCBzdGF0ZSB0cmFuc2l0aW9uIHByb29mcywgZXRjLgpGdXJ0aGVybW9yZSwgbWFueSBuZXcgc2VjdXJpdHkgcHJvcGVydGllcyBjYW5ub3QgYmUgYWNoaWV2ZWQgaW4gdGhlIGN1cnJlbnQgcGFyYWRpZ20sIGFzIHRoZSBhcHBsaWNhdGlvbiBjYW5ub3QgZW5mb3JjZSB2YWxpZGF0b3JzIGRvIG1vcmUgdGhhbiBqdXN0IGZpbmFsaXplIHR4cy4KVGhpcyBpbmNsdWRlcyBmZWF0dXJlcyBzdWNoIGFzIHRocmVzaG9sZCBjcnlwdG9ncmFwaHksIGFuZCBndWFyYW50ZWVkIElCQyBjb25uZWN0aW9uIGF0dGVtcHRzLgpXZSBwcm9wb3NlIGludHJvZHVjaW5nIHRocmVlIG5ldyBwaGFzZXMgdG8gQUJDSSB0byBlbmFibGUgdGhlc2UgbmV3IGZlYXR1cmVzLCBhbmQgcmVuYW1pbmcgdGhlIGV4aXN0aW5nIG1ldGhvZHMgZm9yIGJsb2NrIGV4ZWN1dGlvbi48L3A+CjxoNCBpZD0icHJlcGFyZS1wcm9wb3NhbC1waGFzZSI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNwcmVwYXJlLXByb3Bvc2FsLXBoYXNlIj4jPC9hPiBQcmVwYXJlIFByb3Bvc2FsIHBoYXNlPC9oND4KPHA+VGhpcyBwaGFzZSBhaW1zIHRvIGFsbG93IHRoZSBibG9jayBwcm9wb3NlciB0byBwZXJmb3JtIG1vcmUgY29tcHV0YXRpb24sIHRvIHJlZHVjZSBsb2FkIG9uIGFsbCBvdGhlciBmdWxsIG5vZGVzLCBhbmQgbGlnaHQgY2xpZW50cyBpbiB0aGUgbmV0d29yay4KSXQgaXMgaW50ZW5kZWQgdG8gZW5hYmxlIGZlYXR1cmVzIHN1Y2ggYXMgYmF0Y2ggb3B0aW1pemF0aW9ucyBvbiB0aGUgdHJhbnNhY3Rpb24gZGF0YSAoZS5nLiBzaWduYXR1cmUgYWdncmVnYXRpb24sIHprIHJvbGx1cCBzdHlsZSB2YWxpZGl0eSBwcm9vZnMsIGV0Yy4pLCBlbmFibGluZyBzdGF0ZWxlc3MgYmxvY2tjaGFpbnMgd2l0aCB2YWxpZGF0b3IgcHJvdmlkZWQgYXV0aGVudGljYXRpb24gcGF0aHMsIGV0Yy48L3A+CjxwPlRoaXMgbmV3IHBoYXNlIHdpbGwgb25seSBiZSBleGVjdXRlZCBieSB0aGUgYmxvY2sgcHJvcG9zZXIuIFRoZSBhcHBsaWNhdGlvbiB3aWxsIHRha2UgaW4gdGhlIGJsb2NrIGhlYWRlciBhbmQgcmF3IHRyYW5zYWN0aW9uIGRhdGEgb3V0cHV0IGJ5IHRoZSBjb25zZW5zdXMgZW5naW5lJ3MgbWVtcG9vbC4gSXQgd2lsbCB0aGVuIHJldHVybiBibG9jayBkYXRhIHRoYXQgaXMgcHJlcGFyZWQgZm9yIGdvc3NpcCBvbiB0aGUgbmV0d29yaywgYW5kIGFkZGl0aW9uYWwgZmllbGRzIHRvIGluY2x1ZGUgaW50byB0aGUgYmxvY2sgaGVhZGVyLjwvcD4KPGg0IGlkPSJwcm9jZXNzLXByb3Bvc2FsLXBoYXNlIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3Byb2Nlc3MtcHJvcG9zYWwtcGhhc2UiPiM8L2E+IFByb2Nlc3MgUHJvcG9zYWwgUGhhc2U8L2g0Pgo8cD5UaGlzIHBoYXNlIGFpbXMgdG8gYWxsb3cgYXBwbGljYXRpb25zIHRvIGRldGVybWluZSB2YWxpZGl0eSBvZiBhIG5ldyBibG9jayBwcm9wb3NhbCwgYW5kIGV4ZWN1dGUgY29tcHV0YXRpb24gb24gdGhlIGJsb2NrIGRhdGEsIHByaW9yIHRvIHRoZSBibG9ja3MgZmluYWxpemF0aW9uLgpJdCBpcyBpbnRlbmRlZCB0byBlbmFibGUgYXBwbGljYXRpb25zIHRvIHJlamVjdCBibG9jayBwcm9wb3NhbHMgd2l0aCBpbnZhbGlkIGRhdGEsIGFuZCB0byBlbmFibGUgYWx0ZXJuYXRlIHBpcGVsaW5lZCBleGVjdXRpb24gbW9kZWxzLiAoU3VjaCBhcyBFdGhlcmV1bS1zdHlsZSBpbW1lZGlhdGUgZXhlY3V0aW9uKTwvcD4KPHA+VGhpcyBwaGFzZSB3aWxsIGJlIGV4ZWN1dGVkIGJ5IGFsbCBmdWxsIG5vZGVzIHVwb24gcmVjZWl2aW5nIGEgYmxvY2ssIHRob3VnaCBvbiB0aGUgYXBwbGljYXRpb24gc2lkZSBpdCBjYW4gZG8gbW9yZSB3b3JrIGluIHRoZSBldmVuIHRoYXQgdGhlIGN1cnJlbnQgbm9kZSBpcyBhIHZhbGlkYXRvci48L3A+CjxoNCBpZD0idm90ZS1leHRlbnNpb24tcGhhc2UiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjdm90ZS1leHRlbnNpb24tcGhhc2UiPiM8L2E+IFZvdGUgRXh0ZW5zaW9uIFBoYXNlPC9oND4KPHA+VGhpcyBwaGFzZSBhaW1zIHRvIGFsbG93IGFwcGxpY2F0aW9ucyB0byByZXF1aXJlIHRoZWlyIHZhbGlkYXRvcnMgZG8gbW9yZSB0aGFuIGp1c3QgdmFsaWRhdGUgYmxvY2tzLgpFeGFtcGxlIHVzZWNhc2VzIG9mIHRoaXMgaW5jbHVkZSB2YWxpZGF0b3IgZGV0ZXJtaW5lZCBwcmljZSBvcmFjbGVzLCB2YWxpZGF0b3IgZ3VhcmFudGVlZCBJQkMgY29ubmVjdGlvbiBhdHRlbXB0cywgYW5kIHZhbGlkYXRvciBiYXNlZCB0aHJlc2hvbGQgY3J5cHRvLjwvcD4KPHA+VGhpcyBhZGRzIGFuIGFwcC1kZXRlcm1pbmVkIGRhdGEgZmllbGQgdGhhdCBldmVyeSB2YWxpZGF0b3IgbXVzdCBpbmNsdWRlIHdpdGggdGhlaXIgdm90ZSwgYW5kIHRoZXNlIHdpbGwgdGh1cyBhcHBlYXIgaW4gdGhlIGhlYWRlci48L3A+CjxoNCBpZD0icmVuYW1lLWJlZ2luYmxvY2stZGVsaXZlcnR4LWVuZGJsb2NrLXRvLWZpbmFsaXplYmxvY2siPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjcmVuYW1lLWJlZ2luYmxvY2stZGVsaXZlcnR4LWVuZGJsb2NrLXRvLWZpbmFsaXplYmxvY2siPiM8L2E+IFJlbmFtZSB7QmVnaW5CbG9jaywgW0RlbGl2ZXJUeF0sIEVuZEJsb2NrfSB0byBGaW5hbGl6ZUJsb2NrPC9oND4KPHA+VGhlIHByaW9yIHBoYXNlcyBnaXZlcyB0aGUgYXBwbGljYXRpb24gbW9yZSBmbGV4aWJpbGl0eSBpbiB0aGVpciBleGVjdXRpb24gbW9kZWwgZm9yIGEgYmxvY2ssIGFuZCB0aGV5IG9ic29sZXRlIHRoZSBjdXJyZW50IG1ldGhvZHMgZm9yIGhvdyB0aGUgY29uc2Vuc3VzIGVuZ2luZSByZWxhdGVzIHRoZSBibG9jayBkYXRhIHRvIHRoZSBzdGF0ZSBtYWNoaW5lLiBUaHVzIHdlIHJlZmFjdG9yIHRoZSBleGlzdGluZyBtZXRob2RzIHRvIGJldHRlciByZWZsZWN0IHdoYXQgaXMgaGFwcGVuaW5nIGluIHRoZSBuZXcgQUJDSSBtb2RlbC48L3A+CjxwPlRoaXMgcmVuYW1lIGRvZXNuJ3Qgb24gaXRzIG93biBlbmFibGUgYW55dGhpbmcgbmV3LCBidXQgaW5zdGVhZCBpbXByb3ZlcyBuYW1pbmcgdG8gY2xhcmlmeSB0aGUgZXhwZWN0YXRpb25zIGZyb20gdGhlIGFwcGxpY2F0aW9uIGluIHRoaXMgbmV3IGNvbW11bmljYXRpb24gbW9kZWwuIFRoZSBleGlzdGluZyBBQkNJIG1ldGhvZHMgIDxjb2RlPkJlZ2luQmxvY2ssIFtEZWxpdmVyVHhdLCBFbmRCbG9jazwvY29kZT4gYXJlIHJlbmFtZWQgdG8gYSBzaW5nbGUgbWV0aG9kIGNhbGxlZCA8Y29kZT5GaW5hbGl6ZUJsb2NrPC9jb2RlPi48L3A+CjxoNCBpZD0ic3VtbWFyeSI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNzdW1tYXJ5Ij4jPC9hPiBTdW1tYXJ5PC9oND4KPHA+V2UgaW5jbHVkZSBhIG1vcmUgZGV0YWlsZWQgbGlzdCBvZiBmZWF0dXJlcyAvIHNjYWxpbmcgaW1wcm92ZW1lbnRzIHRoYXQgYXJlIGJsb2NrZWQsIGFuZCB3aGljaCBuZXcgcGhhc2VzIHJlc29sdmUgdGhlbSBhdCB0aGUgZW5kIG9mIHRoaXMgZG9jdW1lbnQuPC9wPgo8cD48aW1hZ2Ugc3JjPSJpbWFnZXMvYWJjaS5wbmciIHN0eWxlPSJmbG9hdDogbGVmdDsgd2lkdGg6IDQwJTsiIC8+IDxpbWFnZSBzcmM9ImltYWdlcy9hYmNpKysucG5nIiBzdHlsZT0iZmxvYXQ6IHJpZ2h0OyB3aWR0aDogNDAlOyIgLz4KT24gdGhlIHRvcCBpcyB0aGUgZXhpc3RpbmcgZGVmaW5pdGlvbiBvZiBBQkNJLCBhbmQgb24gdGhlIGJvdHRvbSBpcyB0aGUgcHJvcG9zZWQgQUJDSSsrLjwvcD4KPGgyIGlkPSJwcm9wb3NhbCI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiNwcm9wb3NhbCI+IzwvYT4gUHJvcG9zYWw8L2gyPgo8cD5CZWxvdyB3ZSBzdWdnZXN0IGFuIEFQSSB0byBhZGQgdGhlc2UgdGhyZWUgbmV3IHBoYXNlcy4KSW4gdGhpcyBkb2N1bWVudCwgc29tZXRpbWVzIHRoZSBmaW5hbCByb3VuZCBvZiB2b3RpbmcgaXMgcmVmZXJyZWQgdG8gYXMgcHJlY29tbWl0IGZvciBjbGFyaXR5IGluIGhvdyBpdCBhY3RzIGluIHRoZSBUZW5kZXJtaW50IGNhc2UuPC9wPgo8aDMgaWQ9InByZXBhcmUtcHJvcG9zYWwiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjcHJlcGFyZS1wcm9wb3NhbCI+IzwvYT4gUHJlcGFyZSBQcm9wb3NhbDwvaDM+CjxwPjxlbT5Ob3RlLCBBUElzIGluIHRoaXMgc2VjdGlvbiB3aWxsIGNoYW5nZSBhZnRlciBWb3RlIEV4dGVuc2lvbnMsIHdlIGxpc3QgdGhlIGFkanVzdGVkIEFQSXMgZnVydGhlciBpbiB0aGUgcHJvcG9zYWwuPC9lbT48L3A+CjxwPlRoZSBQcmVwYXJlIFByb3Bvc2FsIHBoYXNlIGFsbG93cyB0aGUgYmxvY2sgcHJvcG9zZXIgdG8gcGVyZm9ybSBhcHBsaWNhdGlvbi1kZXBlbmRlbnQgd29yayBpbiBhIGJsb2NrLCB0byBsb3dlciB0aGUgYW1vdW50IG9mIHdvcmsgdGhlIHJlc3Qgb2YgdGhlIG5ldHdvcmsgbXVzdCBkby4gVGhpcyBlbmFibGVzIGJhdGNoIG9wdGltaXphdGlvbnMgdG8gYSBibG9jaywgd2hpY2ggaGFzIGJlZW4gZW1waXJpY2FsbHkgZGVtb25zdHJhdGVkIHRvIGJlIGEga2V5IGNvbXBvbmVudCBmb3Igc2NhbGluZy4gVGhpcyBwaGFzZSBpbnRyb2R1Y2VzIHRoZSBmb2xsb3dpbmcgQUJDSSBtZXRob2Q8L3A+CgogICAgPHRtLWNvZGUtYmxvY2sgY2xhc3M9ImNvZGVibG9jayIgbGFuZ3VhZ2U9InJ1c3QiIGJhc2U2ND0iWm00Z1VISmxjR0Z5WlZCeWIzQnZjMkZzS0VKc2IyTnJLU0F0Sm1kME95QkNiRzlqYTBSaGRHRUsiPjwvdG0tY29kZS1ibG9jaz4KICAgIDxwPndoZXJlIDxjb2RlPkJsb2NrRGF0YTwvY29kZT4gaXMgYSB0eXBlIGFsaWFzIGZvciBob3dldmVyIGRhdGEgaXMgaW50ZXJuYWxseSBzdG9yZWQgd2l0aGluIHRoZSBjb25zZW5zdXMgZW5naW5lLiBJbiBUZW5kZXJtaW50IENvcmUgdG9kYXksIHRoaXMgaXMgPGNvZGU+W11UeDwvY29kZT4uPC9wPgo8cD5UaGUgYXBwbGljYXRpb24gbWF5IHJlYWQgdGhlIGVudGlyZSBibG9jayBwcm9wb3NhbCwgYW5kIG11dGF0ZSB0aGUgYmxvY2sgZGF0YSBmaWVsZHMuIE11dGF0ZWQgdHJhbnNhY3Rpb25zIHdpbGwgc3RpbGwgZ2V0IHJlbW92ZWQgZnJvbSB0aGUgbWVtcG9vbCBsYXRlciBvbiwgYXMgdGhlIG1lbXBvb2wgcmVjaGVja3MgYWxsIHRyYW5zYWN0aW9ucyBhZnRlciBhIGJsb2NrIGlzIGV4ZWN1dGVkLjwvcD4KPHA+VGhlIDxjb2RlPlByZXBhcmVQcm9wb3NhbDwvY29kZT4gQVBJIHdpbGwgYmUgbW9kaWZpZWQgaW4gdGhlIHZvdGUgZXh0ZW5zaW9ucyBzZWN0aW9uLCBmb3IgYWxsb3dpbmcgdGhlIGFwcGxpY2F0aW9uIHRvIG1vZGlmeSB0aGUgaGVhZGVyLjwvcD4KPGgzIGlkPSJwcm9jZXNzLXByb3Bvc2FsIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3Byb2Nlc3MtcHJvcG9zYWwiPiM8L2E+IFByb2Nlc3MgUHJvcG9zYWw8L2gzPgo8cD5UaGUgUHJvY2VzcyBQcm9wb3NhbCBwaGFzZSBzZW5kcyB0aGUgYmxvY2sgZGF0YSB0byB0aGUgc3RhdGUgbWFjaGluZSwgcHJpb3IgdG8gcnVubmluZyB0aGUgbGFzdCByb3VuZCBvZiB2b3RlcyBvbiB0aGUgc3RhdGUgbWFjaGluZS4gVGhpcyBlbmFibGVzIGZlYXR1cmVzIHN1Y2ggYXMgYWxsb3dpbmcgdmFsaWRhdG9ycyB0byByZWplY3QgYSBibG9jayBhY2NvcmRpbmcgdG8gd2hldGhlciBzdGF0ZSBtYWNoaW5lIGRlZW1zIGl0IHZhbGlkLCBhbmQgY2hhbmdpbmcgYmxvY2sgZXhlY3V0aW9uIHBpcGVsaW5lLjwvcD4KPHA+V2UgaW50cm9kdWNlIHRocmVlIG5ldyBtZXRob2RzLDwvcD4KCiAgICA8dG0tY29kZS1ibG9jayBjbGFzcz0iY29kZWJsb2NrIiBsYW5ndWFnZT0icnVzdCIgYmFzZTY0PSJabTRnVm1WeWFXWjVTR1ZoWkdWeUtHaGxZV1JsY2pvZ1NHVmhaR1Z5TENCcGMxWmhiR2xrWVhSdmNqb2dZbTl2YkNrZ0xTWm5kRHNnVW1WemNHOXVjMlZXWlhKcFpubElaV0ZrWlhJZ2V5NHVMbjBLWm00Z1VISnZZMlZ6YzFCeWIzQnZjMkZzS0dKc2IyTnJPaUJDYkc5amF5a2dMU1puZERzZ1VtVnpjRzl1YzJWUWNtOWpaWE56VUhKdmNHOXpZV3dnZXk0dUxuMEtabTRnVW1WMlpYSjBVSEp2Y0c5ellXd29hR1ZwWjJoME9pQjFjMmw2WlN3Z2NtOTFibVE2SUhWemFYcGxLU0I3TGk0dWZRbz0iPjwvdG0tY29kZS1ibG9jaz4KICAgIDxwPndoZXJlPC9wPgoKICAgIDx0bS1jb2RlLWJsb2NrIGNsYXNzPSJjb2RlYmxvY2siIGxhbmd1YWdlPSJydXN0IiBiYXNlNjQ9ImMzUnlkV04wSUZKbGMzQnZibk5sVm1WeWFXWjVTR1ZoWkdWeUlIc0tJQ0FnSUdGalkyVndkRjlvWldGa1pYSTZJR0p2YjJ3c0NpQWdJQ0JsZG1sa1pXNWpaVG9nVm1WakpteDBPMFYyYVdSbGJtTmxKbWQwT3dwOUNuTjBjblZqZENCU1pYTndiMjV6WlZCeWIyTmxjM05RY205d2IzTmhiQ0I3Q2lBZ0lDQmhZMk5sY0hSZllteHZZMnM2SUdKdmIyd3NDaUFnSUNCbGRtbGtaVzVqWlRvZ1ZtVmpKbXgwTzBWMmFXUmxibU5sSm1kME93cDlDZz09Ij48L3RtLWNvZGUtYmxvY2s+CiAgICA8cD5VcG9uIHJlY2VpdmluZyBhIGJsb2NrIGhlYWRlciwgZXZlcnkgdmFsaWRhdG9yIHJ1bnMgPGNvZGU+VmVyaWZ5SGVhZGVyKGhlYWRlciwgaXNWYWxpZGF0b3IpPC9jb2RlPi4gVGhlIHJlYXNvbiBmb3Igd2h5IDxjb2RlPlZlcmlmeUhlYWRlcjwvY29kZT4gaXMgc3BsaXQgZnJvbSA8Y29kZT5Qcm9jZXNzUHJvcG9zYWw8L2NvZGU+IGlzIGR1ZSB0byB0aGUgbGF0ZXIgc2VjdGlvbnMgZm9yIFByZXByb2Nlc3MgUHJvcG9zYWwgYW5kIFZvdGUgRXh0ZW5zaW9ucywgd2hlcmUgdGhlcmUgbWF5IGJlIGFwcGxpY2F0aW9uIGRlcGVuZGVudCBkYXRhIGluIHRoZSBoZWFkZXIgdGhhdCBtdXN0IGJlIHZlcmlmaWVkIGJlZm9yZSBhY2NlcHRpbmcgdGhlIGhlYWRlci4KSWYgdGhlIHJldHVybmVkIDxjb2RlPlJlc3BvbnNlVmVyaWZ5SGVhZGVyLmFjY2VwdF9oZWFkZXI8L2NvZGU+IGlzIGZhbHNlLCB0aGVuIHRoZSB2YWxpZGF0b3IgbXVzdCBwcmVjb21taXQgbmlsIG9uIHRoaXMgYmxvY2ssIGFuZCByZWplY3QgYWxsIG90aGVyIHByZWNvbW1pdHMgb24gdGhpcyBibG9jay4gPGNvZGU+UmVzcG9uc2VWZXJpZnlIZWFkZXIuZXZpZGVuY2U8L2NvZGU+IGlzIGFwcGVuZGVkIHRvIHRoZSB2YWxpZGF0b3JzIGxvY2FsIDxjb2RlPkV2aWRlbmNlUG9vbDwvY29kZT4uPC9wPgo8cD5VcG9uIHJlY2VpdmluZyBhbiBlbnRpcmUgYmxvY2sgcHJvcG9zYWwgKGluIHRoZSBjdXJyZW50IGltcGxlbWVudGF0aW9uLCBhbGwgJnF1b3Q7YmxvY2sgcGFydHMmcXVvdDspLCBldmVyeSB2YWxpZGF0b3IgcnVucyA8Y29kZT5Qcm9jZXNzUHJvcG9zYWwoYmxvY2spPC9jb2RlPi4gSWYgdGhlIHJldHVybmVkIDxjb2RlPlJlc3BvbnNlUHJvY2Vzc1Byb3Bvc2FsLmFjY2VwdF9ibG9jazwvY29kZT4gaXMgZmFsc2UsIHRoZW4gdGhlIHZhbGlkYXRvciBtdXN0IHByZWNvbW1pdCBuaWwgb24gdGhpcyBibG9jaywgYW5kIHJlamVjdCBhbGwgb3RoZXIgcHJlY29tbWl0cyBvbiB0aGlzIGJsb2NrLiA8Y29kZT5SZXNwb25zZVByb2Nlc3NQcm9wb3NhbC5ldmlkZW5jZTwvY29kZT4gaXMgYXBwZW5kZWQgdG8gdGhlIHZhbGlkYXRvcnMgbG9jYWwgPGNvZGU+RXZpZGVuY2VQb29sPC9jb2RlPi48L3A+CjxwPk9uY2UgYSB2YWxpZGF0b3Iga25vd3MgdGhhdCBjb25zZW5zdXMgaGFzIGZhaWxlZCB0byBiZSBhY2hpZXZlZCBmb3IgYSBnaXZlbiBibG9jaywgaXQgbXVzdCBydW4gPGNvZGU+UmV2ZXJ0UHJvcG9zYWwoYmxvY2suaGVpZ2h0LCBibG9jay5yb3VuZCk8L2NvZGU+LCBpbiBvcmRlciB0byBzaWduYWwgdG8gdGhlIGFwcGxpY2F0aW9uIHRvIHJldmVydCBhbnkgcG90ZW50aWFsbHkgbXV0YXRpdmUgc3RhdGUgY2hhbmdlcyBpdCBtYXkgaGF2ZSBtYWRlLiBJbiBUZW5kZXJtaW50LCB0aGlzIG9jY3VycyB3aGVuIGluY3JlbWVudGluZyByb3VuZHMuPC9wPgo8cD48c3Ryb25nPlJGQzwvc3Ryb25nPjogSG93IGRvIHdlIGhhbmRsZSB0aGUgc2NlbmFyaW8gd2hlcmUgaG9uZXN0IG5vZGUgQSBmaW5hbGl6ZWQgb24gcm91bmQgeCwgYW5kIGhvbmVzdCBub2RlIEIgZmluYWxpemVkIG9uIHJvdW5kIHggKyAxPyAoZS5nLiB3aGVuIDJmIHByZWNvbW1pdHMgYXJlIHB1YmxpY2x5IGtub3duLCBhbmQgYSB2YWxpZGF0b3IgcHJlY29tbWl0cyB0aGVtc2VsZiBidXQgZG9lc24ndCBicm9hZGNhc3QsIGJ1dCB0aGV5IGluY3JlbWVudCByb3VuZHMpIElzIHRoaXMgYSByZWFsIGNvbmNlcm4/IFRoZSBzdGF0ZSByb290IGRlcml2ZWQgY291bGQgY2hhbmdlIGlmIGV2ZXJ5b25lIGZpbmFsaXplcyBvbiByb3VuZCB4KzEsIG5vdCByb3VuZCB4LCBhcyB0aGUgc3RhdGUgbWFjaGluZSBjYW4gZGVwZW5kIG5vbi11bmlmb3JtbHkgb24gdGltZXN0YW1wLjwvcD4KPHA+VGhlIGFwcGxpY2F0aW9uIGlzIGV4cGVjdGVkIHRvIGNhY2hlIHRoZSBibG9jayBkYXRhIGZvciBsYXRlciBleGVjdXRpb24uPC9wPgo8cD5UaGUgPGNvZGU+aXNWYWxpZGF0b3I8L2NvZGU+IGZsYWcgaXMgc2V0IGFjY29yZGluZyB0byB3aGV0aGVyIHRoZSBjdXJyZW50IG5vZGUgaXMgYSB2YWxpZGF0b3Igb3IgYSBmdWxsIG5vZGUuIFRoaXMgaXMgaW50ZW5kZWQgdG8gYWxsb3cgZm9yIGJlZ2lubmluZyB2YWxpZGF0b3ItZGVwZW5kZW50IGNvbXB1dGF0aW9uIHRoYXQgd2lsbCBiZSBpbmNsdWRlZCBsYXRlciBpbiB2b3RlIGV4dGVuc2lvbnMuIChBbiBleGFtcGxlIG9mIHRoaXMgaXMgdGhyZXNob2xkIGRlY3J5cHRpb25zIG9mIGNpcGhlcnRleHRzLik8L3A+CjxoMyBpZD0iZGVsaXZlcnR4LXJlbmFtZS10by1maW5hbGl6ZWJsb2NrIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI2RlbGl2ZXJ0eC1yZW5hbWUtdG8tZmluYWxpemVibG9jayI+IzwvYT4gRGVsaXZlclR4IHJlbmFtZSB0byBGaW5hbGl6ZUJsb2NrPC9oMz4KPHA+QWZ0ZXIgaW1wbGVtZW50aW5nIDxjb2RlPlByb2Nlc3NQcm9wb3NhbDwvY29kZT4sIHR4cyBubyBsb25nZXIgbmVlZCB0byBiZSBkZWxpdmVyZWQgZHVyaW5nIHRoZSBibG9jayBleGVjdXRpb24gcGhhc2UuIEluc3RlYWQsIHRoZXkgYXJlIGFscmVhZHkgaW4gdGhlIHN0YXRlIG1hY2hpbmUuIFRodXMgPGNvZGU+QmVnaW5CbG9jaywgRGVsaXZlclR4LCBFbmRCbG9jazwvY29kZT4gY2FuIGFsbCBiZSByZXBsYWNlZCB3aXRoIGEgc2luZ2xlIEFCQ0kgbWV0aG9kIGZvciA8Y29kZT5FeGVjdXRlQmxvY2s8L2NvZGU+LiBJbnRlcm5hbGx5IHRoZSBhcHBsaWNhdGlvbiBtYXkgc3RpbGwgc3RydWN0dXJlIGl0cyBtZXRob2QgZm9yIGV4ZWN1dGluZyB0aGUgYmxvY2sgYXMgPGNvZGU+QmVnaW5CbG9jaywgRGVsaXZlclR4LCBFbmRCbG9jazwvY29kZT4uIEhvd2V2ZXIsIGl0IGlzIG92ZXJseSByZXN0cmljdGl2ZSB0byBlbmZvcmNlIHRoYXQgdGhlIGJsb2NrIGJlIGV4ZWN1dGVkIGFmdGVyIGl0IGlzIGZpbmFsaXplZC4gVGhlcmUgYXJlIG11bHRpcGxlIG90aGVyLCB2ZXJ5IHJlYXNvbmFibGUgcGlwZWxpbmVkIGV4ZWN1dGlvbiBtb2RlbHMgb25lIGNhbiBnbyBmb3IuIFNvIGluc3RlYWQgd2Ugc3VnZ2VzdCBjYWxsaW5nIHRoaXMgc3VjY2Vzc2lvbiBvZiBtZXRob2RzIDxjb2RlPkZpbmFsaXplQmxvY2s8L2NvZGU+LiBXZSBwcm9wb3NlIHRoZSBmb2xsb3dpbmcgQVBJPC9wPgo8cD5SZXBsYWNlIHRoZSA8Y29kZT5CZWdpbkJsb2NrLCBEZWxpdmVyVHgsIEVuZEJsb2NrPC9jb2RlPiBBQkNJIG1ldGhvZHMgd2l0aCB0aGUgZm9sbG93aW5nIG1ldGhvZDwvcD4KCiAgICA8dG0tY29kZS1ibG9jayBjbGFzcz0iY29kZWJsb2NrIiBsYW5ndWFnZT0icnVzdCIgYmFzZTY0PSJabTRnUm1sdVlXeHBlbVZDYkc5amF5Z3BJQzBtWjNRN0lGSmxjM0J2Ym5ObFJtbHVZV3hwZW1WQ2JHOWphd289Ij48L3RtLWNvZGUtYmxvY2s+CiAgICA8cD53aGVyZSA8Y29kZT5SZXNwb25zZUZpbmFsaXplQmxvY2s8L2NvZGU+IGhhcyB0aGUgZm9sbG93aW5nIEFQSSwgaW4gdGVybXMgb2Ygd2hhdCBhbHJlYWR5IGV4aXN0czwvcD4KCiAgICA8dG0tY29kZS1ibG9jayBjbGFzcz0iY29kZWJsb2NrIiBsYW5ndWFnZT0icnVzdCIgYmFzZTY0PSJjM1J5ZFdOMElGSmxjM0J2Ym5ObFJtbHVZV3hwZW1WQ2JHOWpheUI3Q2lBZ0lDQjFjR1JoZEdWek9pQlNaWE53YjI1elpVVnVaRUpzYjJOckxBb2dJQ0FnZEhoZmNtVnpkV3gwY3pvZ1ZtVmpKbXgwTzFKbGMzQnZibk5sUkdWc2FYWmxjbFI0Sm1kME93cDlDZz09Ij48L3RtLWNvZGUtYmxvY2s+CiAgICA8cD48Y29kZT5SZXNwb25zZUVuZEJsb2NrPC9jb2RlPiBzaG91bGQgdGhlbiBiZSByZW5hbWVkIHRvIDxjb2RlPkNvbnNlbnN1c1VwZGF0ZXM8L2NvZGU+IGFuZCA8Y29kZT5SZXNwb25zZURlbGl2ZXJUeDwvY29kZT4gc2hvdWxkIGJlIHJlbmFtZWQgdG8gPGNvZGU+UmVzcG9uc2VUeDwvY29kZT4uPC9wPgo8aDMgaWQ9InZvdGUtZXh0ZW5zaW9ucyI+PGEgY2xhc3M9ImhlYWRlci1hbmNob3IiIGhyZWY9IiN2b3RlLWV4dGVuc2lvbnMiPiM8L2E+IFZvdGUgRXh0ZW5zaW9uczwvaDM+CjxwPlRoZSBWb3RlIEV4dGVuc2lvbnMgcGhhc2UgYWxsb3cgYXBwbGljYXRpb25zIHRvIGZvcmNlIHRoZWlyIHZhbGlkYXRvcnMgdG8gZG8gbW9yZSB0aGFuIGp1c3QgdmFsaWRhdGUgd2l0aGluIGNvbnNlbnN1cy4gVGhpcyBpcyBkb25lIGJ5IGFsbG93aW5nIHRoZSBhcHBsaWNhdGlvbiB0byBhZGQgbW9yZSBkYXRhIHRvIHRoZWlyIHZvdGVzLCBpbiB0aGUgZmluYWwgcm91bmQgb2Ygdm90aW5nLiAoTmFtZWx5IHRoZSBwcmVjb21taXQpClRoaXMgYWRkaXRpb25hbCBhcHBsaWNhdGlvbiBkYXRhIHdpbGwgdGhlbiBhcHBlYXIgaW4gdGhlIGJsb2NrIGhlYWRlci48L3A+CjxwPkZpcnN0IHdlIGRpc2N1c3MgdGhlIEFQSSBjaGFuZ2VzIHRvIHRoZSB2b3RlIHN0cnVjdCBkaXJlY3RseTwvcD4KCiAgICA8dG0tY29kZS1ibG9jayBjbGFzcz0iY29kZWJsb2NrIiBsYW5ndWFnZT0icnVzdCIgYmFzZTY0PSJabTRnUlhoMFpXNWtWbTkwWlNob1pXbG5hSFE2SUhVMk5Dd2djbTkxYm1RNklIVTJOQ2tnTFNabmREc2dLRlZ1YzJsbmJtVmtRWEJ3Vm05MFpVUmhkR0VzSUZObGJHWkJkWFJvWlc1MGFXTmhkR2x1WjBGd2NFUmhkR0VwQ21adUlGWmxjbWxtZVZadmRHVkZlSFJsYm5OcGIyNG9jMmxuYm1Wa1gyRndjRjkyYjNSbFgyUmhkR0U2SUZabFl5WnNkRHQxT0NabmREc3NJSE5sYkdaZllYVjBhR1Z1ZEdsallYUnBibWRmWVhCd1gzWnZkR1ZmWkdGMFlUb2dWbVZqSm14ME8zVTRKbWQwT3lrZ0xTWm5kRHNnWW05dmJBbz0iPjwvdG0tY29kZS1ibG9jaz4KICAgIDxwPlRoZXJlIGFyZSB0d28gdHlwZXMgb2YgZGF0YSB0aGF0IHRoZSBhcHBsaWNhdGlvbiBjYW4gZW5mb3JjZSB2YWxpZGF0b3JzIHRvIGluY2x1ZGUgd2l0aCB0aGVpciB2b3RlLgpUaGVyZSBpcyBkYXRhIHRoYXQgdGhlIGFwcCBuZWVkcyB0aGUgdmFsaWRhdG9yIHRvIHNpZ24gb3ZlciBpbiB0aGVpciB2b3RlLCBhbmQgdGhlcmUgY2FuIGJlIHNlbGYtYXV0aGVudGljYXRpbmcgdm90ZSBkYXRhLiBTZWxmLWF1dGhlbnRpY2F0aW5nIGhlcmUgbWVhbnMgdGhhdCB0aGUgYXBwbGljYXRpb24gdXBvbiBzZWVpbmcgdGhlc2UgYnl0ZXMsIGtub3dzIGl0cyB2YWxpZCwgY2FtZSBmcm9tIHRoZSB2YWxpZGF0b3IgYW5kIGlzIG5vbi1tYWxsZWFibGUuIFdlIGdpdmUgYW4gZXhhbXBsZSBvZiBlYWNoIHR5cGUgb2Ygdm90ZSBkYXRhIGhlcmUsIHRvIG1ha2UgdGhlaXIgcm9sZXMgY2xlYXJlci48L3A+Cjx1bD4KPGxpPlVuc2lnbmVkIGFwcCB2b3RlIGRhdGE6IEEgdXNlIGNhc2Ugb2YgdGhpcyBpcyBpZiB5b3Ugd2FudGVkIHZhbGlkYXRvciBiYWNrZWQgb3JhY2xlcywgd2hlcmUgZWFjaCB2YWxpZGF0b3IgaW5kZXBlbmRlbnRseSBzaWducyBzb21lIG9yYWNsZSBkYXRhIGluIHRoZWlyIHZvdGUsIGFuZCB0aGUgbWVkaWFuIG9mIHRoZXNlIHZhbHVlcyBpcyB1c2VkIG9uIGNoYWluLiBUaHVzIHdlIGxldmVyYWdlIGNvbnNlbnN1cycgc2lnbmluZyBwcm9jZXNzIGZvciBjb252ZW5pZW5jZSwgYW5kIHVzZSB0aGF0IHNhbWUga2V5IHRvIHNpZ24gdGhlIG9yYWNsZSBkYXRhLjwvbGk+CjxsaT5TZWxmLWF1dGhlbnRpY2F0aW5nIHZvdGUgZGF0YTogQSB1c2UgY2FzZSBvZiB0aGlzIGlzIGluIHRocmVzaG9sZCByYW5kb20gYmVhY29ucy4gRXZlcnkgdmFsaWRhdG9yIHByb2R1Y2VzIGEgdGhyZXNob2xkIGJlYWNvbiBzaGFyZS4gVGhpcyB0aHJlc2hvbGQgYmVhY29uIHNoYXJlIGNhbiBiZSB2ZXJpZmllZCBieSBhbnkgbm9kZSBpbiB0aGUgbmV0d29yaywgZ2l2ZW4gdGhlIHNoYXJlIGFuZCB0aGUgdmFsaWRhdG9ycyBwdWJsaWMga2V5ICh3aGljaCBpcyBub3QgdGhlIHNhbWUgYXMgaXRzIGNvbnNlbnN1cyBwdWJsaWMga2V5KS4gSG93ZXZlciwgdGhpcyBkZWNyeXB0aW9uIHNoYXJlIHdpbGwgbm90IG1ha2UgaXQgaW50byB0aGUgc3Vic2VxdWVudCBibG9jaydzIGhlYWRlci4gVGhleSB3aWxsIGJlIGFnZ3JlZ2F0ZWQgYnkgdGhlIHN1YnNlcXVlbnQgYmxvY2sgcHJvcG9zZXIgdG8gZ2V0IGEgc2luZ2xlIHJhbmRvbSBiZWFjb24gdmFsdWUgdGhhdCB3aWxsIGFwcGVhciBpbiB0aGUgc3Vic2VxdWVudCBibG9jaydzIGhlYWRlci4gRXZlcnlvbmUgY2FuIHRoZW4gdmVyaWZ5IHRoYXQgdGhpcyBhZ2dyZWdhdGVkIHZhbHVlIGNhbWUgZnJvbSB0aGUgcmVxdWlzaXRlIHRocmVzaG9sZCBvZiB0aGUgdmFsaWRhdG9yIHNldCwgd2l0aG91dCBpbmNyZWFzaW5nIHRoZSBiYW5kd2lkdGggZm9yIGZ1bGwgbm9kZXMgb3IgbGlnaHQgY2xpZW50cy4gVG8gYWNoaWV2ZSB0aGlzIGdvYWwsIHRoZSBzZWxmLWF1dGhlbnRpY2F0aW5nIHZvdGUgZGF0YSBjYW5ub3QgYmUgc2lnbmVkIG92ZXIgYnkgdGhlIGNvbnNlbnN1cyBrZXkgYWxvbmcgd2l0aCB0aGUgcmVzdCBvZiB0aGUgdm90ZSwgYXMgdGhhdCB3b3VsZCByZXF1aXJlIGFsbCBmdWxsIG5vZGVzICZhbXA7IGxpZ2h0IGNsaWVudHMgdG8ga25vdyB0aGlzIGRhdGEgaW4gb3JkZXIgdG8gdmVyaWZ5IHRoZSB2b3RlLjwvbGk+CjwvdWw+CjxwPlRoZSA8Y29kZT5DYW5vbmljYWxWb3RlPC9jb2RlPiBzdHJ1Y3Qgd2lsbCBhY29tbW9kYXRlIHRoZSA8Y29kZT5VbnNpZ25lZEFwcFZvdGVEYXRhPC9jb2RlPiBmaWVsZCBieSBhZGRpbmcgYW5vdGhlciBzdHJpbmcgdG8gaXRzIGVuY29kaW5nLCBhZnRlciB0aGUgPGNvZGU+Y2hhaW4taWQ8L2NvZGU+LiBUaGlzIHNob3VsZCBub3QgaW50ZXJmZXJlIHdpdGggZXhpc3RpbmcgaGFyZHdhcmUgc2lnbmluZyBpbnRlZ3JhdGlvbnMsIGFzIGl0IGRvZXMgbm90IGFmZmVjdCB0aGUgY29uc3RhbnQgb2Zmc2V0IGZvciB0aGUgPGNvZGU+aGVpZ2h0PC9jb2RlPiBhbmQgPGNvZGU+cm91bmQ8L2NvZGU+LCBhbmQgdGhlIHZvdGUgc2l6ZSBkb2VzIG5vdCBoYXZlIGFuIGV4cGxpY2l0IHVwcGVyIGJvdW5kLiAoU28gYWRkaW5nIHRoaXMgdW5zaWduZWQgYXBwIHZvdGUgZGF0YSBmaWVsZCBpcyBlcXVpdmFsZW50IGZyb20gdGhlIEhTTSdzIHBlcnNwZWN0aXZlIGFzIGhhdmluZyBhIHN1cGVybG9uZyBjaGFpbi1JRCk8L3A+CjxwPjxzdHJvbmc+UkZDPC9zdHJvbmc+OiBQbGVhc2UgY29tbWVudCBpZiB5b3UgdGhpbmsgaXQgd2lsbCBiZSBmaW5lIHRvIGhhdmUgZWxvbmdhdGUgdGhlIG1lc3NhZ2UgdGhlIEhTTSBzaWducywgb3IgaWYgd2UgbmVlZCB0byBleHBsb3JlIHByZS1oYXNoaW5nIHRoZSBhcHAgdm90ZSBkYXRhLjwvcD4KPHA+VGhlIGZsb3cgb2YgdGhlc2UgbWV0aG9kcyBpcyB0aGF0IHdoZW4gYSB2YWxpZGF0b3IgaGFzIHRvIHByZWNvbW1pdCwgVGVuZGVybWludCB3aWxsIGZpcnN0IHByb2R1Y2UgYSBwcmVjb21taXQgY2Fub25pY2FsIHZvdGUgd2l0aG91dCB0aGUgYXBwbGljYXRpb24gdm90ZSBkYXRhLiBJdCB3aWxsIHRoZW4gcGFzcyBpdCB0byB0aGUgYXBwbGljYXRpb24sIHdoaWNoIHdpbGwgcmV0dXJuIHVuc2lnbmVkIGFwcGxpY2F0aW9uIHZvdGUgZGF0YSwgYW5kIHNlbGYgYXV0aGVudGljYXRpbmcgYXBwbGljYXRpb24gdm90ZSBkYXRhLiBJdCB3aWxsIGJ1bmRsZSB0aGUgPGNvZGU+dW5zaWduZWRfYXBwbGljYXRpb25fdm90ZV9kYXRhPC9jb2RlPiBpbnRvIHRoZSBjYW5vbmljYWwgdm90ZSwgYW5kIHBhc3MgaXQgdG8gdGhlIEhTTSB0byBzaWduLiBGaW5hbGx5IGl0IHdpbGwgcGFja2FnZSB0aGUgc2VsZi1hdXRoZW50aWNhdGluZyBhcHAgdm90ZSBkYXRhLCBhbmQgdGhlIDxjb2RlPnNpZ25lZF92b3RlX2RhdGE8L2NvZGU+IHRvZ2V0aGVyLCBpbnRvIG9uZSBmaW5hbCBWb3RlIHN0cnVjdCB0byBiZSBwYXNzZWQgYXJvdW5kIHRoZSBuZXR3b3JrLjwvcD4KPGg0IGlkPSJjaGFuZ2VzLXRvLXByZXBhcmUtcHJvcG9zYWwtcGhhc2UiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjY2hhbmdlcy10by1wcmVwYXJlLXByb3Bvc2FsLXBoYXNlIj4jPC9hPiBDaGFuZ2VzIHRvIFByZXBhcmUgUHJvcG9zYWwgUGhhc2U8L2g0Pgo8cD5UaGVyZSBhcmUgbWFueSB1c2UgY2FzZXMgd2hlcmUgdGhlIGFkZGl0aW9uYWwgZGF0YSBmcm9tIHZvdGUgZXh0ZW5zaW9ucyBjYW4gYmUgYmF0Y2ggb3B0aW1pemVkLgpUaGlzIGlzIG1haW5seSBvZiBpbnRlcmVzdCB3aGVuIHRoZSB2b3RlcyBpbmNsdWRlIHNlbGYtYXV0aGVudGljYXRpbmcgYXBwIHZvdGUgZGF0YSB0aGF0IGJlIGJhdGNoZWQgdG9nZXRoZXIsIG9yIHRoZSB1bnNpZ25lZCBhcHAgdm90ZSBkYXRhIGlzIHRoZSBzYW1lIGFjcm9zcyBhbGwgdm90ZXMuClRvIGFsbG93IGZvciB0aGlzLCB3ZSBjaGFuZ2UgdGhlIFByZXBhcmVQcm9wb3NhbCBBUEkgdG8gdGhlIGZvbGxvd2luZzwvcD4KCiAgICA8dG0tY29kZS1ibG9jayBjbGFzcz0iY29kZWJsb2NrIiBsYW5ndWFnZT0icnVzdCIgYmFzZTY0PSJabTRnVUhKbGNHRnlaVkJ5YjNCdmMyRnNLRUpzYjJOckxDQlZibUpoZEdOb1pXUklaV0ZrWlhJcElDMG1aM1E3SUNoQ2JHOWphMFJoZEdFc0lFaGxZV1JsY2lrSyI+PC90bS1jb2RlLWJsb2NrPgogICAgPHA+d2hlcmUgPGNvZGU+VW5iYXRjaGVkSGVhZGVyPC9jb2RlPiBlc3NlbnRpYWxseSBjb250YWlucyBhICZxdW90O1Jhd0NvbW1pdCZxdW90OywgdGhlIDxjb2RlPkhlYWRlcjwvY29kZT4gY29udGFpbnMgYSBiYXRjaC1vcHRpbWl6ZWQgPGNvZGU+Y29tbWl0PC9jb2RlPiBhbmQgYW4gYWRkaXRpb25hbCAmcXVvdDtBcHBsaWNhdGlvbiBEYXRhJnF1b3Q7IGZpZWxkIGluIGl0cyByb290LiBUaGlzIHdpbGwgaW52b2x2ZSBhIG51bWJlciBvZiBjaGFuZ2VzIHRvIGNvcmUgZGF0YSBzdHJ1Y3R1cmVzLCB3aGljaCB3aWxsIGJlIGdvbmUgb3ZlciBpbiB0aGUgQURSLgpUaGUgPGNvZGU+VW5iYXRjaGVkPC9jb2RlPiBoZWFkZXIgYW5kIDxjb2RlPnJhd2NvbW1pdDwvY29kZT4gd2lsbCBuZXZlciBiZSBicm9hZGNhc3RlZCwgdGhleSB3aWxsIGJlIGNvbXBsZXRlbHkgaW50ZXJuYWwgdG8gY29uc2Vuc3VzLjwvcD4KPGg0IGlkPSJpbnRlci1wcm9jZXNzLWNvbW11bmljYXRpb24taXBjLWVmZmVjdHMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjaW50ZXItcHJvY2Vzcy1jb21tdW5pY2F0aW9uLWlwYy1lZmZlY3RzIj4jPC9hPiBJbnRlci1wcm9jZXNzIGNvbW11bmljYXRpb24gKElQQykgZWZmZWN0czwvaDQ+CjxwPkZvciBicmV2aXR5IGluIGV4cG9zaXRpb24gYWJvdmUsIHdlIGRpZCBub3QgZGlzY3VzcyB0aGUgdHJhZGUtb2ZmcyB0aGF0IG1heSBvY2N1ciBpbiBpbnRlcnByb2Nlc3MgY29tbXVuaWNhdGlvbiBkZWxheXMgdGhhdCB0aGVzZSBjaGFuZ3Mgd2lsbCBpbnRyb2R1Y2UuClRoZXNlIG5ldyBBQkNJIG1ldGhvZHMgYWRkIG1vcmUgbG9jYXRpb25zIHdoZXJlIHRoZSBhcHBsaWNhdGlvbiBtdXN0IGNvbW11bmljYXRlIHdpdGggdGhlIGNvbnNlbnN1cyBlbmdpbmUuCkluIG1vc3QgY29uZmlndXJhdGlvbnMsIHdlIGV4cGVjdCB0aGF0IHRoZSBjb25zZW5zdXMgZW5naW5lIGFuZCB0aGUgYXBwbGljYXRpb24gd2lsbCBiZSBlaXRoZXIgc3RhdGljYWxseSBvciBkeW5hbWljYWxseSBsaW5rZWQsIHNvIGFsbCBjb21tdW5pY2F0aW9uIGlzIGEgbWF0dGVyIG9mIGF0IG1vc3QgYWRqdXN0aW5nIHRoZSBtZW1vcnkgbW9kZWwgdGhlIGRhdGEgaXMgbGF5ZWQgb3V0IHdpdGhpbi4KVGhpcyBtZW1vcnkgbW9kZWwgY29udmVyc2lvbiBpcyB0eXBpY2FsbHkgY29uc2lkZXJlZCBuZWdsaWdpYmxlLCBhcyBkZWxheSBoZXJlIGlzIG1lYXN1cmVkIG9uIHRoZSBvcmRlciBvZiBtaWNyb3NlY29uZHMgYXQgbW9zdCwgd2hlcmVhcyB3ZSBmYWNlIG1pbGlzZWNvbmQgZGVsYXlzIGR1ZSB0byBjcnlwdG9ncmFwaHkgYW5kIG5ldHdvcmsgb3ZlcmhlYWRzLgpUaHVzIHdlIGlnbm9yZSB0aGUgb3ZlcmhlYWQgaW4gdGhlIGNhc2Ugb2YgbGlua2VkIGxpYnJhcmllcy48L3A+CjxwPkluIHRoZSBjYXNlIHdoZXJlIHRoZSBjb25zZW5zdXMgZW5naW5lIGFuZCB0aGUgYXBwbGljYXRpb24gYXJlIHJhbiBpbiBzZXBhcmF0ZSBwcm9jZXNzZXMsIGFuZCB0aHVzIGNvbW11bmljYXRlIHdpdGggYSBmb3JtIG9mIEludGVyLXByb2Nlc3MgY29tbXVuaWNhdGlvbiAoSVBDKSwgdGhlIGRlbGF5cyBjYW4gZWFzaWx5IGJlY29tZSBvbiB0aGUgb3JkZXIgb2YgbWlsaXNlY29uZHMgYmFzZWQgdXBvbiB0aGUgZGF0YSBzZW50LiBUaHVzIGl0cyBpbXBvcnRhbnQgdG8gY29uc2lkZXIgd2hhdHMgaGFwcGVuaW5nIGhlcmUuCldlIGdvIHRocm91Z2ggdGhpcyBwaGFzZSBieSBwaGFzZS48L3A+CjxoNSBpZD0icHJlcGFyZS1wcm9wb3NhbC1pcGMtb3ZlcmhlYWQiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjcHJlcGFyZS1wcm9wb3NhbC1pcGMtb3ZlcmhlYWQiPiM8L2E+IFByZXBhcmUgcHJvcG9zYWwgSVBDIG92ZXJoZWFkPC9oNT4KPHA+VGhpcyByZXF1aXJlcyBhIHJvdW5kIG9mIElQQyBjb21tdW5pY2F0aW9uLCB3aGVyZSBib3RoIGRpcmVjdGlvbnMgYXJlIHF1aXRlIGxhcmdlLiBOYW1lbHkgdGhlIHByb3Bvc2VyIGNvbW11bmljYXRpbmcgYW4gZW50aXJlIGJsb2NrIHRvIHRoZSBhcHBsaWNhdGlvbi4KSG93ZXZlciwgdGhpcyBjYW4gYmUgbWl0aWdhdGVkIGJ5IHNwbGl0dGluZyB1cCA8Y29kZT5QcmVwYXJlUHJvcG9zYWw8L2NvZGU+IGludG8gdHdvIGRpc3RpbmN0LCBhc3luYyBtZXRob2RzLCBvbmUgZm9yIHRoZSBibG9jayBJUEMgY29tbXVuaWNhdGlvbiwgYW5kIG9uZSBmb3IgdGhlIEhlYWRlciBJUEMgY29tbXVuaWNhdGlvbi48L3A+CjxwPlRoZW4gZm9yIGNoYWlucyB3aGVyZSB0aGUgYmxvY2sgZGF0YSBkb2VzIG5vdCBkZXBlbmQgb24gdGhlIGhlYWRlciBkYXRhLCB0aGUgYmxvY2sgZGF0YSBJUEMgY29tbXVuaWNhdGlvbiBjYW4gcHJvY2VlZCBpbiBwYXJhbGxlbCB0byB0aGUgcHJpb3IgYmxvY2sncyB2b3RpbmcgcGhhc2UuIChBcyBhIG5vZGUgY2FuIGtub3cgd2hldGhlciBvciBub3QgaXRzIHRoZSBsZWFkZXIgaW4gdGhlIG5leHQgcm91bmQpPC9wPgo8cD5GdXJ0aGVybW9yZSwgdGhpcyBJUEMgY29tbXVuaWNhdGlvbiBpcyBleHBlY3RlZCB0byBiZSBxdWl0ZSBsb3cgcmVsYXRpdmUgdG8gdGhlIGFtb3VudCBvZiBwMnAgZ29zc2lwIHRpbWUgaXQgdGFrZXMgdG8gc2VuZCB0aGUgYmxvY2sgZGF0YSBhcm91bmQgdGhlIG5ldHdvcmssIHNvIHRoaXMgaXMgcGVyaGFwcyBhIHByZW1hdHVyZSBjb25jZXJuIHVudGlsIG1vcmUgc29waGlzdGljYXRlZCBibG9jayBnb3NzaXAgcHJvdG9jb2xzIGFyZSBpbXBsZW1lbnRlZC48L3A+CjxoNSBpZD0icHJvY2Vzcy1wcm9wb3NhbC1pcGMtb3ZlcmhlYWQiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjcHJvY2Vzcy1wcm9wb3NhbC1pcGMtb3ZlcmhlYWQiPiM8L2E+IFByb2Nlc3MgUHJvcG9zYWwgSVBDIG92ZXJoZWFkPC9oNT4KPHA+VGhpcyBwaGFzZSBjaGFuZ2VzIHRoZSBhbW91bnQgb2YgdGltZSBhdmFpbGFibGUgZm9yIHRoZSBjb25zZW5zdXMgZW5naW5lIHRvIGRlbGl2ZXIgYSBibG9jaydzIGRhdGEgdG8gdGhlIHN0YXRlIG1hY2hpbmUuCkJlZm9yZSwgdGhlIGJsb2NrIGRhdGEgZm9yIGJsb2NrIE4gd291bGQgYmUgZGVsaXZlcmVkIHRvIHRoZSBzdGF0ZSBtYWNoaW5lIHVwb24gcmVjZWl2aW5nIGEgY29tbWl0IGZvciBibG9jayBOIGFuZCB0aGVuIGJlIGV4ZWN1dGVkLgpUaGUgc3RhdGUgbWFjaGluZSB3b3VsZCByZXNwb25kIGFmdGVyIGV4ZWN1dGluZyB0aGUgdHhzIGFuZCBiZWZvcmUgcHJldm90aW5nLgpUaGUgdGltZSBmb3IgYmxvY2sgZGVsaXZlcnkgZnJvbSB0aGUgY29uc2Vuc3VzIGVuZ2luZSB0byB0aGUgc3RhdGUgbWFjaGluZSBhZnRlciB0aGlzIGNoYW5nZSBpcyB0aGUgdGltZSBvZiByZWNlaXZpbmcgYmxvY2sgcHJvcG9zYWwgTiB0byB0aGUgdG8gdGltZSBwcmVjb21taXQgb24gcHJvcG9zYWwgTi4KSXQgaXMgZXhwZWN0ZWQgdGhhdCB0aGlzIGRpZmZlcmVuY2UgaXMgdW5pbXBvcnRhbnQgaW4gcHJhY3RpY2UsIGFzIHRoaXMgdGltZSBpcyBpbiBwYXJhbGxlbCB0byBvbmUgcm91bmQgb2YgcDJwIGNvbW11bmljYXRpb24gZm9yIHByZXZvdGluZywgd2hpY2ggaXMgZXhwZWN0ZWQgdG8gYmUgc2lnbmlmaWNhbnRseSBsZXNzIHRoYW4gdGhlIHRpbWUgZm9yIHRoZSBjb25zZW5zdXMgZW5naW5lIHRvIGRlbGl2ZXIgYSBibG9jayB0byB0aGUgc3RhdGUgbWFjaGluZS48L3A+CjxoNSBpZD0idm90ZS1leHRlbnNpb24taXBjLW92ZXJoZWFkIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3ZvdGUtZXh0ZW5zaW9uLWlwYy1vdmVyaGVhZCI+IzwvYT4gVm90ZSBFeHRlbnNpb24gSVBDIG92ZXJoZWFkPC9oNT4KPHA+VGhpcyBoYXMgYSBzbWFsbCBhbW91bnQgb2YgZGF0YSwgYnV0IGRvZXMgaW5jdXIgYW4gSVBDIHJvdW5kIHRyaXAgZGVsYXkuIFRoaXMgSVBDIHJvdW5kIHRyaXAgZGVsYXkgaXMgcHJldHR5IG5lZ2xpZ2libGUgYXMgY29tcGFyZWQgdGhlIHZhcmlhbmNlIGluIHZvdGUgZ29zc2lwIHRpbWUuICh0aGUgSVBDIGRlbGF5IGlzIHR5cGljYWxseSBvbiB0aGUgb3JkZXIgb2YgMTAgbWljcm9zZWNvbmRzKTwvcD4KPGgyIGlkPSJzdGF0dXMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjc3RhdHVzIj4jPC9hPiBTdGF0dXM8L2gyPgo8cD5Qcm9wb3NlZDwvcD4KPGgyIGlkPSJjb25zZXF1ZW5jZXMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjY29uc2VxdWVuY2VzIj4jPC9hPiBDb25zZXF1ZW5jZXM8L2gyPgo8aDMgaWQ9InBvc2l0aXZlIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3Bvc2l0aXZlIj4jPC9hPiBQb3NpdGl2ZTwvaDM+Cjx1bD4KPGxpPkVuYWJsZXMgYSBsYXJnZSBudW1iZXIgb2YgbmV3IGZlYXR1cmVzIGZvciBhcHBsaWNhdGlvbnM8L2xpPgo8bGk+U3VwcG9ydHMgYm90aCBpbW1lZGlhdGUgYW5kIGRlbGF5ZWQgZXhlY3V0aW9uIG1vZGVsczwvbGk+CjxsaT5BbGxvd3MgYXBwbGljYXRpb24gc3BlY2lmaWMgZGF0YSBmcm9tIGVhY2ggdmFsaWRhdG9yPC9saT4KPGxpPkFsbG93cyBmb3IgYmF0Y2ggb3B0aW1pemF0aW9ucyBhY3Jvc3MgdHhzLCBhbmQgdm90ZXM8L2xpPgo8L3VsPgo8aDMgaWQ9Im5lZ2F0aXZlIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI25lZ2F0aXZlIj4jPC9hPiBOZWdhdGl2ZTwvaDM+Cjx1bD4KPGxpPgo8cD5UaGlzIGlzIGEgYnJlYWtpbmcgY2hhbmdlIHRvIGFsbCBleGlzdGluZyBBQkNJIGNsaWVudHMsIGhvd2V2ZXIgdGhlIGFwcGxpY2F0aW9uIHNob3VsZCBiZSBhYmxlIHRvIGhhdmUgYSB0aGluIHdyYXBwZXIgdG8gcmVwbGljYXRlIGV4aXN0aW5nIEFCQ0kgYmVoYXZpb3IuPC9wPgo8dWw+CjxsaT5QcmVwYXJlUHJvcG9zYWwgLSBjYW4gYmUgYSBuby1vcDwvbGk+CjxsaT5Qcm9jZXNzIFByb3Bvc2FsIC0gaGFzIHRvIGNhY2hlIHRoZSBibG9jaywgYnV0IGNhbiBvdGhlcndpc2UgYmUgYSBuby1vcDwvbGk+CjxsaT5Wb3RlIEV4dGVuc2lvbnMgLSBjYW4gYmUgYSBuby1vcDwvbGk+CjxsaT5GaW5hbGl6ZSBCbG9jayAtIENhbiBibGFjay1ib3ggY2FsbCBCZWdpbkJsb2NrLCBEZWxpdmVyVHgsIEVuZEJsb2NrIGdpdmVuIHRoZSBjYWNoZWQgYmxvY2sgZGF0YTwvbGk+CjwvdWw+CjwvbGk+CjxsaT4KPHA+Vm90ZSBFeHRlbnNpb25zIGFkZHMgbW9yZSBjb21wbGV4aXR5IHRvIGNvcmUgVGVuZGVybWludCBEYXRhIFN0cnVjdHVyZXM8L3A+CjwvbGk+CjxsaT4KPHA+QWxsb3dpbmcgYWx0ZXJuYXRlIGFsdGVybmF0ZSBleGVjdXRpb24gbW9kZWxzIHdpbGwgbGVhZCB0byBhIHByb2xpZmVyYXRpb24gb2YgbmV3IHdheXMgZm9yIGFwcGxpY2F0aW9ucyB0byB2aW9sYXRlIGV4cGVjdGVkIGd1YXJhbnRlZXMuPC9wPgo8L2xpPgo8L3VsPgo8aDMgaWQ9Im5ldXRyYWwiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjbmV1dHJhbCI+IzwvYT4gTmV1dHJhbDwvaDM+Cjx1bD4KPGxpPklQQyBvdmVyaGVhZCBjb25zaWRlcmF0aW9ucyBjaGFuZ2UsIGJ1dCBtb3N0bHkgZm9yIHRoZSBiZXR0ZXI8L2xpPgo8L3VsPgo8aDIgaWQ9InJlZmVyZW5jZXMiPjxhIGNsYXNzPSJoZWFkZXItYW5jaG9yIiBocmVmPSIjcmVmZXJlbmNlcyI+IzwvYT4gUmVmZXJlbmNlczwvaDI+CjxwPlJlZmVyZW5jZSBmb3IgSVBDIGRlbGF5IGNvbnN0YW50czogPGEgaHJlZj0iaHR0cDovL3BhZ2VzLmNzLndpc2MuZWR1L35hZGl0eWF2L0V2YWx1YXRpb25fb2ZfSW50ZXJfUHJvY2Vzc19Db21tdW5pY2F0aW9uX01lY2hhbmlzbXMucGRmIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIj5odHRwOi8vcGFnZXMuY3Mud2lzYy5lZHUvfmFkaXR5YXYvRXZhbHVhdGlvbl9vZl9JbnRlcl9Qcm9jZXNzX0NvbW11bmljYXRpb25fTWVjaGFuaXNtcy5wZGY8T3V0Ym91bmRMaW5rLz48L2E+PC9wPgo8aDMgaWQ9InNob3J0LWxpc3Qtb2YtYmxvY2tlZC1mZWF0dXJlcy1zY2FsaW5nLWltcHJvdmVtZW50cy13aXRoLXJlcXVpcmVkLWFiY2ktcGhhc2VzIj48YSBjbGFzcz0iaGVhZGVyLWFuY2hvciIgaHJlZj0iI3Nob3J0LWxpc3Qtb2YtYmxvY2tlZC1mZWF0dXJlcy1zY2FsaW5nLWltcHJvdmVtZW50cy13aXRoLXJlcXVpcmVkLWFiY2ktcGhhc2VzIj4jPC9hPiBTaG9ydCBsaXN0IG9mIGJsb2NrZWQgZmVhdHVyZXMgLyBzY2FsaW5nIGltcHJvdmVtZW50cyB3aXRoIHJlcXVpcmVkIEFCQ0krKyBQaGFzZXM8L2gzPgo8dGFibGU+Cjx0aGVhZD4KPHRyPgo8dGggc3R5bGU9InRleHQtYWxpZ246bGVmdCI+RmVhdHVyZTwvdGg+Cjx0aCBzdHlsZT0idGV4dC1hbGlnbjpjZW50ZXIiPlByZXBhcmVQcm9wb3NhbDwvdGg+Cjx0aCBzdHlsZT0idGV4dC1hbGlnbjpjZW50ZXIiPlByb2Nlc3NQcm9wb3NhbDwvdGg+Cjx0aCBzdHlsZT0idGV4dC1hbGlnbjpjZW50ZXIiPlZvdGUgRXh0ZW5zaW9uczwvdGg+CjwvdHI+CjwvdGhlYWQ+Cjx0Ym9keT4KPHRyPgo8dGQgc3R5bGU9InRleHQtYWxpZ246bGVmdCI+VHggYmFzZWQgc2lnbmF0dXJlIGFnZ3JlZ2F0aW9uPC90ZD4KPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOmNlbnRlciI+WDwvdGQ+Cjx0ZCBzdHlsZT0idGV4dC1hbGlnbjpjZW50ZXIiPjwvdGQ+Cjx0ZCBzdHlsZT0idGV4dC1hbGlnbjpjZW50ZXIiPjwvdGQ+CjwvdHI+Cjx0cj4KPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOmxlZnQiPlNOQVJLIHByb29mIG9mIHZhbGlkIHN0YXRlIHRyYW5zaXRpb248L3RkPgo8dGQgc3R5bGU9InRleHQtYWxpZ246Y2VudGVyIj5YPC90ZD4KPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOmNlbnRlciI+PC90ZD4KPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOmNlbnRlciI+PC90ZD4KPC90cj4KPHRyPgo8dGQgc3R5bGU9InRleHQtYWxpZ246bGVmdCI+VmFsaWRhdG9yIHByb3ZpZGVkIGF1dGhlbnRpY2F0aW9uIHBhdGhzIGluIHN0YXRlbGVzcyBibG9ja2NoYWluczwvdGQ+Cjx0ZCBzdHlsZT0idGV4dC1hbGlnbjpjZW50ZXIiPlg8L3RkPgo8dGQgc3R5bGU9InRleHQtYWxpZ246Y2VudGVyIj48L3RkPgo8dGQgc3R5bGU9InRleHQtYWxpZ246Y2VudGVyIj48L3RkPgo8L3RyPgo8dHI+Cjx0ZCBzdHlsZT0idGV4dC1hbGlnbjpsZWZ0Ij5JbW1lZGlhdGUgRXhlY3V0aW9uPC90ZD4KPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOmNlbnRlciI+PC90ZD4KPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOmNlbnRlciI+WDwvdGQ+Cjx0ZCBzdHlsZT0idGV4dC1hbGlnbjpjZW50ZXIiPjwvdGQ+CjwvdHI+Cjx0cj4KPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOmxlZnQiPlNpbXBsZSBzb2Z0IGZvcmtzPC90ZD4KPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOmNlbnRlciI+PC90ZD4KPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOmNlbnRlciI+WDwvdGQ+Cjx0ZCBzdHlsZT0idGV4dC1hbGlnbjpjZW50ZXIiPjwvdGQ+CjwvdHI+Cjx0cj4KPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOmxlZnQiPlZhbGlkYXRvciBndWFyYW50ZWVkIElCQyBjb25uZWN0aW9uIGF0dGVtcHRzPC90ZD4KPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOmNlbnRlciI+PC90ZD4KPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOmNlbnRlciI+PC90ZD4KPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOmNlbnRlciI+WDwvdGQ+CjwvdHI+Cjx0cj4KPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOmxlZnQiPlZhbGlkYXRvciBiYXNlZCBwcmljZSBvcmFjbGVzPC90ZD4KPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOmNlbnRlciI+PC90ZD4KPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOmNlbnRlciI+PC90ZD4KPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOmNlbnRlciI+WDwvdGQ+CjwvdHI+Cjx0cj4KPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOmxlZnQiPkltbWVkaWF0ZSBFeGVjdXRpb24gd2l0aCBpbmNyZWFzZWQgdGltZSBmb3IgYmxvY2sgZXhlY3V0aW9uPC90ZD4KPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOmNlbnRlciI+WDwvdGQ+Cjx0ZCBzdHlsZT0idGV4dC1hbGlnbjpjZW50ZXIiPlg8L3RkPgo8dGQgc3R5bGU9InRleHQtYWxpZ246Y2VudGVyIj5YPC90ZD4KPC90cj4KPHRyPgo8dGQgc3R5bGU9InRleHQtYWxpZ246bGVmdCI+VGhyZXNob2xkIEVuY3J5cHRlZCB0eHM8L3RkPgo8dGQgc3R5bGU9InRleHQtYWxpZ246Y2VudGVyIj5YPC90ZD4KPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOmNlbnRlciI+WDwvdGQ+Cjx0ZCBzdHlsZT0idGV4dC1hbGlnbjpjZW50ZXIiPlg8L3RkPgo8L3RyPgo8L3Rib2R5Pgo8L3RhYmxlPgo8L0NvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yPgo="},null]}